node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "global_step"
    }
  }
}
node {
  name: "global_step/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/Assign"
  op: "AssignVariableOp"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "global_step/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond"
  op: "If"
  input: "global_step/VarIsInitializedOp"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "Tcond"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tin"
    value {
      list {
        type: DT_RESOURCE
        type: DT_INT64
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_INT64
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
        i: 1
      }
    }
  }
  attr {
    key: "else_branch"
    value {
      func {
        name: "global_step_cond_false_7"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "then_branch"
    value {
      func {
        name: "global_step_cond_true_6"
      }
    }
  }
}
node {
  name: "global_step/cond/Identity"
  op: "Identity"
  input: "global_step/cond"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "AddV2"
  input: "global_step/cond/Identity"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "args_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 2
          }
        }
        string_val: "/home/dark/Documents/GitHub/lstm_tracker//data/kitti_tracks_{}.json"
        string_val: "/home/dark/Documents/GitHub/lstm_tracker//data/mot_tracks_{}.json"
      }
    }
  }
}
node {
  name: "args_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train"
      }
    }
  }
}
node {
  name: "normalize_element/component_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TensorDataset"
  op: "TensorDataset"
  input: "normalize_element/component_0"
  device: "/device:CPU:0"
  attr {
    key: "Toutput_types"
    value {
      list {
        type: DT_INT32
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "metadata"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_DATASET
      args {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_TENSOR
          args {
            type_id: TFT_INT32
          }
        }
      }
    }
  }
}
node {
  name: "FlatMapDataset"
  op: "FlatMapDataset"
  input: "TensorDataset"
  input: "args_0"
  input: "args_1"
  device: "/device:CPU:0"
  attr {
    key: "Targuments"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_Dataset_flat_map_flat_map_fn_49"
        attr {
          key: "_tf_data_function"
          value {
            b: true
          }
        }
      }
    }
  }
  attr {
    key: "metadata"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_DATASET
      args {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_TENSOR
          args {
            type_id: TFT_FLOAT
          }
        }
        args {
          type_id: TFT_TENSOR
          args {
            type_id: TFT_FLOAT
          }
        }
      }
    }
  }
}
node {
  name: "count"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "RepeatDataset"
  op: "RepeatDataset"
  input: "FlatMapDataset"
  input: "count"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "metadata"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_DATASET
      args {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_TENSOR
          args {
            type_id: TFT_FLOAT
          }
        }
        args {
          type_id: TFT_TENSOR
          args {
            type_id: TFT_FLOAT
          }
        }
      }
    }
  }
}
node {
  name: "batch_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 128
      }
    }
  }
}
node {
  name: "drop_remainder"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "BatchDatasetV2"
  op: "BatchDatasetV2"
  input: "RepeatDataset"
  input: "batch_size"
  input: "drop_remainder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "metadata"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "parallel_copy"
    value {
      b: false
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_DATASET
      args {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_TENSOR
          args {
            type_id: TFT_FLOAT
          }
        }
        args {
          type_id: TFT_TENSOR
          args {
            type_id: TFT_FLOAT
          }
        }
      }
    }
  }
}
node {
  name: "buffer_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 128
      }
    }
  }
}
node {
  name: "PrefetchDataset"
  op: "PrefetchDataset"
  input: "BatchDatasetV2"
  input: "buffer_size"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchDatasetV2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "buffer_size_min"
    value {
      i: 0
    }
  }
  attr {
    key: "legacy_autotune"
    value {
      b: true
    }
  }
  attr {
    key: "metadata"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "slack_period"
    value {
      i: 0
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_DATASET
      args {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_TENSOR
          args {
            type_id: TFT_FLOAT
          }
        }
        args {
          type_id: TFT_TENSOR
          args {
            type_id: TFT_FLOAT
          }
        }
      }
    }
  }
}
node {
  name: "IteratorV2"
  op: "IteratorV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchDatasetV2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "MakeIterator"
  op: "MakeIterator"
  input: "PrefetchDataset"
  input: "IteratorV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchDatasetV2"
      }
    }
  }
}
node {
  name: "IteratorToStringHandle"
  op: "IteratorToStringHandle"
  input: "IteratorV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchDatasetV2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "IteratorGetNext"
  op: "IteratorGetNext"
  input: "IteratorV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BatchDatasetV2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
          dim {
            size: 13
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "input_tensor"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 10
        }
        dim {
          size: 13
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.20628425478935242
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20628425478935242
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel/Initializer/random_uniform/max"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel/Initializer/random_uniform/RandomUniform"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel/Initializer/random_uniform/mul"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 13
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel"
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel/Assign"
  op: "AssignVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/random_normal"
  op: "AddV2"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/random_normal/mul"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/Qr"
  op: "Qr"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/DiagPart"
  op: "DiagPart"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/Sign"
  op: "Sign"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/mul"
  op: "Mul"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/Qr"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/matrix_transpose/transpose"
  op: "Transpose"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/mul"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/Reshape"
  op: "Reshape"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/matrix_transpose/transpose"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/mul_1"
  op: "Mul"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/mul_1/x"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Assign"
  op: "AssignVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Initializer/mul_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias/Initializer/zeros_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias/Initializer/concat/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias/Initializer/concat"
  op: "ConcatV2"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias/Initializer/zeros"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias/Initializer/ones"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias/Initializer/zeros_1"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias/Initializer/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias"
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias/Assign"
  op: "AssignVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias/Initializer/concat"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.19364917278289795
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.19364917278289795
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel/Initializer/random_uniform/max"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel/Initializer/random_uniform/mul"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel"
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/random_normal"
  op: "AddV2"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/random_normal/mul"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/Qr"
  op: "Qr"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/DiagPart"
  op: "DiagPart"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/Sign"
  op: "Sign"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/mul"
  op: "Mul"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/Qr"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/matrix_transpose/transpose"
  op: "Transpose"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/mul"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/Reshape"
  op: "Reshape"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/matrix_transpose/transpose"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/mul_1"
  op: "Mul"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/mul_1/x"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Assign"
  op: "AssignVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Initializer/mul_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias/Initializer/zeros_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias/Initializer/concat/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias/Initializer/concat"
  op: "ConcatV2"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias/Initializer/zeros"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias/Initializer/ones"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias/Initializer/zeros_1"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias/Initializer/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias"
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias/Assign"
  op: "AssignVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias/Initializer/concat"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_net/Shape"
  op: "Shape"
  input: "input_tensor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_net/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_net/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_net/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_net/strided_slice"
  op: "StridedSlice"
  input: "RNN_net/Shape"
  input: "RNN_net/strided_slice/stack"
  input: "RNN_net/strided_slice/stack_1"
  input: "RNN_net/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RNN_net/zeros/packed/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "RNN_net/zeros/packed"
  op: "Pack"
  input: "RNN_net/strided_slice"
  input: "RNN_net/zeros/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RNN_net/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN_net/zeros"
  op: "Fill"
  input: "RNN_net/zeros/packed"
  input: "RNN_net/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_net/zeros_1/packed/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "RNN_net/zeros_1/packed"
  op: "Pack"
  input: "RNN_net/strided_slice"
  input: "RNN_net/zeros_1/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RNN_net/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN_net/zeros_1"
  op: "Fill"
  input: "RNN_net/zeros_1/packed"
  input: "RNN_net/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_net/zeros_2/packed/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "RNN_net/zeros_2/packed"
  op: "Pack"
  input: "RNN_net/strided_slice"
  input: "RNN_net/zeros_2/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RNN_net/zeros_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN_net/zeros_2"
  op: "Fill"
  input: "RNN_net/zeros_2/packed"
  input: "RNN_net/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_net/zeros_3/packed/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "RNN_net/zeros_3/packed"
  op: "Pack"
  input: "RNN_net/strided_slice"
  input: "RNN_net/zeros_3/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "RNN_net/zeros_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN_net/zeros_3"
  op: "Fill"
  input: "RNN_net/zeros_3/packed"
  input: "RNN_net/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_net/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/transpose"
  op: "Transpose"
  input: "input_tensor"
  input: "RNN_net/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/Shape_1"
  op: "Shape"
  input: "RNN_net/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RNN_net/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_net/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_net/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_net/strided_slice_1"
  op: "StridedSlice"
  input: "RNN_net/Shape_1"
  input: "RNN_net/strided_slice_1/stack"
  input: "RNN_net/strided_slice_1/stack_1"
  input: "RNN_net/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RNN_net/TensorArrayV2/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/TensorArrayV2"
  op: "TensorListReserve"
  input: "RNN_net/TensorArrayV2/element_shape"
  input: "RNN_net/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/TensorArrayUnstack/TensorListFromTensor/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\r\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/TensorArrayUnstack/TensorListFromTensor"
  op: "TensorListFromTensor"
  input: "RNN_net/transpose"
  input: "RNN_net/TensorArrayUnstack/TensorListFromTensor/element_shape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_net/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_net/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_net/strided_slice_2"
  op: "StridedSlice"
  input: "RNN_net/transpose"
  input: "RNN_net/strided_slice_2/stack"
  input: "RNN_net/strided_slice_2/stack_1"
  input: "RNN_net/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/split/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/split"
  op: "Split"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/split/split_dim"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/split/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/MatMul"
  op: "MatMul"
  input: "RNN_net/strided_slice_2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/MatMul_1"
  op: "MatMul"
  input: "RNN_net/strided_slice_2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/MatMul_2"
  op: "MatMul"
  input: "RNN_net/strided_slice_2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/MatMul_3"
  op: "MatMul"
  input: "RNN_net/strided_slice_2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/split_1/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/split_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/split_1"
  op: "Split"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/split_1/split_dim"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/split_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/BiasAdd"
  op: "BiasAdd"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/MatMul"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/BiasAdd_1"
  op: "BiasAdd"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/MatMul_1"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/BiasAdd_2"
  op: "BiasAdd"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/MatMul_2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/BiasAdd_3"
  op: "BiasAdd"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/MatMul_3"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice"
  op: "StridedSlice"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice/stack"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice/stack_1"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/MatMul_4"
  op: "MatMul"
  input: "RNN_net/zeros"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/add"
  op: "AddV2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/BiasAdd"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Mul"
  op: "Mul"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/add"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Add_1"
  op: "AddV2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Mul"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/clip_by_value/Minimum"
  op: "Minimum"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Add_1"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/clip_by_value/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/clip_by_value"
  op: "Maximum"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/clip_by_value/Minimum"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice_1"
  op: "StridedSlice"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/ReadVariableOp_1"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice_1/stack"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice_1/stack_1"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/MatMul_5"
  op: "MatMul"
  input: "RNN_net/zeros"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/add_2"
  op: "AddV2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/BiasAdd_1"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Mul_1"
  op: "Mul"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/add_2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Add_3"
  op: "AddV2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Mul_1"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/clip_by_value_1/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Add_3"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/clip_by_value_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/clip_by_value_1"
  op: "Maximum"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/clip_by_value_1/Minimum"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/mul_2"
  op: "Mul"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/clip_by_value_1"
  input: "RNN_net/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice_2"
  op: "StridedSlice"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/ReadVariableOp_2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice_2/stack"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice_2/stack_1"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/MatMul_6"
  op: "MatMul"
  input: "RNN_net/zeros"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/add_4"
  op: "AddV2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/BiasAdd_2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/MatMul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Tanh"
  op: "Tanh"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/mul_3"
  op: "Mul"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/clip_by_value"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/add_5"
  op: "AddV2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/mul_2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice_3"
  op: "StridedSlice"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/ReadVariableOp_3"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice_3/stack"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice_3/stack_1"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/MatMul_7"
  op: "MatMul"
  input: "RNN_net/zeros"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/add_6"
  op: "AddV2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/BiasAdd_3"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/MatMul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Mul_4"
  op: "Mul"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/add_6"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Add_7"
  op: "AddV2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Mul_4"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/clip_by_value_2/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/clip_by_value_2/Minimum"
  op: "Minimum"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Add_7"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/clip_by_value_2/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/clip_by_value_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/clip_by_value_2"
  op: "Maximum"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/clip_by_value_2/Minimum"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/clip_by_value_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Tanh_1"
  op: "Tanh"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/mul_5"
  op: "Mul"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/clip_by_value_2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/split/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/split"
  op: "Split"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/split/split_dim"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/split/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/MatMul"
  op: "MatMul"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/mul_5"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/MatMul_1"
  op: "MatMul"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/mul_5"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/MatMul_2"
  op: "MatMul"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/mul_5"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/MatMul_3"
  op: "MatMul"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_0/mul_5"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/split_1/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/split_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/split_1"
  op: "Split"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/split_1/split_dim"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/split_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/BiasAdd"
  op: "BiasAdd"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/MatMul"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/BiasAdd_1"
  op: "BiasAdd"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/MatMul_1"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/BiasAdd_2"
  op: "BiasAdd"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/MatMul_2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/BiasAdd_3"
  op: "BiasAdd"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/MatMul_3"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice"
  op: "StridedSlice"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice/stack"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice/stack_1"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/MatMul_4"
  op: "MatMul"
  input: "RNN_net/zeros_2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/add"
  op: "AddV2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/BiasAdd"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Mul"
  op: "Mul"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/add"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Add_1"
  op: "AddV2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Mul"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/clip_by_value/Minimum"
  op: "Minimum"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Add_1"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/clip_by_value/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/clip_by_value"
  op: "Maximum"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/clip_by_value/Minimum"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice_1"
  op: "StridedSlice"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/ReadVariableOp_1"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice_1/stack"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice_1/stack_1"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/MatMul_5"
  op: "MatMul"
  input: "RNN_net/zeros_2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/add_2"
  op: "AddV2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/BiasAdd_1"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Mul_1"
  op: "Mul"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/add_2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Add_3"
  op: "AddV2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Mul_1"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/clip_by_value_1/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Add_3"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/clip_by_value_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/clip_by_value_1"
  op: "Maximum"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/clip_by_value_1/Minimum"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/mul_2"
  op: "Mul"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/clip_by_value_1"
  input: "RNN_net/zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice_2"
  op: "StridedSlice"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/ReadVariableOp_2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice_2/stack"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice_2/stack_1"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/MatMul_6"
  op: "MatMul"
  input: "RNN_net/zeros_2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/add_4"
  op: "AddV2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/BiasAdd_2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/MatMul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Tanh"
  op: "Tanh"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/mul_3"
  op: "Mul"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/clip_by_value"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/add_5"
  op: "AddV2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/mul_2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice_3"
  op: "StridedSlice"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/ReadVariableOp_3"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice_3/stack"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice_3/stack_1"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/MatMul_7"
  op: "MatMul"
  input: "RNN_net/zeros_2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/add_6"
  op: "AddV2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/BiasAdd_3"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/MatMul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Mul_4"
  op: "Mul"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/add_6"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Add_7"
  op: "AddV2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Mul_4"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/clip_by_value_2/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/clip_by_value_2/Minimum"
  op: "Minimum"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Add_7"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/clip_by_value_2/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/clip_by_value_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/clip_by_value_2"
  op: "Maximum"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/clip_by_value_2/Minimum"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/clip_by_value_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Tanh_1"
  op: "Tanh"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/mul_5"
  op: "Mul"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/clip_by_value_2"
  input: "RNN_net/stacked_rnn_cells_1/LSTM_Layer_1/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/TensorArrayV2_1/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/TensorArrayV2_1/num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_net/TensorArrayV2_1"
  op: "TensorListReserve"
  input: "RNN_net/TensorArrayV2_1/element_shape"
  input: "RNN_net/TensorArrayV2_1/num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_net/while/maximum_iterations"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/loop_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_net/while/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const"
  input: "RNN_net/while/EmptyTensorList/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_1/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_1"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_1"
  input: "RNN_net/while/EmptyTensorList_1/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_2/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_2"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_2"
  input: "RNN_net/while/EmptyTensorList_2/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_3/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_3/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_3"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_3/element_shape"
  input: "RNN_net/while/EmptyTensorList_3/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_4/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_4/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_4"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_4/element_shape"
  input: "RNN_net/while/EmptyTensorList_4/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_5/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_5/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_5"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_5/element_shape"
  input: "RNN_net/while/EmptyTensorList_5/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_6/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_6/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_6"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_6/element_shape"
  input: "RNN_net/while/EmptyTensorList_6/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_7/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_7/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_7"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_7/element_shape"
  input: "RNN_net/while/EmptyTensorList_7/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_8/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\r\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_8/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_8"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_8/element_shape"
  input: "RNN_net/while/EmptyTensorList_8/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_9/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_9"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_3"
  input: "RNN_net/while/EmptyTensorList_9/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_10/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_10/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_10"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_10/element_shape"
  input: "RNN_net/while/EmptyTensorList_10/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_11/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_11/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_11"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_11/element_shape"
  input: "RNN_net/while/EmptyTensorList_11/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_12/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_12/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_12"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_12/element_shape"
  input: "RNN_net/while/EmptyTensorList_12/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_13/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_13/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_13"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_13/element_shape"
  input: "RNN_net/while/EmptyTensorList_13/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_14/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_14/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_14"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_14/element_shape"
  input: "RNN_net/while/EmptyTensorList_14/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_15/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_15/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_15"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_15/element_shape"
  input: "RNN_net/while/EmptyTensorList_15/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_16/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_16/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_16"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_16/element_shape"
  input: "RNN_net/while/EmptyTensorList_16/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_17/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_17/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_17"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_17/element_shape"
  input: "RNN_net/while/EmptyTensorList_17/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_18/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_18/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_18"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_18/element_shape"
  input: "RNN_net/while/EmptyTensorList_18/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_19/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_19"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_4"
  input: "RNN_net/while/EmptyTensorList_19/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_20/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_20/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_20"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_20/element_shape"
  input: "RNN_net/while/EmptyTensorList_20/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_21/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_21/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_21"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_21/element_shape"
  input: "RNN_net/while/EmptyTensorList_21/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_22/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_22/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_22"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_22/element_shape"
  input: "RNN_net/while/EmptyTensorList_22/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_23/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_23/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_23"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_23/element_shape"
  input: "RNN_net/while/EmptyTensorList_23/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_24/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_24/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_24"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_24/element_shape"
  input: "RNN_net/while/EmptyTensorList_24/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_25/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_25/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_25"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_25/element_shape"
  input: "RNN_net/while/EmptyTensorList_25/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_26/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_26/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_26"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_26/element_shape"
  input: "RNN_net/while/EmptyTensorList_26/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_27/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_27/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_27"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_27/element_shape"
  input: "RNN_net/while/EmptyTensorList_27/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_28/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_28/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_28"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_28/element_shape"
  input: "RNN_net/while/EmptyTensorList_28/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_29/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_29/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_29"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_29/element_shape"
  input: "RNN_net/while/EmptyTensorList_29/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_30/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_30/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_30"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_30/element_shape"
  input: "RNN_net/while/EmptyTensorList_30/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_31/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_31/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_31"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_31/element_shape"
  input: "RNN_net/while/EmptyTensorList_31/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_32/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_32/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_32"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_32/element_shape"
  input: "RNN_net/while/EmptyTensorList_32/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_33/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_33/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_33"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_33/element_shape"
  input: "RNN_net/while/EmptyTensorList_33/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_34/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_34/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_34"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_34/element_shape"
  input: "RNN_net/while/EmptyTensorList_34/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_35/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_35/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_35"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_35/element_shape"
  input: "RNN_net/while/EmptyTensorList_35/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_36/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_36"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_5"
  input: "RNN_net/while/EmptyTensorList_36/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_37/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_37"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_6"
  input: "RNN_net/while/EmptyTensorList_37/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_38/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_38/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_38"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_38/element_shape"
  input: "RNN_net/while/EmptyTensorList_38/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_39/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_39/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_39"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_39/element_shape"
  input: "RNN_net/while/EmptyTensorList_39/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_40/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_40"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_7"
  input: "RNN_net/while/EmptyTensorList_40/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_41/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_41/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_41"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_41/element_shape"
  input: "RNN_net/while/EmptyTensorList_41/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_42/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_42"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_8"
  input: "RNN_net/while/EmptyTensorList_42/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_43/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_43/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_43"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_43/element_shape"
  input: "RNN_net/while/EmptyTensorList_43/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_44/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_44/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_44"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_44/element_shape"
  input: "RNN_net/while/EmptyTensorList_44/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_45/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_45/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_45"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_45/element_shape"
  input: "RNN_net/while/EmptyTensorList_45/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_46/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_46/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_46"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_46/element_shape"
  input: "RNN_net/while/EmptyTensorList_46/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_47/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_47/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_47"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_47/element_shape"
  input: "RNN_net/while/EmptyTensorList_47/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_48/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_48/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_48"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_48/element_shape"
  input: "RNN_net/while/EmptyTensorList_48/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_49/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_49/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_49"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_49/element_shape"
  input: "RNN_net/while/EmptyTensorList_49/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_50/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_50/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_50"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_50/element_shape"
  input: "RNN_net/while/EmptyTensorList_50/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_51/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_51"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_9"
  input: "RNN_net/while/EmptyTensorList_51/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_52/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_52"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_10"
  input: "RNN_net/while/EmptyTensorList_52/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_53/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_53/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_53"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_53/element_shape"
  input: "RNN_net/while/EmptyTensorList_53/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_54/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_54/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_54"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_54/element_shape"
  input: "RNN_net/while/EmptyTensorList_54/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_55/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_55"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_11"
  input: "RNN_net/while/EmptyTensorList_55/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_56/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_56/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_56"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_56/element_shape"
  input: "RNN_net/while/EmptyTensorList_56/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_57/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_57"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_12"
  input: "RNN_net/while/EmptyTensorList_57/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_58/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_58/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_58"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_58/element_shape"
  input: "RNN_net/while/EmptyTensorList_58/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_59/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_59/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_59"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_59/element_shape"
  input: "RNN_net/while/EmptyTensorList_59/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_60/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_60/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_60"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_60/element_shape"
  input: "RNN_net/while/EmptyTensorList_60/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_61/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_61/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_61"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_61/element_shape"
  input: "RNN_net/while/EmptyTensorList_61/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_62/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_62/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_62"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_62/element_shape"
  input: "RNN_net/while/EmptyTensorList_62/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_63/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_63/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_63"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_63/element_shape"
  input: "RNN_net/while/EmptyTensorList_63/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_64/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_64/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_64"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_64/element_shape"
  input: "RNN_net/while/EmptyTensorList_64/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_65/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_65/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_65"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_65/element_shape"
  input: "RNN_net/while/EmptyTensorList_65/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_66/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_66/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_66"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_66/element_shape"
  input: "RNN_net/while/EmptyTensorList_66/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_67/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_67/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_67"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_67/element_shape"
  input: "RNN_net/while/EmptyTensorList_67/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_68/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_68/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_68"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_68/element_shape"
  input: "RNN_net/while/EmptyTensorList_68/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_69/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_69/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_69"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_69/element_shape"
  input: "RNN_net/while/EmptyTensorList_69/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_70/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_70/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_70"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_70/element_shape"
  input: "RNN_net/while/EmptyTensorList_70/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_71/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_71/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_71"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_71/element_shape"
  input: "RNN_net/while/EmptyTensorList_71/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_72/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_72/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_72"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_72/element_shape"
  input: "RNN_net/while/EmptyTensorList_72/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_73/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_73/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_73"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_73/element_shape"
  input: "RNN_net/while/EmptyTensorList_73/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_74/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_74/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_74"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_74/element_shape"
  input: "RNN_net/while/EmptyTensorList_74/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_75/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_75/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_75"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_75/element_shape"
  input: "RNN_net/while/EmptyTensorList_75/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_76/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_76/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_76"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_76/element_shape"
  input: "RNN_net/while/EmptyTensorList_76/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_77/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_77"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_13"
  input: "RNN_net/while/EmptyTensorList_77/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_14"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_78/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_78"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_14"
  input: "RNN_net/while/EmptyTensorList_78/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_79/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_79/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_79"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_79/element_shape"
  input: "RNN_net/while/EmptyTensorList_79/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_80/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_80/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_80"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_80/element_shape"
  input: "RNN_net/while/EmptyTensorList_80/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_15"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_81/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_81"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_15"
  input: "RNN_net/while/EmptyTensorList_81/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_82/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_82/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_82"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_82/element_shape"
  input: "RNN_net/while/EmptyTensorList_82/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_16"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_83/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_83"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_16"
  input: "RNN_net/while/EmptyTensorList_83/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_84/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_84/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_84"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_84/element_shape"
  input: "RNN_net/while/EmptyTensorList_84/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_85/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_85/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_85"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_85/element_shape"
  input: "RNN_net/while/EmptyTensorList_85/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_86/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_86/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_86"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_86/element_shape"
  input: "RNN_net/while/EmptyTensorList_86/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_17"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_87/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_87"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_17"
  input: "RNN_net/while/EmptyTensorList_87/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_88/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_88/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_88"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_88/element_shape"
  input: "RNN_net/while/EmptyTensorList_88/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_89/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_89/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_89"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_89/element_shape"
  input: "RNN_net/while/EmptyTensorList_89/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_90/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_90/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_90"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_90/element_shape"
  input: "RNN_net/while/EmptyTensorList_90/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_91/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_91/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_91"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_91/element_shape"
  input: "RNN_net/while/EmptyTensorList_91/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_92/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_92/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_92"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_92/element_shape"
  input: "RNN_net/while/EmptyTensorList_92/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_93/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_93/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_93"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_93/element_shape"
  input: "RNN_net/while/EmptyTensorList_93/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_94/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_94/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_94"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_94/element_shape"
  input: "RNN_net/while/EmptyTensorList_94/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_95/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_95/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_95"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_95/element_shape"
  input: "RNN_net/while/EmptyTensorList_95/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_96/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_96/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_96"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_96/element_shape"
  input: "RNN_net/while/EmptyTensorList_96/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_18"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_97/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_97"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_18"
  input: "RNN_net/while/EmptyTensorList_97/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_98/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_98/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_98"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_98/element_shape"
  input: "RNN_net/while/EmptyTensorList_98/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_99/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_99/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_99"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_99/element_shape"
  input: "RNN_net/while/EmptyTensorList_99/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_100/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_100/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_100"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_100/element_shape"
  input: "RNN_net/while/EmptyTensorList_100/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_101/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_101/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_101"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_101/element_shape"
  input: "RNN_net/while/EmptyTensorList_101/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_102/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_102/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_102"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_102/element_shape"
  input: "RNN_net/while/EmptyTensorList_102/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_103/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_103/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_103"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_103/element_shape"
  input: "RNN_net/while/EmptyTensorList_103/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_104/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_104/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_104"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_104/element_shape"
  input: "RNN_net/while/EmptyTensorList_104/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_105/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_105/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_105"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_105/element_shape"
  input: "RNN_net/while/EmptyTensorList_105/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_106/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_106/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_106"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_106/element_shape"
  input: "RNN_net/while/EmptyTensorList_106/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_107/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_107/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_107"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_107/element_shape"
  input: "RNN_net/while/EmptyTensorList_107/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_108/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_108/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_108"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_108/element_shape"
  input: "RNN_net/while/EmptyTensorList_108/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_109/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_109/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_109"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_109/element_shape"
  input: "RNN_net/while/EmptyTensorList_109/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_110/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_110/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_110"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_110/element_shape"
  input: "RNN_net/while/EmptyTensorList_110/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_111/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_111/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_111"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_111/element_shape"
  input: "RNN_net/while/EmptyTensorList_111/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_112/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_112/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_112"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_112/element_shape"
  input: "RNN_net/while/EmptyTensorList_112/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_113/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_113/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_113"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_113/element_shape"
  input: "RNN_net/while/EmptyTensorList_113/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_19"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_114/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_114"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_19"
  input: "RNN_net/while/EmptyTensorList_114/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_20"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_115/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_115"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_20"
  input: "RNN_net/while/EmptyTensorList_115/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_116/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_116/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_116"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_116/element_shape"
  input: "RNN_net/while/EmptyTensorList_116/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_117/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_117/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_117"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_117/element_shape"
  input: "RNN_net/while/EmptyTensorList_117/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_21"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_118/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_118"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_21"
  input: "RNN_net/while/EmptyTensorList_118/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_119/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_119/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_119"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_119/element_shape"
  input: "RNN_net/while/EmptyTensorList_119/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_22"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_120/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_120"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_22"
  input: "RNN_net/while/EmptyTensorList_120/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_121/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_121/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_121"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_121/element_shape"
  input: "RNN_net/while/EmptyTensorList_121/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_122/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_122/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_122"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_122/element_shape"
  input: "RNN_net/while/EmptyTensorList_122/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_123/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_123/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_123"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_123/element_shape"
  input: "RNN_net/while/EmptyTensorList_123/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_124/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_124/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_124"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_124/element_shape"
  input: "RNN_net/while/EmptyTensorList_124/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_125/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_125/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_125"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_125/element_shape"
  input: "RNN_net/while/EmptyTensorList_125/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_126/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_126/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_126"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_126/element_shape"
  input: "RNN_net/while/EmptyTensorList_126/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_127/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_127/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_127"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_127/element_shape"
  input: "RNN_net/while/EmptyTensorList_127/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_128/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_128/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_128"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_128/element_shape"
  input: "RNN_net/while/EmptyTensorList_128/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_23"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_129/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_129"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_23"
  input: "RNN_net/while/EmptyTensorList_129/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_24"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_130/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_130"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_24"
  input: "RNN_net/while/EmptyTensorList_130/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_131/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_131/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_131"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_131/element_shape"
  input: "RNN_net/while/EmptyTensorList_131/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_132/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_132/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_132"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_132/element_shape"
  input: "RNN_net/while/EmptyTensorList_132/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_25"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_133/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_133"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_25"
  input: "RNN_net/while/EmptyTensorList_133/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_134/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_134/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_134"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_134/element_shape"
  input: "RNN_net/while/EmptyTensorList_134/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_26"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_135/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_135"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_26"
  input: "RNN_net/while/EmptyTensorList_135/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_136/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_136/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_136"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_136/element_shape"
  input: "RNN_net/while/EmptyTensorList_136/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_137/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_137/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_137"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_137/element_shape"
  input: "RNN_net/while/EmptyTensorList_137/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_138/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_138/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_138"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_138/element_shape"
  input: "RNN_net/while/EmptyTensorList_138/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_139/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_139/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_139"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_139/element_shape"
  input: "RNN_net/while/EmptyTensorList_139/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_140/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_140/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_140"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_140/element_shape"
  input: "RNN_net/while/EmptyTensorList_140/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_141/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_141/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_141"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_141/element_shape"
  input: "RNN_net/while/EmptyTensorList_141/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_142/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_142/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_142"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_142/element_shape"
  input: "RNN_net/while/EmptyTensorList_142/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_143/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_143/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_143"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_143/element_shape"
  input: "RNN_net/while/EmptyTensorList_143/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_144/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_144/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_144"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_144/element_shape"
  input: "RNN_net/while/EmptyTensorList_144/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_145/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_145/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_145"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_145/element_shape"
  input: "RNN_net/while/EmptyTensorList_145/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_146/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_146/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_146"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_146/element_shape"
  input: "RNN_net/while/EmptyTensorList_146/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_147/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_147/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_147"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_147/element_shape"
  input: "RNN_net/while/EmptyTensorList_147/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_148/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_148/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_148"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_148/element_shape"
  input: "RNN_net/while/EmptyTensorList_148/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_149/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_149/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_149"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_149/element_shape"
  input: "RNN_net/while/EmptyTensorList_149/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_150/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_150/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_150"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_150/element_shape"
  input: "RNN_net/while/EmptyTensorList_150/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_151/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_151/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_151"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_151/element_shape"
  input: "RNN_net/while/EmptyTensorList_151/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_152/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_152/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_152"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_152/element_shape"
  input: "RNN_net/while/EmptyTensorList_152/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_153/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_153/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_153"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_153/element_shape"
  input: "RNN_net/while/EmptyTensorList_153/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_154/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_154/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_154"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_154/element_shape"
  input: "RNN_net/while/EmptyTensorList_154/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_27"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_155/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_155"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_27"
  input: "RNN_net/while/EmptyTensorList_155/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_28"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_156/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_156"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_28"
  input: "RNN_net/while/EmptyTensorList_156/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_157/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_157/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_157"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_157/element_shape"
  input: "RNN_net/while/EmptyTensorList_157/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_158/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_158/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_158"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_158/element_shape"
  input: "RNN_net/while/EmptyTensorList_158/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_29"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_159/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_159"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_29"
  input: "RNN_net/while/EmptyTensorList_159/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_160/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_160/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_160"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_160/element_shape"
  input: "RNN_net/while/EmptyTensorList_160/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_30"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_161/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_161"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_30"
  input: "RNN_net/while/EmptyTensorList_161/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_162/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_162/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_162"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_162/element_shape"
  input: "RNN_net/while/EmptyTensorList_162/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_163/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_163/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_163"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_163/element_shape"
  input: "RNN_net/while/EmptyTensorList_163/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_164/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_164/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_164"
  op: "EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_164/element_shape"
  input: "RNN_net/while/EmptyTensorList_164/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_31"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_165/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_165"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_31"
  input: "RNN_net/while/EmptyTensorList_165/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_32"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_166/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_166"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_32"
  input: "RNN_net/while/EmptyTensorList_166/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
    }
  }
}
node {
  name: "RNN_net/while/Const_33"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_167/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_167"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_33"
  input: "RNN_net/while/EmptyTensorList_167/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_34"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_168/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_168"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_34"
  input: "RNN_net/while/EmptyTensorList_168/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_35"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_169/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_169"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_35"
  input: "RNN_net/while/EmptyTensorList_169/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Const_36"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_170/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/while/EmptyTensorList_170"
  op: "EmptyTensorList"
  input: "RNN_net/while/Const_36"
  input: "RNN_net/while/EmptyTensorList_170/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "RNN_net/while"
  op: "While"
  input: "RNN_net/while/loop_counter"
  input: "RNN_net/while/maximum_iterations"
  input: "RNN_net/time"
  input: "RNN_net/TensorArrayV2_1"
  input: "RNN_net/zeros"
  input: "RNN_net/zeros_1"
  input: "RNN_net/zeros_2"
  input: "RNN_net/zeros_3"
  input: "RNN_net/strided_slice_1"
  input: "RNN_net/TensorArrayUnstack/TensorListFromTensor"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
  input: "RNN_net/while/EmptyTensorList"
  input: "RNN_net/while/EmptyTensorList_1"
  input: "RNN_net/while/EmptyTensorList_2"
  input: "RNN_net/while/EmptyTensorList_3"
  input: "RNN_net/while/EmptyTensorList_4"
  input: "RNN_net/while/EmptyTensorList_5"
  input: "RNN_net/while/EmptyTensorList_6"
  input: "RNN_net/while/EmptyTensorList_7"
  input: "RNN_net/while/EmptyTensorList_8"
  input: "RNN_net/while/EmptyTensorList_9"
  input: "RNN_net/while/EmptyTensorList_10"
  input: "RNN_net/while/EmptyTensorList_11"
  input: "RNN_net/while/EmptyTensorList_12"
  input: "RNN_net/while/EmptyTensorList_13"
  input: "RNN_net/while/EmptyTensorList_14"
  input: "RNN_net/while/EmptyTensorList_15"
  input: "RNN_net/while/EmptyTensorList_16"
  input: "RNN_net/while/EmptyTensorList_17"
  input: "RNN_net/while/EmptyTensorList_18"
  input: "RNN_net/while/EmptyTensorList_19"
  input: "RNN_net/while/EmptyTensorList_20"
  input: "RNN_net/while/EmptyTensorList_21"
  input: "RNN_net/while/EmptyTensorList_22"
  input: "RNN_net/while/EmptyTensorList_23"
  input: "RNN_net/while/EmptyTensorList_24"
  input: "RNN_net/while/EmptyTensorList_25"
  input: "RNN_net/while/EmptyTensorList_26"
  input: "RNN_net/while/EmptyTensorList_27"
  input: "RNN_net/while/EmptyTensorList_28"
  input: "RNN_net/while/EmptyTensorList_29"
  input: "RNN_net/while/EmptyTensorList_30"
  input: "RNN_net/while/EmptyTensorList_31"
  input: "RNN_net/while/EmptyTensorList_32"
  input: "RNN_net/while/EmptyTensorList_33"
  input: "RNN_net/while/EmptyTensorList_34"
  input: "RNN_net/while/EmptyTensorList_35"
  input: "RNN_net/while/EmptyTensorList_36"
  input: "RNN_net/while/EmptyTensorList_37"
  input: "RNN_net/while/EmptyTensorList_38"
  input: "RNN_net/while/EmptyTensorList_39"
  input: "RNN_net/while/EmptyTensorList_40"
  input: "RNN_net/while/EmptyTensorList_41"
  input: "RNN_net/while/EmptyTensorList_42"
  input: "RNN_net/while/EmptyTensorList_43"
  input: "RNN_net/while/EmptyTensorList_44"
  input: "RNN_net/while/EmptyTensorList_45"
  input: "RNN_net/while/EmptyTensorList_46"
  input: "RNN_net/while/EmptyTensorList_47"
  input: "RNN_net/while/EmptyTensorList_48"
  input: "RNN_net/while/EmptyTensorList_49"
  input: "RNN_net/while/EmptyTensorList_50"
  input: "RNN_net/while/EmptyTensorList_51"
  input: "RNN_net/while/EmptyTensorList_52"
  input: "RNN_net/while/EmptyTensorList_53"
  input: "RNN_net/while/EmptyTensorList_54"
  input: "RNN_net/while/EmptyTensorList_55"
  input: "RNN_net/while/EmptyTensorList_56"
  input: "RNN_net/while/EmptyTensorList_57"
  input: "RNN_net/while/EmptyTensorList_58"
  input: "RNN_net/while/EmptyTensorList_59"
  input: "RNN_net/while/EmptyTensorList_60"
  input: "RNN_net/while/EmptyTensorList_61"
  input: "RNN_net/while/EmptyTensorList_62"
  input: "RNN_net/while/EmptyTensorList_63"
  input: "RNN_net/while/EmptyTensorList_64"
  input: "RNN_net/while/EmptyTensorList_65"
  input: "RNN_net/while/EmptyTensorList_66"
  input: "RNN_net/while/EmptyTensorList_67"
  input: "RNN_net/while/EmptyTensorList_68"
  input: "RNN_net/while/EmptyTensorList_69"
  input: "RNN_net/while/EmptyTensorList_70"
  input: "RNN_net/while/EmptyTensorList_71"
  input: "RNN_net/while/EmptyTensorList_72"
  input: "RNN_net/while/EmptyTensorList_73"
  input: "RNN_net/while/EmptyTensorList_74"
  input: "RNN_net/while/EmptyTensorList_75"
  input: "RNN_net/while/EmptyTensorList_76"
  input: "RNN_net/while/EmptyTensorList_77"
  input: "RNN_net/while/EmptyTensorList_78"
  input: "RNN_net/while/EmptyTensorList_79"
  input: "RNN_net/while/EmptyTensorList_80"
  input: "RNN_net/while/EmptyTensorList_81"
  input: "RNN_net/while/EmptyTensorList_82"
  input: "RNN_net/while/EmptyTensorList_83"
  input: "RNN_net/while/EmptyTensorList_84"
  input: "RNN_net/while/EmptyTensorList_85"
  input: "RNN_net/while/EmptyTensorList_86"
  input: "RNN_net/while/EmptyTensorList_87"
  input: "RNN_net/while/EmptyTensorList_88"
  input: "RNN_net/while/EmptyTensorList_89"
  input: "RNN_net/while/EmptyTensorList_90"
  input: "RNN_net/while/EmptyTensorList_91"
  input: "RNN_net/while/EmptyTensorList_92"
  input: "RNN_net/while/EmptyTensorList_93"
  input: "RNN_net/while/EmptyTensorList_94"
  input: "RNN_net/while/EmptyTensorList_95"
  input: "RNN_net/while/EmptyTensorList_96"
  input: "RNN_net/while/EmptyTensorList_97"
  input: "RNN_net/while/EmptyTensorList_98"
  input: "RNN_net/while/EmptyTensorList_99"
  input: "RNN_net/while/EmptyTensorList_100"
  input: "RNN_net/while/EmptyTensorList_101"
  input: "RNN_net/while/EmptyTensorList_102"
  input: "RNN_net/while/EmptyTensorList_103"
  input: "RNN_net/while/EmptyTensorList_104"
  input: "RNN_net/while/EmptyTensorList_105"
  input: "RNN_net/while/EmptyTensorList_106"
  input: "RNN_net/while/EmptyTensorList_107"
  input: "RNN_net/while/EmptyTensorList_108"
  input: "RNN_net/while/EmptyTensorList_109"
  input: "RNN_net/while/EmptyTensorList_110"
  input: "RNN_net/while/EmptyTensorList_111"
  input: "RNN_net/while/EmptyTensorList_112"
  input: "RNN_net/while/EmptyTensorList_113"
  input: "RNN_net/while/EmptyTensorList_114"
  input: "RNN_net/while/EmptyTensorList_115"
  input: "RNN_net/while/EmptyTensorList_116"
  input: "RNN_net/while/EmptyTensorList_117"
  input: "RNN_net/while/EmptyTensorList_118"
  input: "RNN_net/while/EmptyTensorList_119"
  input: "RNN_net/while/EmptyTensorList_120"
  input: "RNN_net/while/EmptyTensorList_121"
  input: "RNN_net/while/EmptyTensorList_122"
  input: "RNN_net/while/EmptyTensorList_123"
  input: "RNN_net/while/EmptyTensorList_124"
  input: "RNN_net/while/EmptyTensorList_125"
  input: "RNN_net/while/EmptyTensorList_126"
  input: "RNN_net/while/EmptyTensorList_127"
  input: "RNN_net/while/EmptyTensorList_128"
  input: "RNN_net/while/EmptyTensorList_129"
  input: "RNN_net/while/EmptyTensorList_130"
  input: "RNN_net/while/EmptyTensorList_131"
  input: "RNN_net/while/EmptyTensorList_132"
  input: "RNN_net/while/EmptyTensorList_133"
  input: "RNN_net/while/EmptyTensorList_134"
  input: "RNN_net/while/EmptyTensorList_135"
  input: "RNN_net/while/EmptyTensorList_136"
  input: "RNN_net/while/EmptyTensorList_137"
  input: "RNN_net/while/EmptyTensorList_138"
  input: "RNN_net/while/EmptyTensorList_139"
  input: "RNN_net/while/EmptyTensorList_140"
  input: "RNN_net/while/EmptyTensorList_141"
  input: "RNN_net/while/EmptyTensorList_142"
  input: "RNN_net/while/EmptyTensorList_143"
  input: "RNN_net/while/EmptyTensorList_144"
  input: "RNN_net/while/EmptyTensorList_145"
  input: "RNN_net/while/EmptyTensorList_146"
  input: "RNN_net/while/EmptyTensorList_147"
  input: "RNN_net/while/EmptyTensorList_148"
  input: "RNN_net/while/EmptyTensorList_149"
  input: "RNN_net/while/EmptyTensorList_150"
  input: "RNN_net/while/EmptyTensorList_151"
  input: "RNN_net/while/EmptyTensorList_152"
  input: "RNN_net/while/EmptyTensorList_153"
  input: "RNN_net/while/EmptyTensorList_154"
  input: "RNN_net/while/EmptyTensorList_155"
  input: "RNN_net/while/EmptyTensorList_156"
  input: "RNN_net/while/EmptyTensorList_157"
  input: "RNN_net/while/EmptyTensorList_158"
  input: "RNN_net/while/EmptyTensorList_159"
  input: "RNN_net/while/EmptyTensorList_160"
  input: "RNN_net/while/EmptyTensorList_161"
  input: "RNN_net/while/EmptyTensorList_162"
  input: "RNN_net/while/EmptyTensorList_163"
  input: "RNN_net/while/EmptyTensorList_164"
  input: "RNN_net/while/EmptyTensorList_165"
  input: "RNN_net/while/EmptyTensorList_166"
  input: "RNN_net/while/EmptyTensorList_167"
  input: "RNN_net/while/EmptyTensorList_168"
  input: "RNN_net/while/EmptyTensorList_169"
  input: "RNN_net/while/EmptyTensorList_170"
  attr {
    key: "T"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_VARIANT
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_num_original_outputs"
    value {
      i: 16
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
        i: 10
        i: 11
        i: 12
        i: 13
        i: 14
        i: 15
      }
    }
  }
  attr {
    key: "_stateful_parallelism"
    value {
      b: false
    }
  }
  attr {
    key: "body"
    value {
      func {
        name: "RNN_net_while_body_336"
      }
    }
  }
  attr {
    key: "cond"
    value {
      func {
        name: "RNN_net_while_cond_335"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "RNN_net/while/Identity"
  op: "Identity"
  input: "RNN_net/while"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_1"
  op: "Identity"
  input: "RNN_net/while:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_2"
  op: "Identity"
  input: "RNN_net/while:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_3"
  op: "Identity"
  input: "RNN_net/while:3"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_4"
  op: "Identity"
  input: "RNN_net/while:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_5"
  op: "Identity"
  input: "RNN_net/while:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_6"
  op: "Identity"
  input: "RNN_net/while:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_7"
  op: "Identity"
  input: "RNN_net/while:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_8"
  op: "Identity"
  input: "RNN_net/while:8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_9"
  op: "Identity"
  input: "RNN_net/while:9"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_10"
  op: "Identity"
  input: "RNN_net/while:10"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_11"
  op: "Identity"
  input: "RNN_net/while:11"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_12"
  op: "Identity"
  input: "RNN_net/while:12"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_13"
  op: "Identity"
  input: "RNN_net/while:13"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_14"
  op: "Identity"
  input: "RNN_net/while:14"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_15"
  op: "Identity"
  input: "RNN_net/while:15"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_16"
  op: "Identity"
  input: "RNN_net/while:16"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_17"
  op: "Identity"
  input: "RNN_net/while:17"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_18"
  op: "Identity"
  input: "RNN_net/while:18"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_19"
  op: "Identity"
  input: "RNN_net/while:19"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_20"
  op: "Identity"
  input: "RNN_net/while:20"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_21"
  op: "Identity"
  input: "RNN_net/while:21"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_22"
  op: "Identity"
  input: "RNN_net/while:22"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_23"
  op: "Identity"
  input: "RNN_net/while:23"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_24"
  op: "Identity"
  input: "RNN_net/while:24"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_25"
  op: "Identity"
  input: "RNN_net/while:25"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_26"
  op: "Identity"
  input: "RNN_net/while:26"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_27"
  op: "Identity"
  input: "RNN_net/while:27"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_28"
  op: "Identity"
  input: "RNN_net/while:28"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_29"
  op: "Identity"
  input: "RNN_net/while:29"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_30"
  op: "Identity"
  input: "RNN_net/while:30"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_31"
  op: "Identity"
  input: "RNN_net/while:31"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_32"
  op: "Identity"
  input: "RNN_net/while:32"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_33"
  op: "Identity"
  input: "RNN_net/while:33"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_34"
  op: "Identity"
  input: "RNN_net/while:34"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_35"
  op: "Identity"
  input: "RNN_net/while:35"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_36"
  op: "Identity"
  input: "RNN_net/while:36"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_37"
  op: "Identity"
  input: "RNN_net/while:37"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_38"
  op: "Identity"
  input: "RNN_net/while:38"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_39"
  op: "Identity"
  input: "RNN_net/while:39"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_40"
  op: "Identity"
  input: "RNN_net/while:40"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_41"
  op: "Identity"
  input: "RNN_net/while:41"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_42"
  op: "Identity"
  input: "RNN_net/while:42"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_43"
  op: "Identity"
  input: "RNN_net/while:43"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_44"
  op: "Identity"
  input: "RNN_net/while:44"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_45"
  op: "Identity"
  input: "RNN_net/while:45"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_46"
  op: "Identity"
  input: "RNN_net/while:46"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_47"
  op: "Identity"
  input: "RNN_net/while:47"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_48"
  op: "Identity"
  input: "RNN_net/while:48"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_49"
  op: "Identity"
  input: "RNN_net/while:49"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_50"
  op: "Identity"
  input: "RNN_net/while:50"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_51"
  op: "Identity"
  input: "RNN_net/while:51"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_52"
  op: "Identity"
  input: "RNN_net/while:52"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_53"
  op: "Identity"
  input: "RNN_net/while:53"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_54"
  op: "Identity"
  input: "RNN_net/while:54"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_55"
  op: "Identity"
  input: "RNN_net/while:55"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_56"
  op: "Identity"
  input: "RNN_net/while:56"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_57"
  op: "Identity"
  input: "RNN_net/while:57"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_58"
  op: "Identity"
  input: "RNN_net/while:58"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_59"
  op: "Identity"
  input: "RNN_net/while:59"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_60"
  op: "Identity"
  input: "RNN_net/while:60"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_61"
  op: "Identity"
  input: "RNN_net/while:61"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_62"
  op: "Identity"
  input: "RNN_net/while:62"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_63"
  op: "Identity"
  input: "RNN_net/while:63"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_64"
  op: "Identity"
  input: "RNN_net/while:64"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_65"
  op: "Identity"
  input: "RNN_net/while:65"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_66"
  op: "Identity"
  input: "RNN_net/while:66"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_67"
  op: "Identity"
  input: "RNN_net/while:67"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_68"
  op: "Identity"
  input: "RNN_net/while:68"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_69"
  op: "Identity"
  input: "RNN_net/while:69"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_70"
  op: "Identity"
  input: "RNN_net/while:70"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_71"
  op: "Identity"
  input: "RNN_net/while:71"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_72"
  op: "Identity"
  input: "RNN_net/while:72"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_73"
  op: "Identity"
  input: "RNN_net/while:73"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_74"
  op: "Identity"
  input: "RNN_net/while:74"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_75"
  op: "Identity"
  input: "RNN_net/while:75"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_76"
  op: "Identity"
  input: "RNN_net/while:76"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_77"
  op: "Identity"
  input: "RNN_net/while:77"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_78"
  op: "Identity"
  input: "RNN_net/while:78"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_79"
  op: "Identity"
  input: "RNN_net/while:79"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_80"
  op: "Identity"
  input: "RNN_net/while:80"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_81"
  op: "Identity"
  input: "RNN_net/while:81"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_82"
  op: "Identity"
  input: "RNN_net/while:82"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_83"
  op: "Identity"
  input: "RNN_net/while:83"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_84"
  op: "Identity"
  input: "RNN_net/while:84"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_85"
  op: "Identity"
  input: "RNN_net/while:85"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_86"
  op: "Identity"
  input: "RNN_net/while:86"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_87"
  op: "Identity"
  input: "RNN_net/while:87"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_88"
  op: "Identity"
  input: "RNN_net/while:88"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_89"
  op: "Identity"
  input: "RNN_net/while:89"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_90"
  op: "Identity"
  input: "RNN_net/while:90"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_91"
  op: "Identity"
  input: "RNN_net/while:91"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_92"
  op: "Identity"
  input: "RNN_net/while:92"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_93"
  op: "Identity"
  input: "RNN_net/while:93"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_94"
  op: "Identity"
  input: "RNN_net/while:94"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_95"
  op: "Identity"
  input: "RNN_net/while:95"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_96"
  op: "Identity"
  input: "RNN_net/while:96"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_97"
  op: "Identity"
  input: "RNN_net/while:97"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_98"
  op: "Identity"
  input: "RNN_net/while:98"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_99"
  op: "Identity"
  input: "RNN_net/while:99"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_100"
  op: "Identity"
  input: "RNN_net/while:100"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_101"
  op: "Identity"
  input: "RNN_net/while:101"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_102"
  op: "Identity"
  input: "RNN_net/while:102"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_103"
  op: "Identity"
  input: "RNN_net/while:103"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_104"
  op: "Identity"
  input: "RNN_net/while:104"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_105"
  op: "Identity"
  input: "RNN_net/while:105"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_106"
  op: "Identity"
  input: "RNN_net/while:106"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_107"
  op: "Identity"
  input: "RNN_net/while:107"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_108"
  op: "Identity"
  input: "RNN_net/while:108"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_109"
  op: "Identity"
  input: "RNN_net/while:109"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_110"
  op: "Identity"
  input: "RNN_net/while:110"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_111"
  op: "Identity"
  input: "RNN_net/while:111"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_112"
  op: "Identity"
  input: "RNN_net/while:112"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_113"
  op: "Identity"
  input: "RNN_net/while:113"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_114"
  op: "Identity"
  input: "RNN_net/while:114"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_115"
  op: "Identity"
  input: "RNN_net/while:115"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_116"
  op: "Identity"
  input: "RNN_net/while:116"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_117"
  op: "Identity"
  input: "RNN_net/while:117"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_118"
  op: "Identity"
  input: "RNN_net/while:118"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_119"
  op: "Identity"
  input: "RNN_net/while:119"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_120"
  op: "Identity"
  input: "RNN_net/while:120"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_121"
  op: "Identity"
  input: "RNN_net/while:121"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_122"
  op: "Identity"
  input: "RNN_net/while:122"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_123"
  op: "Identity"
  input: "RNN_net/while:123"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_124"
  op: "Identity"
  input: "RNN_net/while:124"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_125"
  op: "Identity"
  input: "RNN_net/while:125"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_126"
  op: "Identity"
  input: "RNN_net/while:126"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_127"
  op: "Identity"
  input: "RNN_net/while:127"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_128"
  op: "Identity"
  input: "RNN_net/while:128"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_129"
  op: "Identity"
  input: "RNN_net/while:129"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_130"
  op: "Identity"
  input: "RNN_net/while:130"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_131"
  op: "Identity"
  input: "RNN_net/while:131"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_132"
  op: "Identity"
  input: "RNN_net/while:132"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_133"
  op: "Identity"
  input: "RNN_net/while:133"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_134"
  op: "Identity"
  input: "RNN_net/while:134"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_135"
  op: "Identity"
  input: "RNN_net/while:135"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_136"
  op: "Identity"
  input: "RNN_net/while:136"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_137"
  op: "Identity"
  input: "RNN_net/while:137"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_138"
  op: "Identity"
  input: "RNN_net/while:138"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_139"
  op: "Identity"
  input: "RNN_net/while:139"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_140"
  op: "Identity"
  input: "RNN_net/while:140"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_141"
  op: "Identity"
  input: "RNN_net/while:141"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_142"
  op: "Identity"
  input: "RNN_net/while:142"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_143"
  op: "Identity"
  input: "RNN_net/while:143"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_144"
  op: "Identity"
  input: "RNN_net/while:144"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_145"
  op: "Identity"
  input: "RNN_net/while:145"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_146"
  op: "Identity"
  input: "RNN_net/while:146"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_147"
  op: "Identity"
  input: "RNN_net/while:147"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_148"
  op: "Identity"
  input: "RNN_net/while:148"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_149"
  op: "Identity"
  input: "RNN_net/while:149"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_150"
  op: "Identity"
  input: "RNN_net/while:150"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_151"
  op: "Identity"
  input: "RNN_net/while:151"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_152"
  op: "Identity"
  input: "RNN_net/while:152"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_153"
  op: "Identity"
  input: "RNN_net/while:153"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_154"
  op: "Identity"
  input: "RNN_net/while:154"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_155"
  op: "Identity"
  input: "RNN_net/while:155"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_156"
  op: "Identity"
  input: "RNN_net/while:156"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_157"
  op: "Identity"
  input: "RNN_net/while:157"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_158"
  op: "Identity"
  input: "RNN_net/while:158"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_159"
  op: "Identity"
  input: "RNN_net/while:159"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_160"
  op: "Identity"
  input: "RNN_net/while:160"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_161"
  op: "Identity"
  input: "RNN_net/while:161"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_162"
  op: "Identity"
  input: "RNN_net/while:162"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_163"
  op: "Identity"
  input: "RNN_net/while:163"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_164"
  op: "Identity"
  input: "RNN_net/while:164"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_165"
  op: "Identity"
  input: "RNN_net/while:165"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_166"
  op: "Identity"
  input: "RNN_net/while:166"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_167"
  op: "Identity"
  input: "RNN_net/while:167"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_168"
  op: "Identity"
  input: "RNN_net/while:168"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_169"
  op: "Identity"
  input: "RNN_net/while:169"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_170"
  op: "Identity"
  input: "RNN_net/while:170"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_171"
  op: "Identity"
  input: "RNN_net/while:171"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_172"
  op: "Identity"
  input: "RNN_net/while:172"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_173"
  op: "Identity"
  input: "RNN_net/while:173"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_174"
  op: "Identity"
  input: "RNN_net/while:174"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_175"
  op: "Identity"
  input: "RNN_net/while:175"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_176"
  op: "Identity"
  input: "RNN_net/while:176"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_177"
  op: "Identity"
  input: "RNN_net/while:177"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_178"
  op: "Identity"
  input: "RNN_net/while:178"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_179"
  op: "Identity"
  input: "RNN_net/while:179"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_180"
  op: "Identity"
  input: "RNN_net/while:180"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_181"
  op: "Identity"
  input: "RNN_net/while:181"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_182"
  op: "Identity"
  input: "RNN_net/while:182"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_183"
  op: "Identity"
  input: "RNN_net/while:183"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_184"
  op: "Identity"
  input: "RNN_net/while:184"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_185"
  op: "Identity"
  input: "RNN_net/while:185"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/while/Identity_186"
  op: "Identity"
  input: "RNN_net/while:186"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "RNN_net/TensorArrayV2Stack/TensorListStack/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/TensorArrayV2Stack/TensorListStack"
  op: "TensorListStack"
  input: "RNN_net/while/Identity_3"
  input: "RNN_net/TensorArrayV2Stack/TensorListStack/element_shape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_elements"
    value {
      i: 1
    }
  }
}
node {
  name: "RNN_net/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RNN_net/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "RNN_net/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RNN_net/strided_slice_3"
  op: "StridedSlice"
  input: "RNN_net/TensorArrayV2Stack/TensorListStack"
  input: "RNN_net/strided_slice_3/stack"
  input: "RNN_net/strided_slice_3/stack_1"
  input: "RNN_net/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "RNN_net/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "RNN_net/transpose_1"
  op: "Transpose"
  input: "RNN_net/TensorArrayV2Stack/TensorListStack"
  input: "RNN_net/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "x_conf/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@x_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "x_conf/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@x_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.40269362926483154
      }
    }
  }
}
node {
  name: "x_conf/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@x_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40269362926483154
      }
    }
  }
}
node {
  name: "x_conf/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "x_conf/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@x_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "x_conf/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "x_conf/kernel/Initializer/random_uniform/max"
  input: "x_conf/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@x_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "x_conf/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "x_conf/kernel/Initializer/random_uniform/RandomUniform"
  input: "x_conf/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@x_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "x_conf/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "x_conf/kernel/Initializer/random_uniform/mul"
  input: "x_conf/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@x_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "x_conf/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@x_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "x_conf/kernel"
    }
  }
}
node {
  name: "x_conf/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "x_conf/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "x_conf/kernel/Assign"
  op: "AssignVariableOp"
  input: "x_conf/kernel"
  input: "x_conf/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "x_conf/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "x_conf/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "x_conf/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@x_conf/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "x_conf/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@x_conf/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "x_conf/bias"
    }
  }
}
node {
  name: "x_conf/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "x_conf/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "x_conf/bias/Assign"
  op: "AssignVariableOp"
  input: "x_conf/bias"
  input: "x_conf/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "x_conf/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "x_conf/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "x_conf/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "x_conf/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "x_conf/MatMul"
  op: "MatMul"
  input: "RNN_net/strided_slice_3"
  input: "x_conf/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "x_conf/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "x_conf/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "x_conf/BiasAdd"
  op: "BiasAdd"
  input: "x_conf/MatMul"
  input: "x_conf/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "x_reg/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@x_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "x_reg/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@x_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.40269362926483154
      }
    }
  }
}
node {
  name: "x_reg/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@x_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40269362926483154
      }
    }
  }
}
node {
  name: "x_reg/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "x_reg/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@x_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "x_reg/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "x_reg/kernel/Initializer/random_uniform/max"
  input: "x_reg/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@x_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "x_reg/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "x_reg/kernel/Initializer/random_uniform/RandomUniform"
  input: "x_reg/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@x_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "x_reg/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "x_reg/kernel/Initializer/random_uniform/mul"
  input: "x_reg/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@x_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "x_reg/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@x_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "x_reg/kernel"
    }
  }
}
node {
  name: "x_reg/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "x_reg/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "x_reg/kernel/Assign"
  op: "AssignVariableOp"
  input: "x_reg/kernel"
  input: "x_reg/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "x_reg/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "x_reg/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "x_reg/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@x_reg/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "x_reg/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@x_reg/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "x_reg/bias"
    }
  }
}
node {
  name: "x_reg/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "x_reg/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "x_reg/bias/Assign"
  op: "AssignVariableOp"
  input: "x_reg/bias"
  input: "x_reg/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "x_reg/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "x_reg/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "x_reg/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "x_reg/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "x_reg/MatMul"
  op: "MatMul"
  input: "RNN_net/strided_slice_3"
  input: "x_reg/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "x_reg/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "x_reg/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "x_reg/BiasAdd"
  op: "BiasAdd"
  input: "x_reg/MatMul"
  input: "x_reg/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "x_comb/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "x_comb/concat"
  op: "ConcatV2"
  input: "x_conf/BiasAdd"
  input: "x_reg/BiasAdd"
  input: "x_comb/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "y_conf/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "y_conf/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.40269362926483154
      }
    }
  }
}
node {
  name: "y_conf/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40269362926483154
      }
    }
  }
}
node {
  name: "y_conf/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "y_conf/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "y_conf/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "y_conf/kernel/Initializer/random_uniform/max"
  input: "y_conf/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "y_conf/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "y_conf/kernel/Initializer/random_uniform/RandomUniform"
  input: "y_conf/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "y_conf/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "y_conf/kernel/Initializer/random_uniform/mul"
  input: "y_conf/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "y_conf/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "y_conf/kernel"
    }
  }
}
node {
  name: "y_conf/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "y_conf/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "y_conf/kernel/Assign"
  op: "AssignVariableOp"
  input: "y_conf/kernel"
  input: "y_conf/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "y_conf/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "y_conf/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "y_conf/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_conf/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "y_conf/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_conf/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "y_conf/bias"
    }
  }
}
node {
  name: "y_conf/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "y_conf/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "y_conf/bias/Assign"
  op: "AssignVariableOp"
  input: "y_conf/bias"
  input: "y_conf/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "y_conf/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "y_conf/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "y_conf/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "y_conf/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "y_conf/MatMul"
  op: "MatMul"
  input: "RNN_net/strided_slice_3"
  input: "y_conf/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "y_conf/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "y_conf/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "y_conf/BiasAdd"
  op: "BiasAdd"
  input: "y_conf/MatMul"
  input: "y_conf/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "y_reg/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "y_reg/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.40269362926483154
      }
    }
  }
}
node {
  name: "y_reg/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40269362926483154
      }
    }
  }
}
node {
  name: "y_reg/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "y_reg/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "y_reg/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "y_reg/kernel/Initializer/random_uniform/max"
  input: "y_reg/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "y_reg/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "y_reg/kernel/Initializer/random_uniform/RandomUniform"
  input: "y_reg/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "y_reg/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "y_reg/kernel/Initializer/random_uniform/mul"
  input: "y_reg/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "y_reg/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "y_reg/kernel"
    }
  }
}
node {
  name: "y_reg/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "y_reg/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "y_reg/kernel/Assign"
  op: "AssignVariableOp"
  input: "y_reg/kernel"
  input: "y_reg/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "y_reg/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "y_reg/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "y_reg/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_reg/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "y_reg/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_reg/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "y_reg/bias"
    }
  }
}
node {
  name: "y_reg/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "y_reg/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "y_reg/bias/Assign"
  op: "AssignVariableOp"
  input: "y_reg/bias"
  input: "y_reg/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "y_reg/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "y_reg/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "y_reg/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "y_reg/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "y_reg/MatMul"
  op: "MatMul"
  input: "RNN_net/strided_slice_3"
  input: "y_reg/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "y_reg/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "y_reg/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "y_reg/BiasAdd"
  op: "BiasAdd"
  input: "y_reg/MatMul"
  input: "y_reg/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "y_comb/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "y_comb/concat"
  op: "ConcatV2"
  input: "y_conf/BiasAdd"
  input: "y_reg/BiasAdd"
  input: "y_comb/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "h_conf/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@h_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "h_conf/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@h_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.40269362926483154
      }
    }
  }
}
node {
  name: "h_conf/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@h_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40269362926483154
      }
    }
  }
}
node {
  name: "h_conf/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "h_conf/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@h_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "h_conf/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "h_conf/kernel/Initializer/random_uniform/max"
  input: "h_conf/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@h_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "h_conf/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "h_conf/kernel/Initializer/random_uniform/RandomUniform"
  input: "h_conf/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@h_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "h_conf/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "h_conf/kernel/Initializer/random_uniform/mul"
  input: "h_conf/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@h_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "h_conf/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@h_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "h_conf/kernel"
    }
  }
}
node {
  name: "h_conf/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "h_conf/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "h_conf/kernel/Assign"
  op: "AssignVariableOp"
  input: "h_conf/kernel"
  input: "h_conf/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "h_conf/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "h_conf/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "h_conf/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@h_conf/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "h_conf/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@h_conf/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "h_conf/bias"
    }
  }
}
node {
  name: "h_conf/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "h_conf/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "h_conf/bias/Assign"
  op: "AssignVariableOp"
  input: "h_conf/bias"
  input: "h_conf/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "h_conf/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "h_conf/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "h_conf/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "h_conf/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "h_conf/MatMul"
  op: "MatMul"
  input: "RNN_net/strided_slice_3"
  input: "h_conf/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "h_conf/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "h_conf/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "h_conf/BiasAdd"
  op: "BiasAdd"
  input: "h_conf/MatMul"
  input: "h_conf/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "h_reg/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@h_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "h_reg/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@h_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.40269362926483154
      }
    }
  }
}
node {
  name: "h_reg/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@h_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40269362926483154
      }
    }
  }
}
node {
  name: "h_reg/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "h_reg/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@h_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "h_reg/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "h_reg/kernel/Initializer/random_uniform/max"
  input: "h_reg/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@h_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "h_reg/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "h_reg/kernel/Initializer/random_uniform/RandomUniform"
  input: "h_reg/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@h_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "h_reg/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "h_reg/kernel/Initializer/random_uniform/mul"
  input: "h_reg/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@h_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "h_reg/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@h_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "h_reg/kernel"
    }
  }
}
node {
  name: "h_reg/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "h_reg/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "h_reg/kernel/Assign"
  op: "AssignVariableOp"
  input: "h_reg/kernel"
  input: "h_reg/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "h_reg/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "h_reg/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "h_reg/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@h_reg/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "h_reg/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@h_reg/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "h_reg/bias"
    }
  }
}
node {
  name: "h_reg/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "h_reg/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "h_reg/bias/Assign"
  op: "AssignVariableOp"
  input: "h_reg/bias"
  input: "h_reg/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "h_reg/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "h_reg/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "h_reg/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "h_reg/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "h_reg/MatMul"
  op: "MatMul"
  input: "RNN_net/strided_slice_3"
  input: "h_reg/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "h_reg/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "h_reg/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "h_reg/BiasAdd"
  op: "BiasAdd"
  input: "h_reg/MatMul"
  input: "h_reg/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "h_comb/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "h_comb/concat"
  op: "ConcatV2"
  input: "h_conf/BiasAdd"
  input: "h_reg/BiasAdd"
  input: "h_comb/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "w_conf/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "w_conf/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.40269362926483154
      }
    }
  }
}
node {
  name: "w_conf/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40269362926483154
      }
    }
  }
}
node {
  name: "w_conf/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "w_conf/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "w_conf/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "w_conf/kernel/Initializer/random_uniform/max"
  input: "w_conf/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "w_conf/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "w_conf/kernel/Initializer/random_uniform/RandomUniform"
  input: "w_conf/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "w_conf/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "w_conf/kernel/Initializer/random_uniform/mul"
  input: "w_conf/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "w_conf/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_conf/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "w_conf/kernel"
    }
  }
}
node {
  name: "w_conf/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "w_conf/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "w_conf/kernel/Assign"
  op: "AssignVariableOp"
  input: "w_conf/kernel"
  input: "w_conf/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "w_conf/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "w_conf/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "w_conf/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_conf/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "w_conf/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_conf/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "w_conf/bias"
    }
  }
}
node {
  name: "w_conf/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "w_conf/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "w_conf/bias/Assign"
  op: "AssignVariableOp"
  input: "w_conf/bias"
  input: "w_conf/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "w_conf/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "w_conf/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "w_conf/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "w_conf/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "w_conf/MatMul"
  op: "MatMul"
  input: "RNN_net/strided_slice_3"
  input: "w_conf/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "w_conf/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "w_conf/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "w_conf/BiasAdd"
  op: "BiasAdd"
  input: "w_conf/MatMul"
  input: "w_conf/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "w_reg/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "w_reg/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.40269362926483154
      }
    }
  }
}
node {
  name: "w_reg/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40269362926483154
      }
    }
  }
}
node {
  name: "w_reg/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "w_reg/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "w_reg/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "w_reg/kernel/Initializer/random_uniform/max"
  input: "w_reg/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "w_reg/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "w_reg/kernel/Initializer/random_uniform/RandomUniform"
  input: "w_reg/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "w_reg/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "w_reg/kernel/Initializer/random_uniform/mul"
  input: "w_reg/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "w_reg/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_reg/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "w_reg/kernel"
    }
  }
}
node {
  name: "w_reg/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "w_reg/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "w_reg/kernel/Assign"
  op: "AssignVariableOp"
  input: "w_reg/kernel"
  input: "w_reg/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "w_reg/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "w_reg/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "w_reg/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_reg/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "w_reg/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_reg/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "w_reg/bias"
    }
  }
}
node {
  name: "w_reg/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "w_reg/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "w_reg/bias/Assign"
  op: "AssignVariableOp"
  input: "w_reg/bias"
  input: "w_reg/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "w_reg/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "w_reg/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "w_reg/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "w_reg/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "w_reg/MatMul"
  op: "MatMul"
  input: "RNN_net/strided_slice_3"
  input: "w_reg/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "w_reg/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "w_reg/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "w_reg/BiasAdd"
  op: "BiasAdd"
  input: "w_reg/MatMul"
  input: "w_reg/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "w_comb/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "w_comb/concat"
  op: "ConcatV2"
  input: "w_conf/BiasAdd"
  input: "w_reg/BiasAdd"
  input: "w_comb/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/Shape"
  op: "Shape"
  input: "IteratorGetNext"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_model/RNN_net/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/strided_slice"
  op: "StridedSlice"
  input: "lstm_model/RNN_net/Shape"
  input: "lstm_model/RNN_net/strided_slice/stack"
  input: "lstm_model/RNN_net/strided_slice/stack_1"
  input: "lstm_model/RNN_net/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "lstm_model/RNN_net/zeros/packed/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/zeros/packed"
  op: "Pack"
  input: "lstm_model/RNN_net/strided_slice"
  input: "lstm_model/RNN_net/zeros/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm_model/RNN_net/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/zeros"
  op: "Fill"
  input: "lstm_model/RNN_net/zeros/packed"
  input: "lstm_model/RNN_net/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_model/RNN_net/zeros_1/packed/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/zeros_1/packed"
  op: "Pack"
  input: "lstm_model/RNN_net/strided_slice"
  input: "lstm_model/RNN_net/zeros_1/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm_model/RNN_net/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/zeros_1"
  op: "Fill"
  input: "lstm_model/RNN_net/zeros_1/packed"
  input: "lstm_model/RNN_net/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_model/RNN_net/zeros_2/packed/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/zeros_2/packed"
  op: "Pack"
  input: "lstm_model/RNN_net/strided_slice"
  input: "lstm_model/RNN_net/zeros_2/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm_model/RNN_net/zeros_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/zeros_2"
  op: "Fill"
  input: "lstm_model/RNN_net/zeros_2/packed"
  input: "lstm_model/RNN_net/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_model/RNN_net/zeros_3/packed/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/zeros_3/packed"
  op: "Pack"
  input: "lstm_model/RNN_net/strided_slice"
  input: "lstm_model/RNN_net/zeros_3/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm_model/RNN_net/zeros_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/zeros_3"
  op: "Fill"
  input: "lstm_model/RNN_net/zeros_3/packed"
  input: "lstm_model/RNN_net/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_model/RNN_net/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/transpose"
  op: "Transpose"
  input: "IteratorGetNext"
  input: "lstm_model/RNN_net/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/Shape_1"
  op: "Shape"
  input: "lstm_model/RNN_net/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_model/RNN_net/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/strided_slice_1"
  op: "StridedSlice"
  input: "lstm_model/RNN_net/Shape_1"
  input: "lstm_model/RNN_net/strided_slice_1/stack"
  input: "lstm_model/RNN_net/strided_slice_1/stack_1"
  input: "lstm_model/RNN_net/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "lstm_model/RNN_net/TensorArrayV2/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/TensorArrayV2"
  op: "TensorListReserve"
  input: "lstm_model/RNN_net/TensorArrayV2/element_shape"
  input: "lstm_model/RNN_net/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/TensorArrayUnstack/TensorListFromTensor/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\r\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/TensorArrayUnstack/TensorListFromTensor"
  op: "TensorListFromTensor"
  input: "lstm_model/RNN_net/transpose"
  input: "lstm_model/RNN_net/TensorArrayUnstack/TensorListFromTensor/element_shape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/strided_slice_2"
  op: "StridedSlice"
  input: "lstm_model/RNN_net/transpose"
  input: "lstm_model/RNN_net/strided_slice_2/stack"
  input: "lstm_model/RNN_net/strided_slice_2/stack_1"
  input: "lstm_model/RNN_net/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/split/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/split"
  op: "Split"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/split/split_dim"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/split/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/MatMul"
  op: "MatMul"
  input: "lstm_model/RNN_net/strided_slice_2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/MatMul_1"
  op: "MatMul"
  input: "lstm_model/RNN_net/strided_slice_2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/MatMul_2"
  op: "MatMul"
  input: "lstm_model/RNN_net/strided_slice_2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/MatMul_3"
  op: "MatMul"
  input: "lstm_model/RNN_net/strided_slice_2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/split_1/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/split_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/split_1"
  op: "Split"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/split_1/split_dim"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/split_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/BiasAdd"
  op: "BiasAdd"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/MatMul"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/BiasAdd_1"
  op: "BiasAdd"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/MatMul_1"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/BiasAdd_2"
  op: "BiasAdd"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/MatMul_2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/BiasAdd_3"
  op: "BiasAdd"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/MatMul_3"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice"
  op: "StridedSlice"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack_1"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/MatMul_4"
  op: "MatMul"
  input: "lstm_model/RNN_net/zeros"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/add"
  op: "AddV2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/BiasAdd"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Mul"
  op: "Mul"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/add"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Add_1"
  op: "AddV2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Mul"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum"
  op: "Minimum"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Add_1"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/clip_by_value"
  op: "Maximum"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice_1"
  op: "StridedSlice"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_1"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack_1"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/MatMul_5"
  op: "MatMul"
  input: "lstm_model/RNN_net/zeros"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/add_2"
  op: "AddV2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/BiasAdd_1"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Mul_1"
  op: "Mul"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/add_2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Add_3"
  op: "AddV2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Mul_1"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Add_3"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1"
  op: "Maximum"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/mul_2"
  op: "Mul"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1"
  input: "lstm_model/RNN_net/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice_2"
  op: "StridedSlice"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack_1"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/MatMul_6"
  op: "MatMul"
  input: "lstm_model/RNN_net/zeros"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/add_4"
  op: "AddV2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/BiasAdd_2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/MatMul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Tanh"
  op: "Tanh"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/mul_3"
  op: "Mul"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/clip_by_value"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/add_5"
  op: "AddV2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/mul_2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice_3"
  op: "StridedSlice"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_3"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack_1"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/MatMul_7"
  op: "MatMul"
  input: "lstm_model/RNN_net/zeros"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/add_6"
  op: "AddV2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/BiasAdd_3"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/MatMul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Mul_4"
  op: "Mul"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/add_6"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Add_7"
  op: "AddV2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Mul_4"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum"
  op: "Minimum"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Add_7"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2"
  op: "Maximum"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Tanh_1"
  op: "Tanh"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/mul_5"
  op: "Mul"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/split/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/split"
  op: "Split"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/split/split_dim"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/split/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/MatMul"
  op: "MatMul"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/mul_5"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/MatMul_1"
  op: "MatMul"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/mul_5"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/MatMul_2"
  op: "MatMul"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/mul_5"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/MatMul_3"
  op: "MatMul"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_0/mul_5"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/split_1/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/split_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/split_1"
  op: "Split"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/split_1/split_dim"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/split_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/BiasAdd"
  op: "BiasAdd"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/MatMul"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/BiasAdd_1"
  op: "BiasAdd"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/MatMul_1"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/BiasAdd_2"
  op: "BiasAdd"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/MatMul_2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/BiasAdd_3"
  op: "BiasAdd"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/MatMul_3"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice"
  op: "StridedSlice"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack_1"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/MatMul_4"
  op: "MatMul"
  input: "lstm_model/RNN_net/zeros_2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/add"
  op: "AddV2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/BiasAdd"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Mul"
  op: "Mul"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/add"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Add_1"
  op: "AddV2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Mul"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum"
  op: "Minimum"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Add_1"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/clip_by_value"
  op: "Maximum"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice_1"
  op: "StridedSlice"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_1"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack_1"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/MatMul_5"
  op: "MatMul"
  input: "lstm_model/RNN_net/zeros_2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/add_2"
  op: "AddV2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/BiasAdd_1"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Mul_1"
  op: "Mul"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/add_2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Add_3"
  op: "AddV2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Mul_1"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Add_3"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1"
  op: "Maximum"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/mul_2"
  op: "Mul"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1"
  input: "lstm_model/RNN_net/zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice_2"
  op: "StridedSlice"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack_1"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/MatMul_6"
  op: "MatMul"
  input: "lstm_model/RNN_net/zeros_2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/add_4"
  op: "AddV2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/BiasAdd_2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/MatMul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Tanh"
  op: "Tanh"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/mul_3"
  op: "Mul"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/clip_by_value"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/add_5"
  op: "AddV2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/mul_2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice_3"
  op: "StridedSlice"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_3"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack_1"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/MatMul_7"
  op: "MatMul"
  input: "lstm_model/RNN_net/zeros_2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/add_6"
  op: "AddV2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/BiasAdd_3"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/MatMul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Mul_4"
  op: "Mul"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/add_6"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Add_7"
  op: "AddV2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Mul_4"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum"
  op: "Minimum"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Add_7"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2"
  op: "Maximum"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Tanh_1"
  op: "Tanh"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/mul_5"
  op: "Mul"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2"
  input: "lstm_model/RNN_net/stacked_rnn_cells/LSTM_Layer_1/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/TensorArrayV2_1/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/TensorArrayV2_1/num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/TensorArrayV2_1"
  op: "TensorListReserve"
  input: "lstm_model/RNN_net/TensorArrayV2_1/element_shape"
  input: "lstm_model/RNN_net/TensorArrayV2_1/num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/maximum_iterations"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/loop_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const"
  input: "lstm_model/RNN_net/while/EmptyTensorList/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_1/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_1"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_1"
  input: "lstm_model/RNN_net/while/EmptyTensorList_1/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_2/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_2"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_2"
  input: "lstm_model/RNN_net/while/EmptyTensorList_2/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_3/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_3/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_3"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_3/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_3/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_4/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_4/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_4"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_4/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_4/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_5/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_5/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_5"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_5/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_5/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_6/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_6/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_6"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_6/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_6/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_7/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_7/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_7"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_7/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_7/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_8/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\r\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_8/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_8"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_8/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_8/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_9/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_9"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_3"
  input: "lstm_model/RNN_net/while/EmptyTensorList_9/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_10/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_10/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_10"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_10/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_10/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_11/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_11/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_11"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_11/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_11/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_12/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_12/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_12"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_12/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_12/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_13/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_13/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_13"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_13/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_13/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_14/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_14/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_14"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_14/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_14/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_15/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_15/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_15"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_15/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_15/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_16/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_16/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_16"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_16/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_16/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_17/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_17/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_17"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_17/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_17/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_18/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_18/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_18"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_18/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_18/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_19/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_19"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_4"
  input: "lstm_model/RNN_net/while/EmptyTensorList_19/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_20/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_20/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_20"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_20/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_20/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_21/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_21/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_21"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_21/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_21/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_22/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_22/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_22"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_22/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_22/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_23/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_23/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_23"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_23/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_23/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_24/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_24/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_24"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_24/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_24/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_25/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_25/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_25"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_25/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_25/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_26/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_26/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_26"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_26/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_26/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_27/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_27/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_27"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_27/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_27/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_28/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_28/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_28"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_28/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_28/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_29/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_29/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_29"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_29/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_29/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_30/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_30/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_30"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_30/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_30/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_31/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_31/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_31"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_31/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_31/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_32/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_32/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_32"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_32/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_32/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_33/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_33/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_33"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_33/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_33/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_34/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_34/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_34"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_34/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_34/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_35/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_35/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_35"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_35/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_35/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_36/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_36"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_5"
  input: "lstm_model/RNN_net/while/EmptyTensorList_36/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_37/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_37"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_6"
  input: "lstm_model/RNN_net/while/EmptyTensorList_37/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_38/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_38/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_38"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_38/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_38/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_39/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_39/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_39"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_39/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_39/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_40/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_40"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_7"
  input: "lstm_model/RNN_net/while/EmptyTensorList_40/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_41/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_41/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_41"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_41/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_41/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_42/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_42"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_8"
  input: "lstm_model/RNN_net/while/EmptyTensorList_42/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_43/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_43/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_43"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_43/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_43/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_44/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_44/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_44"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_44/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_44/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_45/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_45/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_45"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_45/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_45/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_46/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_46/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_46"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_46/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_46/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_47/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_47/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_47"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_47/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_47/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_48/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_48/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_48"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_48/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_48/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_49/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_49/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_49"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_49/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_49/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_50/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_50/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_50"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_50/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_50/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_51/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_51"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_9"
  input: "lstm_model/RNN_net/while/EmptyTensorList_51/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_52/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_52"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_10"
  input: "lstm_model/RNN_net/while/EmptyTensorList_52/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_53/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_53/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_53"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_53/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_53/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_54/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_54/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_54"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_54/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_54/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_55/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_55"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_11"
  input: "lstm_model/RNN_net/while/EmptyTensorList_55/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_56/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_56/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_56"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_56/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_56/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_57/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_57"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_12"
  input: "lstm_model/RNN_net/while/EmptyTensorList_57/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_58/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_58/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_58"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_58/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_58/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_59/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_59/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_59"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_59/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_59/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_60/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_60/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_60"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_60/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_60/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_61/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_61/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_61"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_61/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_61/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_62/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_62/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_62"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_62/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_62/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_63/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_63/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_63"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_63/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_63/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_64/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_64/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_64"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_64/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_64/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_65/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_65/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_65"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_65/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_65/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_66/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_66/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_66"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_66/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_66/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_67/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_67/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_67"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_67/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_67/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_68/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_68/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_68"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_68/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_68/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_69/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_69/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_69"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_69/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_69/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_70/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_70/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_70"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_70/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_70/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_71/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_71/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_71"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_71/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_71/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_72/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_72/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_72"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_72/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_72/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_73/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_73/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_73"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_73/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_73/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_74/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_74/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_74"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_74/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_74/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_75/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_75/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_75"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_75/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_75/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_76/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_76/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_76"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_76/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_76/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_77/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_77"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_13"
  input: "lstm_model/RNN_net/while/EmptyTensorList_77/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_14"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_78/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_78"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_14"
  input: "lstm_model/RNN_net/while/EmptyTensorList_78/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_79/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_79/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_79"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_79/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_79/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_80/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_80/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_80"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_80/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_80/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_15"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_81/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_81"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_15"
  input: "lstm_model/RNN_net/while/EmptyTensorList_81/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_82/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_82/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_82"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_82/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_82/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_16"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_83/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_83"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_16"
  input: "lstm_model/RNN_net/while/EmptyTensorList_83/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_84/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_84/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_84"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_84/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_84/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_85/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_85/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_85"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_85/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_85/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_86/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_86/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_86"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_86/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_86/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_17"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_87/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_87"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_17"
  input: "lstm_model/RNN_net/while/EmptyTensorList_87/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_88/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_88/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_88"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_88/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_88/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_89/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_89/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_89"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_89/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_89/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_90/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_90/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_90"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_90/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_90/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_91/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_91/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_91"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_91/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_91/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_92/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_92/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_92"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_92/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_92/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_93/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_93/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_93"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_93/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_93/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_94/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_94/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_94"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_94/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_94/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_95/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_95/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_95"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_95/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_95/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_96/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_96/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_96"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_96/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_96/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_18"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_97/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_97"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_18"
  input: "lstm_model/RNN_net/while/EmptyTensorList_97/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_98/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_98/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_98"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_98/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_98/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_99/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_99/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_99"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_99/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_99/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_100/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_100/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_100"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_100/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_100/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_101/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_101/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_101"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_101/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_101/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_102/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_102/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_102"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_102/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_102/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_103/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_103/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_103"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_103/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_103/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_104/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_104/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_104"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_104/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_104/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_105/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_105/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_105"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_105/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_105/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_106/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_106/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_106"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_106/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_106/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_107/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_107/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_107"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_107/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_107/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_108/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_108/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_108"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_108/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_108/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_109/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_109/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_109"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_109/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_109/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_110/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_110/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_110"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_110/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_110/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_111/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_111/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_111"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_111/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_111/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_112/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_112/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_112"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_112/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_112/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_113/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_113/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_113"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_113/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_113/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_19"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_114/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_114"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_19"
  input: "lstm_model/RNN_net/while/EmptyTensorList_114/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_20"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_115/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_115"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_20"
  input: "lstm_model/RNN_net/while/EmptyTensorList_115/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_116/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_116/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_116"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_116/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_116/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_117/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_117/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_117"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_117/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_117/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_21"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_118/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_118"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_21"
  input: "lstm_model/RNN_net/while/EmptyTensorList_118/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_119/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_119/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_119"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_119/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_119/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_22"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_120/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_120"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_22"
  input: "lstm_model/RNN_net/while/EmptyTensorList_120/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_121/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_121/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_121"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_121/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_121/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_122/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_122/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_122"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_122/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_122/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_123/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_123/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_123"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_123/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_123/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_124/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_124/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_124"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_124/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_124/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_125/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_125/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_125"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_125/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_125/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_126/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_126/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_126"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_126/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_126/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_127/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_127/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_127"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_127/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_127/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_128/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_128/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_128"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_128/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_128/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_23"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_129/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_129"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_23"
  input: "lstm_model/RNN_net/while/EmptyTensorList_129/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_24"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_130/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_130"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_24"
  input: "lstm_model/RNN_net/while/EmptyTensorList_130/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_131/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_131/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_131"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_131/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_131/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_132/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_132/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_132"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_132/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_132/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_25"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_133/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_133"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_25"
  input: "lstm_model/RNN_net/while/EmptyTensorList_133/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_134/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_134/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_134"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_134/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_134/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_26"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_135/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_135"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_26"
  input: "lstm_model/RNN_net/while/EmptyTensorList_135/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_136/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_136/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_136"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_136/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_136/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_137/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_137/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_137"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_137/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_137/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_138/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_138/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_138"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_138/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_138/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_139/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_139/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_139"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_139/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_139/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_140/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_140/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_140"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_140/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_140/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_141/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_141/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_141"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_141/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_141/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_142/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_142/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_142"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_142/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_142/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_143/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_143/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_143"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_143/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_143/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_144/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_144/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_144"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_144/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_144/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_145/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_145/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_145"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_145/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_145/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_146/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_146/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_146"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_146/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_146/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_147/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_147/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_147"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_147/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_147/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_148/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_148/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_148"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_148/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_148/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_149/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_149/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_149"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_149/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_149/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_150/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_150/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_150"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_150/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_150/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_151/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_151/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_151"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_151/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_151/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_152/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_152/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_152"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_152/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_152/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_153/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_153/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_153"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_153/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_153/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_154/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_154/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_154"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_154/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_154/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_27"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_155/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_155"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_27"
  input: "lstm_model/RNN_net/while/EmptyTensorList_155/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_28"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_156/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_156"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_28"
  input: "lstm_model/RNN_net/while/EmptyTensorList_156/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_157/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_157/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_157"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_157/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_157/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_158/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_158/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_158"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_158/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_158/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_29"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_159/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_159"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_29"
  input: "lstm_model/RNN_net/while/EmptyTensorList_159/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_160/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_160/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_160"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_160/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_160/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_30"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_161/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_161"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_30"
  input: "lstm_model/RNN_net/while/EmptyTensorList_161/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_162/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_162/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_162"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_162/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_162/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_163/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_163/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_163"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_163/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_163/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_164/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_164/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_164"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_164/element_shape"
  input: "lstm_model/RNN_net/while/EmptyTensorList_164/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_31"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_165/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_165"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_31"
  input: "lstm_model/RNN_net/while/EmptyTensorList_165/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_32"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_166/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_166"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_32"
  input: "lstm_model/RNN_net/while/EmptyTensorList_166/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_33"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_167/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_167"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_33"
  input: "lstm_model/RNN_net/while/EmptyTensorList_167/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_34"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_168/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_168"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_34"
  input: "lstm_model/RNN_net/while/EmptyTensorList_168/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_35"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_169/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_169"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_35"
  input: "lstm_model/RNN_net/while/EmptyTensorList_169/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Const_36"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_170/max_num_elements"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/EmptyTensorList_170"
  op: "EmptyTensorList"
  input: "lstm_model/RNN_net/while/Const_36"
  input: "lstm_model/RNN_net/while/EmptyTensorList_170/max_num_elements"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while"
  op: "While"
  input: "lstm_model/RNN_net/while/loop_counter"
  input: "lstm_model/RNN_net/while/maximum_iterations"
  input: "lstm_model/RNN_net/time"
  input: "lstm_model/RNN_net/TensorArrayV2_1"
  input: "lstm_model/RNN_net/zeros"
  input: "lstm_model/RNN_net/zeros_1"
  input: "lstm_model/RNN_net/zeros_2"
  input: "lstm_model/RNN_net/zeros_3"
  input: "lstm_model/RNN_net/strided_slice_1"
  input: "lstm_model/RNN_net/TensorArrayUnstack/TensorListFromTensor"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
  input: "lstm_model/RNN_net/while/EmptyTensorList"
  input: "lstm_model/RNN_net/while/EmptyTensorList_1"
  input: "lstm_model/RNN_net/while/EmptyTensorList_2"
  input: "lstm_model/RNN_net/while/EmptyTensorList_3"
  input: "lstm_model/RNN_net/while/EmptyTensorList_4"
  input: "lstm_model/RNN_net/while/EmptyTensorList_5"
  input: "lstm_model/RNN_net/while/EmptyTensorList_6"
  input: "lstm_model/RNN_net/while/EmptyTensorList_7"
  input: "lstm_model/RNN_net/while/EmptyTensorList_8"
  input: "lstm_model/RNN_net/while/EmptyTensorList_9"
  input: "lstm_model/RNN_net/while/EmptyTensorList_10"
  input: "lstm_model/RNN_net/while/EmptyTensorList_11"
  input: "lstm_model/RNN_net/while/EmptyTensorList_12"
  input: "lstm_model/RNN_net/while/EmptyTensorList_13"
  input: "lstm_model/RNN_net/while/EmptyTensorList_14"
  input: "lstm_model/RNN_net/while/EmptyTensorList_15"
  input: "lstm_model/RNN_net/while/EmptyTensorList_16"
  input: "lstm_model/RNN_net/while/EmptyTensorList_17"
  input: "lstm_model/RNN_net/while/EmptyTensorList_18"
  input: "lstm_model/RNN_net/while/EmptyTensorList_19"
  input: "lstm_model/RNN_net/while/EmptyTensorList_20"
  input: "lstm_model/RNN_net/while/EmptyTensorList_21"
  input: "lstm_model/RNN_net/while/EmptyTensorList_22"
  input: "lstm_model/RNN_net/while/EmptyTensorList_23"
  input: "lstm_model/RNN_net/while/EmptyTensorList_24"
  input: "lstm_model/RNN_net/while/EmptyTensorList_25"
  input: "lstm_model/RNN_net/while/EmptyTensorList_26"
  input: "lstm_model/RNN_net/while/EmptyTensorList_27"
  input: "lstm_model/RNN_net/while/EmptyTensorList_28"
  input: "lstm_model/RNN_net/while/EmptyTensorList_29"
  input: "lstm_model/RNN_net/while/EmptyTensorList_30"
  input: "lstm_model/RNN_net/while/EmptyTensorList_31"
  input: "lstm_model/RNN_net/while/EmptyTensorList_32"
  input: "lstm_model/RNN_net/while/EmptyTensorList_33"
  input: "lstm_model/RNN_net/while/EmptyTensorList_34"
  input: "lstm_model/RNN_net/while/EmptyTensorList_35"
  input: "lstm_model/RNN_net/while/EmptyTensorList_36"
  input: "lstm_model/RNN_net/while/EmptyTensorList_37"
  input: "lstm_model/RNN_net/while/EmptyTensorList_38"
  input: "lstm_model/RNN_net/while/EmptyTensorList_39"
  input: "lstm_model/RNN_net/while/EmptyTensorList_40"
  input: "lstm_model/RNN_net/while/EmptyTensorList_41"
  input: "lstm_model/RNN_net/while/EmptyTensorList_42"
  input: "lstm_model/RNN_net/while/EmptyTensorList_43"
  input: "lstm_model/RNN_net/while/EmptyTensorList_44"
  input: "lstm_model/RNN_net/while/EmptyTensorList_45"
  input: "lstm_model/RNN_net/while/EmptyTensorList_46"
  input: "lstm_model/RNN_net/while/EmptyTensorList_47"
  input: "lstm_model/RNN_net/while/EmptyTensorList_48"
  input: "lstm_model/RNN_net/while/EmptyTensorList_49"
  input: "lstm_model/RNN_net/while/EmptyTensorList_50"
  input: "lstm_model/RNN_net/while/EmptyTensorList_51"
  input: "lstm_model/RNN_net/while/EmptyTensorList_52"
  input: "lstm_model/RNN_net/while/EmptyTensorList_53"
  input: "lstm_model/RNN_net/while/EmptyTensorList_54"
  input: "lstm_model/RNN_net/while/EmptyTensorList_55"
  input: "lstm_model/RNN_net/while/EmptyTensorList_56"
  input: "lstm_model/RNN_net/while/EmptyTensorList_57"
  input: "lstm_model/RNN_net/while/EmptyTensorList_58"
  input: "lstm_model/RNN_net/while/EmptyTensorList_59"
  input: "lstm_model/RNN_net/while/EmptyTensorList_60"
  input: "lstm_model/RNN_net/while/EmptyTensorList_61"
  input: "lstm_model/RNN_net/while/EmptyTensorList_62"
  input: "lstm_model/RNN_net/while/EmptyTensorList_63"
  input: "lstm_model/RNN_net/while/EmptyTensorList_64"
  input: "lstm_model/RNN_net/while/EmptyTensorList_65"
  input: "lstm_model/RNN_net/while/EmptyTensorList_66"
  input: "lstm_model/RNN_net/while/EmptyTensorList_67"
  input: "lstm_model/RNN_net/while/EmptyTensorList_68"
  input: "lstm_model/RNN_net/while/EmptyTensorList_69"
  input: "lstm_model/RNN_net/while/EmptyTensorList_70"
  input: "lstm_model/RNN_net/while/EmptyTensorList_71"
  input: "lstm_model/RNN_net/while/EmptyTensorList_72"
  input: "lstm_model/RNN_net/while/EmptyTensorList_73"
  input: "lstm_model/RNN_net/while/EmptyTensorList_74"
  input: "lstm_model/RNN_net/while/EmptyTensorList_75"
  input: "lstm_model/RNN_net/while/EmptyTensorList_76"
  input: "lstm_model/RNN_net/while/EmptyTensorList_77"
  input: "lstm_model/RNN_net/while/EmptyTensorList_78"
  input: "lstm_model/RNN_net/while/EmptyTensorList_79"
  input: "lstm_model/RNN_net/while/EmptyTensorList_80"
  input: "lstm_model/RNN_net/while/EmptyTensorList_81"
  input: "lstm_model/RNN_net/while/EmptyTensorList_82"
  input: "lstm_model/RNN_net/while/EmptyTensorList_83"
  input: "lstm_model/RNN_net/while/EmptyTensorList_84"
  input: "lstm_model/RNN_net/while/EmptyTensorList_85"
  input: "lstm_model/RNN_net/while/EmptyTensorList_86"
  input: "lstm_model/RNN_net/while/EmptyTensorList_87"
  input: "lstm_model/RNN_net/while/EmptyTensorList_88"
  input: "lstm_model/RNN_net/while/EmptyTensorList_89"
  input: "lstm_model/RNN_net/while/EmptyTensorList_90"
  input: "lstm_model/RNN_net/while/EmptyTensorList_91"
  input: "lstm_model/RNN_net/while/EmptyTensorList_92"
  input: "lstm_model/RNN_net/while/EmptyTensorList_93"
  input: "lstm_model/RNN_net/while/EmptyTensorList_94"
  input: "lstm_model/RNN_net/while/EmptyTensorList_95"
  input: "lstm_model/RNN_net/while/EmptyTensorList_96"
  input: "lstm_model/RNN_net/while/EmptyTensorList_97"
  input: "lstm_model/RNN_net/while/EmptyTensorList_98"
  input: "lstm_model/RNN_net/while/EmptyTensorList_99"
  input: "lstm_model/RNN_net/while/EmptyTensorList_100"
  input: "lstm_model/RNN_net/while/EmptyTensorList_101"
  input: "lstm_model/RNN_net/while/EmptyTensorList_102"
  input: "lstm_model/RNN_net/while/EmptyTensorList_103"
  input: "lstm_model/RNN_net/while/EmptyTensorList_104"
  input: "lstm_model/RNN_net/while/EmptyTensorList_105"
  input: "lstm_model/RNN_net/while/EmptyTensorList_106"
  input: "lstm_model/RNN_net/while/EmptyTensorList_107"
  input: "lstm_model/RNN_net/while/EmptyTensorList_108"
  input: "lstm_model/RNN_net/while/EmptyTensorList_109"
  input: "lstm_model/RNN_net/while/EmptyTensorList_110"
  input: "lstm_model/RNN_net/while/EmptyTensorList_111"
  input: "lstm_model/RNN_net/while/EmptyTensorList_112"
  input: "lstm_model/RNN_net/while/EmptyTensorList_113"
  input: "lstm_model/RNN_net/while/EmptyTensorList_114"
  input: "lstm_model/RNN_net/while/EmptyTensorList_115"
  input: "lstm_model/RNN_net/while/EmptyTensorList_116"
  input: "lstm_model/RNN_net/while/EmptyTensorList_117"
  input: "lstm_model/RNN_net/while/EmptyTensorList_118"
  input: "lstm_model/RNN_net/while/EmptyTensorList_119"
  input: "lstm_model/RNN_net/while/EmptyTensorList_120"
  input: "lstm_model/RNN_net/while/EmptyTensorList_121"
  input: "lstm_model/RNN_net/while/EmptyTensorList_122"
  input: "lstm_model/RNN_net/while/EmptyTensorList_123"
  input: "lstm_model/RNN_net/while/EmptyTensorList_124"
  input: "lstm_model/RNN_net/while/EmptyTensorList_125"
  input: "lstm_model/RNN_net/while/EmptyTensorList_126"
  input: "lstm_model/RNN_net/while/EmptyTensorList_127"
  input: "lstm_model/RNN_net/while/EmptyTensorList_128"
  input: "lstm_model/RNN_net/while/EmptyTensorList_129"
  input: "lstm_model/RNN_net/while/EmptyTensorList_130"
  input: "lstm_model/RNN_net/while/EmptyTensorList_131"
  input: "lstm_model/RNN_net/while/EmptyTensorList_132"
  input: "lstm_model/RNN_net/while/EmptyTensorList_133"
  input: "lstm_model/RNN_net/while/EmptyTensorList_134"
  input: "lstm_model/RNN_net/while/EmptyTensorList_135"
  input: "lstm_model/RNN_net/while/EmptyTensorList_136"
  input: "lstm_model/RNN_net/while/EmptyTensorList_137"
  input: "lstm_model/RNN_net/while/EmptyTensorList_138"
  input: "lstm_model/RNN_net/while/EmptyTensorList_139"
  input: "lstm_model/RNN_net/while/EmptyTensorList_140"
  input: "lstm_model/RNN_net/while/EmptyTensorList_141"
  input: "lstm_model/RNN_net/while/EmptyTensorList_142"
  input: "lstm_model/RNN_net/while/EmptyTensorList_143"
  input: "lstm_model/RNN_net/while/EmptyTensorList_144"
  input: "lstm_model/RNN_net/while/EmptyTensorList_145"
  input: "lstm_model/RNN_net/while/EmptyTensorList_146"
  input: "lstm_model/RNN_net/while/EmptyTensorList_147"
  input: "lstm_model/RNN_net/while/EmptyTensorList_148"
  input: "lstm_model/RNN_net/while/EmptyTensorList_149"
  input: "lstm_model/RNN_net/while/EmptyTensorList_150"
  input: "lstm_model/RNN_net/while/EmptyTensorList_151"
  input: "lstm_model/RNN_net/while/EmptyTensorList_152"
  input: "lstm_model/RNN_net/while/EmptyTensorList_153"
  input: "lstm_model/RNN_net/while/EmptyTensorList_154"
  input: "lstm_model/RNN_net/while/EmptyTensorList_155"
  input: "lstm_model/RNN_net/while/EmptyTensorList_156"
  input: "lstm_model/RNN_net/while/EmptyTensorList_157"
  input: "lstm_model/RNN_net/while/EmptyTensorList_158"
  input: "lstm_model/RNN_net/while/EmptyTensorList_159"
  input: "lstm_model/RNN_net/while/EmptyTensorList_160"
  input: "lstm_model/RNN_net/while/EmptyTensorList_161"
  input: "lstm_model/RNN_net/while/EmptyTensorList_162"
  input: "lstm_model/RNN_net/while/EmptyTensorList_163"
  input: "lstm_model/RNN_net/while/EmptyTensorList_164"
  input: "lstm_model/RNN_net/while/EmptyTensorList_165"
  input: "lstm_model/RNN_net/while/EmptyTensorList_166"
  input: "lstm_model/RNN_net/while/EmptyTensorList_167"
  input: "lstm_model/RNN_net/while/EmptyTensorList_168"
  input: "lstm_model/RNN_net/while/EmptyTensorList_169"
  input: "lstm_model/RNN_net/while/EmptyTensorList_170"
  input: "gradients/lstm_model/RNN_net/while_grad/gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListElementShape_0/accumulator"
  input: "gradients/lstm_model/RNN_net/while_grad/gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListLength_0/accumulator"
  attr {
    key: "T"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_VARIANT
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_num_original_outputs"
    value {
      i: 189
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
        i: 10
        i: 11
        i: 12
        i: 13
        i: 14
        i: 15
      }
    }
  }
  attr {
    key: "_stateful_parallelism"
    value {
      b: false
    }
  }
  attr {
    key: "body"
    value {
      func {
        name: "lstm_model_RNN_net_while_body_2295_rewritten"
      }
    }
  }
  attr {
    key: "cond"
    value {
      func {
        name: "lstm_model_RNN_net_while_cond_2294_rewritten"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity"
  op: "Identity"
  input: "lstm_model/RNN_net/while"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_1"
  op: "Identity"
  input: "lstm_model/RNN_net/while:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_2"
  op: "Identity"
  input: "lstm_model/RNN_net/while:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_3"
  op: "Identity"
  input: "lstm_model/RNN_net/while:3"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_4"
  op: "Identity"
  input: "lstm_model/RNN_net/while:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_5"
  op: "Identity"
  input: "lstm_model/RNN_net/while:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_6"
  op: "Identity"
  input: "lstm_model/RNN_net/while:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_7"
  op: "Identity"
  input: "lstm_model/RNN_net/while:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_8"
  op: "Identity"
  input: "lstm_model/RNN_net/while:8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_9"
  op: "Identity"
  input: "lstm_model/RNN_net/while:9"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_10"
  op: "Identity"
  input: "lstm_model/RNN_net/while:10"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_11"
  op: "Identity"
  input: "lstm_model/RNN_net/while:11"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_12"
  op: "Identity"
  input: "lstm_model/RNN_net/while:12"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_13"
  op: "Identity"
  input: "lstm_model/RNN_net/while:13"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_14"
  op: "Identity"
  input: "lstm_model/RNN_net/while:14"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_15"
  op: "Identity"
  input: "lstm_model/RNN_net/while:15"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_16"
  op: "Identity"
  input: "lstm_model/RNN_net/while:16"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_17"
  op: "Identity"
  input: "lstm_model/RNN_net/while:17"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_18"
  op: "Identity"
  input: "lstm_model/RNN_net/while:18"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_19"
  op: "Identity"
  input: "lstm_model/RNN_net/while:19"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_20"
  op: "Identity"
  input: "lstm_model/RNN_net/while:20"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_21"
  op: "Identity"
  input: "lstm_model/RNN_net/while:21"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_22"
  op: "Identity"
  input: "lstm_model/RNN_net/while:22"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_23"
  op: "Identity"
  input: "lstm_model/RNN_net/while:23"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_24"
  op: "Identity"
  input: "lstm_model/RNN_net/while:24"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_25"
  op: "Identity"
  input: "lstm_model/RNN_net/while:25"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_26"
  op: "Identity"
  input: "lstm_model/RNN_net/while:26"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_27"
  op: "Identity"
  input: "lstm_model/RNN_net/while:27"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_28"
  op: "Identity"
  input: "lstm_model/RNN_net/while:28"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_29"
  op: "Identity"
  input: "lstm_model/RNN_net/while:29"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_30"
  op: "Identity"
  input: "lstm_model/RNN_net/while:30"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_31"
  op: "Identity"
  input: "lstm_model/RNN_net/while:31"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_32"
  op: "Identity"
  input: "lstm_model/RNN_net/while:32"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_33"
  op: "Identity"
  input: "lstm_model/RNN_net/while:33"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_34"
  op: "Identity"
  input: "lstm_model/RNN_net/while:34"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_35"
  op: "Identity"
  input: "lstm_model/RNN_net/while:35"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_36"
  op: "Identity"
  input: "lstm_model/RNN_net/while:36"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_37"
  op: "Identity"
  input: "lstm_model/RNN_net/while:37"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_38"
  op: "Identity"
  input: "lstm_model/RNN_net/while:38"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_39"
  op: "Identity"
  input: "lstm_model/RNN_net/while:39"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_40"
  op: "Identity"
  input: "lstm_model/RNN_net/while:40"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_41"
  op: "Identity"
  input: "lstm_model/RNN_net/while:41"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_42"
  op: "Identity"
  input: "lstm_model/RNN_net/while:42"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_43"
  op: "Identity"
  input: "lstm_model/RNN_net/while:43"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_44"
  op: "Identity"
  input: "lstm_model/RNN_net/while:44"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_45"
  op: "Identity"
  input: "lstm_model/RNN_net/while:45"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_46"
  op: "Identity"
  input: "lstm_model/RNN_net/while:46"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_47"
  op: "Identity"
  input: "lstm_model/RNN_net/while:47"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_48"
  op: "Identity"
  input: "lstm_model/RNN_net/while:48"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_49"
  op: "Identity"
  input: "lstm_model/RNN_net/while:49"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_50"
  op: "Identity"
  input: "lstm_model/RNN_net/while:50"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_51"
  op: "Identity"
  input: "lstm_model/RNN_net/while:51"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_52"
  op: "Identity"
  input: "lstm_model/RNN_net/while:52"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_53"
  op: "Identity"
  input: "lstm_model/RNN_net/while:53"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_54"
  op: "Identity"
  input: "lstm_model/RNN_net/while:54"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_55"
  op: "Identity"
  input: "lstm_model/RNN_net/while:55"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_56"
  op: "Identity"
  input: "lstm_model/RNN_net/while:56"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_57"
  op: "Identity"
  input: "lstm_model/RNN_net/while:57"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_58"
  op: "Identity"
  input: "lstm_model/RNN_net/while:58"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_59"
  op: "Identity"
  input: "lstm_model/RNN_net/while:59"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_60"
  op: "Identity"
  input: "lstm_model/RNN_net/while:60"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_61"
  op: "Identity"
  input: "lstm_model/RNN_net/while:61"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_62"
  op: "Identity"
  input: "lstm_model/RNN_net/while:62"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_63"
  op: "Identity"
  input: "lstm_model/RNN_net/while:63"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_64"
  op: "Identity"
  input: "lstm_model/RNN_net/while:64"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_65"
  op: "Identity"
  input: "lstm_model/RNN_net/while:65"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_66"
  op: "Identity"
  input: "lstm_model/RNN_net/while:66"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_67"
  op: "Identity"
  input: "lstm_model/RNN_net/while:67"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_68"
  op: "Identity"
  input: "lstm_model/RNN_net/while:68"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_69"
  op: "Identity"
  input: "lstm_model/RNN_net/while:69"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_70"
  op: "Identity"
  input: "lstm_model/RNN_net/while:70"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_71"
  op: "Identity"
  input: "lstm_model/RNN_net/while:71"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_72"
  op: "Identity"
  input: "lstm_model/RNN_net/while:72"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_73"
  op: "Identity"
  input: "lstm_model/RNN_net/while:73"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_74"
  op: "Identity"
  input: "lstm_model/RNN_net/while:74"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_75"
  op: "Identity"
  input: "lstm_model/RNN_net/while:75"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_76"
  op: "Identity"
  input: "lstm_model/RNN_net/while:76"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_77"
  op: "Identity"
  input: "lstm_model/RNN_net/while:77"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_78"
  op: "Identity"
  input: "lstm_model/RNN_net/while:78"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_79"
  op: "Identity"
  input: "lstm_model/RNN_net/while:79"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_80"
  op: "Identity"
  input: "lstm_model/RNN_net/while:80"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_81"
  op: "Identity"
  input: "lstm_model/RNN_net/while:81"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_82"
  op: "Identity"
  input: "lstm_model/RNN_net/while:82"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_83"
  op: "Identity"
  input: "lstm_model/RNN_net/while:83"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_84"
  op: "Identity"
  input: "lstm_model/RNN_net/while:84"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_85"
  op: "Identity"
  input: "lstm_model/RNN_net/while:85"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_86"
  op: "Identity"
  input: "lstm_model/RNN_net/while:86"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_87"
  op: "Identity"
  input: "lstm_model/RNN_net/while:87"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_88"
  op: "Identity"
  input: "lstm_model/RNN_net/while:88"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_89"
  op: "Identity"
  input: "lstm_model/RNN_net/while:89"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_90"
  op: "Identity"
  input: "lstm_model/RNN_net/while:90"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_91"
  op: "Identity"
  input: "lstm_model/RNN_net/while:91"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_92"
  op: "Identity"
  input: "lstm_model/RNN_net/while:92"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_93"
  op: "Identity"
  input: "lstm_model/RNN_net/while:93"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_94"
  op: "Identity"
  input: "lstm_model/RNN_net/while:94"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_95"
  op: "Identity"
  input: "lstm_model/RNN_net/while:95"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_96"
  op: "Identity"
  input: "lstm_model/RNN_net/while:96"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_97"
  op: "Identity"
  input: "lstm_model/RNN_net/while:97"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_98"
  op: "Identity"
  input: "lstm_model/RNN_net/while:98"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_99"
  op: "Identity"
  input: "lstm_model/RNN_net/while:99"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_100"
  op: "Identity"
  input: "lstm_model/RNN_net/while:100"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_101"
  op: "Identity"
  input: "lstm_model/RNN_net/while:101"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_102"
  op: "Identity"
  input: "lstm_model/RNN_net/while:102"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_103"
  op: "Identity"
  input: "lstm_model/RNN_net/while:103"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_104"
  op: "Identity"
  input: "lstm_model/RNN_net/while:104"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_105"
  op: "Identity"
  input: "lstm_model/RNN_net/while:105"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_106"
  op: "Identity"
  input: "lstm_model/RNN_net/while:106"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_107"
  op: "Identity"
  input: "lstm_model/RNN_net/while:107"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_108"
  op: "Identity"
  input: "lstm_model/RNN_net/while:108"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_109"
  op: "Identity"
  input: "lstm_model/RNN_net/while:109"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_110"
  op: "Identity"
  input: "lstm_model/RNN_net/while:110"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_111"
  op: "Identity"
  input: "lstm_model/RNN_net/while:111"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_112"
  op: "Identity"
  input: "lstm_model/RNN_net/while:112"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_113"
  op: "Identity"
  input: "lstm_model/RNN_net/while:113"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_114"
  op: "Identity"
  input: "lstm_model/RNN_net/while:114"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_115"
  op: "Identity"
  input: "lstm_model/RNN_net/while:115"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_116"
  op: "Identity"
  input: "lstm_model/RNN_net/while:116"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_117"
  op: "Identity"
  input: "lstm_model/RNN_net/while:117"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_118"
  op: "Identity"
  input: "lstm_model/RNN_net/while:118"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_119"
  op: "Identity"
  input: "lstm_model/RNN_net/while:119"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_120"
  op: "Identity"
  input: "lstm_model/RNN_net/while:120"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_121"
  op: "Identity"
  input: "lstm_model/RNN_net/while:121"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_122"
  op: "Identity"
  input: "lstm_model/RNN_net/while:122"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_123"
  op: "Identity"
  input: "lstm_model/RNN_net/while:123"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_124"
  op: "Identity"
  input: "lstm_model/RNN_net/while:124"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_125"
  op: "Identity"
  input: "lstm_model/RNN_net/while:125"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_126"
  op: "Identity"
  input: "lstm_model/RNN_net/while:126"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_127"
  op: "Identity"
  input: "lstm_model/RNN_net/while:127"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_128"
  op: "Identity"
  input: "lstm_model/RNN_net/while:128"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_129"
  op: "Identity"
  input: "lstm_model/RNN_net/while:129"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_130"
  op: "Identity"
  input: "lstm_model/RNN_net/while:130"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_131"
  op: "Identity"
  input: "lstm_model/RNN_net/while:131"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_132"
  op: "Identity"
  input: "lstm_model/RNN_net/while:132"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_133"
  op: "Identity"
  input: "lstm_model/RNN_net/while:133"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_134"
  op: "Identity"
  input: "lstm_model/RNN_net/while:134"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_135"
  op: "Identity"
  input: "lstm_model/RNN_net/while:135"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_136"
  op: "Identity"
  input: "lstm_model/RNN_net/while:136"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_137"
  op: "Identity"
  input: "lstm_model/RNN_net/while:137"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_138"
  op: "Identity"
  input: "lstm_model/RNN_net/while:138"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_139"
  op: "Identity"
  input: "lstm_model/RNN_net/while:139"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_140"
  op: "Identity"
  input: "lstm_model/RNN_net/while:140"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_141"
  op: "Identity"
  input: "lstm_model/RNN_net/while:141"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_142"
  op: "Identity"
  input: "lstm_model/RNN_net/while:142"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_143"
  op: "Identity"
  input: "lstm_model/RNN_net/while:143"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_144"
  op: "Identity"
  input: "lstm_model/RNN_net/while:144"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_145"
  op: "Identity"
  input: "lstm_model/RNN_net/while:145"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_146"
  op: "Identity"
  input: "lstm_model/RNN_net/while:146"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_147"
  op: "Identity"
  input: "lstm_model/RNN_net/while:147"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_148"
  op: "Identity"
  input: "lstm_model/RNN_net/while:148"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_149"
  op: "Identity"
  input: "lstm_model/RNN_net/while:149"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_150"
  op: "Identity"
  input: "lstm_model/RNN_net/while:150"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_151"
  op: "Identity"
  input: "lstm_model/RNN_net/while:151"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_152"
  op: "Identity"
  input: "lstm_model/RNN_net/while:152"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_153"
  op: "Identity"
  input: "lstm_model/RNN_net/while:153"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_154"
  op: "Identity"
  input: "lstm_model/RNN_net/while:154"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_155"
  op: "Identity"
  input: "lstm_model/RNN_net/while:155"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_156"
  op: "Identity"
  input: "lstm_model/RNN_net/while:156"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_157"
  op: "Identity"
  input: "lstm_model/RNN_net/while:157"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_158"
  op: "Identity"
  input: "lstm_model/RNN_net/while:158"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_159"
  op: "Identity"
  input: "lstm_model/RNN_net/while:159"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_160"
  op: "Identity"
  input: "lstm_model/RNN_net/while:160"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_161"
  op: "Identity"
  input: "lstm_model/RNN_net/while:161"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_162"
  op: "Identity"
  input: "lstm_model/RNN_net/while:162"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_163"
  op: "Identity"
  input: "lstm_model/RNN_net/while:163"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_164"
  op: "Identity"
  input: "lstm_model/RNN_net/while:164"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_165"
  op: "Identity"
  input: "lstm_model/RNN_net/while:165"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_166"
  op: "Identity"
  input: "lstm_model/RNN_net/while:166"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_167"
  op: "Identity"
  input: "lstm_model/RNN_net/while:167"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_168"
  op: "Identity"
  input: "lstm_model/RNN_net/while:168"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_169"
  op: "Identity"
  input: "lstm_model/RNN_net/while:169"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_170"
  op: "Identity"
  input: "lstm_model/RNN_net/while:170"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_171"
  op: "Identity"
  input: "lstm_model/RNN_net/while:171"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_172"
  op: "Identity"
  input: "lstm_model/RNN_net/while:172"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_173"
  op: "Identity"
  input: "lstm_model/RNN_net/while:173"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_174"
  op: "Identity"
  input: "lstm_model/RNN_net/while:174"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_175"
  op: "Identity"
  input: "lstm_model/RNN_net/while:175"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_176"
  op: "Identity"
  input: "lstm_model/RNN_net/while:176"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_177"
  op: "Identity"
  input: "lstm_model/RNN_net/while:177"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_178"
  op: "Identity"
  input: "lstm_model/RNN_net/while:178"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_179"
  op: "Identity"
  input: "lstm_model/RNN_net/while:179"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_180"
  op: "Identity"
  input: "lstm_model/RNN_net/while:180"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_181"
  op: "Identity"
  input: "lstm_model/RNN_net/while:181"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_182"
  op: "Identity"
  input: "lstm_model/RNN_net/while:182"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_183"
  op: "Identity"
  input: "lstm_model/RNN_net/while:183"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_184"
  op: "Identity"
  input: "lstm_model/RNN_net/while:184"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_185"
  op: "Identity"
  input: "lstm_model/RNN_net/while:185"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/while/Identity_186"
  op: "Identity"
  input: "lstm_model/RNN_net/while:186"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/TensorArrayV2Stack/TensorListStack/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/TensorArrayV2Stack/TensorListStack"
  op: "TensorListStack"
  input: "lstm_model/RNN_net/while/Identity_3"
  input: "lstm_model/RNN_net/TensorArrayV2Stack/TensorListStack/element_shape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_elements"
    value {
      i: 1
    }
  }
}
node {
  name: "lstm_model/RNN_net/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/strided_slice_3"
  op: "StridedSlice"
  input: "lstm_model/RNN_net/TensorArrayV2Stack/TensorListStack"
  input: "lstm_model/RNN_net/strided_slice_3/stack"
  input: "lstm_model/RNN_net/strided_slice_3/stack_1"
  input: "lstm_model/RNN_net/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "lstm_model/RNN_net/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "lstm_model/RNN_net/transpose_1"
  op: "Transpose"
  input: "lstm_model/RNN_net/TensorArrayV2Stack/TensorListStack"
  input: "lstm_model/RNN_net/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/w_conf/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "w_conf/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/w_conf/MatMul"
  op: "MatMul"
  input: "lstm_model/RNN_net/strided_slice_3"
  input: "lstm_model/w_conf/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_model/w_conf/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "w_conf/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/w_conf/BiasAdd"
  op: "BiasAdd"
  input: "lstm_model/w_conf/MatMul"
  input: "lstm_model/w_conf/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "lstm_model/w_reg/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "w_reg/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/w_reg/MatMul"
  op: "MatMul"
  input: "lstm_model/RNN_net/strided_slice_3"
  input: "lstm_model/w_reg/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_model/w_reg/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "w_reg/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/w_reg/BiasAdd"
  op: "BiasAdd"
  input: "lstm_model/w_reg/MatMul"
  input: "lstm_model/w_reg/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "lstm_model/h_conf/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "h_conf/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/h_conf/MatMul"
  op: "MatMul"
  input: "lstm_model/RNN_net/strided_slice_3"
  input: "lstm_model/h_conf/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_model/h_conf/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "h_conf/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/h_conf/BiasAdd"
  op: "BiasAdd"
  input: "lstm_model/h_conf/MatMul"
  input: "lstm_model/h_conf/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "lstm_model/h_reg/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "h_reg/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/h_reg/MatMul"
  op: "MatMul"
  input: "lstm_model/RNN_net/strided_slice_3"
  input: "lstm_model/h_reg/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_model/h_reg/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "h_reg/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/h_reg/BiasAdd"
  op: "BiasAdd"
  input: "lstm_model/h_reg/MatMul"
  input: "lstm_model/h_reg/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "lstm_model/y_conf/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "y_conf/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/y_conf/MatMul"
  op: "MatMul"
  input: "lstm_model/RNN_net/strided_slice_3"
  input: "lstm_model/y_conf/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_model/y_conf/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "y_conf/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/y_conf/BiasAdd"
  op: "BiasAdd"
  input: "lstm_model/y_conf/MatMul"
  input: "lstm_model/y_conf/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "lstm_model/y_reg/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "y_reg/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/y_reg/MatMul"
  op: "MatMul"
  input: "lstm_model/RNN_net/strided_slice_3"
  input: "lstm_model/y_reg/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_model/y_reg/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "y_reg/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/y_reg/BiasAdd"
  op: "BiasAdd"
  input: "lstm_model/y_reg/MatMul"
  input: "lstm_model/y_reg/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "lstm_model/x_conf/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "x_conf/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/x_conf/MatMul"
  op: "MatMul"
  input: "lstm_model/RNN_net/strided_slice_3"
  input: "lstm_model/x_conf/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_model/x_conf/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "x_conf/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/x_conf/BiasAdd"
  op: "BiasAdd"
  input: "lstm_model/x_conf/MatMul"
  input: "lstm_model/x_conf/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "lstm_model/x_reg/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "x_reg/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/x_reg/MatMul"
  op: "MatMul"
  input: "lstm_model/RNN_net/strided_slice_3"
  input: "lstm_model/x_reg/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_model/x_reg/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "x_reg/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_model/x_reg/BiasAdd"
  op: "BiasAdd"
  input: "lstm_model/x_reg/MatMul"
  input: "lstm_model/x_reg/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "lstm_model/w_comb/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_model/w_comb/concat"
  op: "ConcatV2"
  input: "lstm_model/w_conf/BiasAdd"
  input: "lstm_model/w_reg/BiasAdd"
  input: "lstm_model/w_comb/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/h_comb/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_model/h_comb/concat"
  op: "ConcatV2"
  input: "lstm_model/h_conf/BiasAdd"
  input: "lstm_model/h_reg/BiasAdd"
  input: "lstm_model/h_comb/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/y_comb/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_model/y_comb/concat"
  op: "ConcatV2"
  input: "lstm_model/y_conf/BiasAdd"
  input: "lstm_model/y_reg/BiasAdd"
  input: "lstm_model/y_comb/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "lstm_model/x_comb/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_model/x_comb/concat"
  op: "ConcatV2"
  input: "lstm_model/x_conf/BiasAdd"
  input: "lstm_model/x_reg/BiasAdd"
  input: "lstm_model/x_comb/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "stack"
  op: "Pack"
  input: "lstm_model/x_comb/concat"
  input: "lstm_model/y_comb/concat"
  input: "lstm_model/h_comb/concat"
  input: "lstm_model/w_comb/concat"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -2
    }
  }
}
node {
  name: "strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "IteratorGetNext:1"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "ArgMax/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ArgMax"
  op: "ArgMax"
  input: "strided_slice"
  input: "ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_1"
  op: "StridedSlice"
  input: "stack"
  input: "strided_slice_1/stack"
  input: "strided_slice_1/stack_1"
  input: "strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "one_hot"
  op: "OneHot"
  input: "ArgMax"
  input: "one_hot/depth"
  input: "one_hot/on_value"
  input: "one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "strided_slice_1"
  input: "one_hot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_2"
  op: "StridedSlice"
  input: "IteratorGetNext:1"
  input: "strided_slice_2/stack"
  input: "strided_slice_2/stack_1"
  input: "strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "huber_loss/Sub"
  op: "Sub"
  input: "mul"
  input: "strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "huber_loss/Abs"
  op: "Abs"
  input: "huber_loss/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "huber_loss/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "huber_loss/Minimum"
  op: "Minimum"
  input: "huber_loss/Abs"
  input: "huber_loss/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "huber_loss/Sub_1"
  op: "Sub"
  input: "huber_loss/Abs"
  input: "huber_loss/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "huber_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "huber_loss/Mul"
  op: "Mul"
  input: "huber_loss/Minimum"
  input: "huber_loss/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "huber_loss/Mul_1"
  op: "Mul"
  input: "huber_loss/Const"
  input: "huber_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "huber_loss/Mul_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "huber_loss/Mul_2"
  op: "Mul"
  input: "huber_loss/Mul_2/x"
  input: "huber_loss/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "huber_loss/Add"
  op: "AddV2"
  input: "huber_loss/Mul_1"
  input: "huber_loss/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "huber_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "huber_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "huber_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "huber_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "huber_loss/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "huber_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "huber_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "huber_loss/Cast/x"
  op: "Const"
  input: "^huber_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "huber_loss/Mul_3"
  op: "Mul"
  input: "huber_loss/Add"
  input: "huber_loss/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "huber_loss/Const_1"
  op: "Const"
  input: "^huber_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "huber_loss/Sum"
  op: "Sum"
  input: "huber_loss/Mul_3"
  input: "huber_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "huber_loss/num_present/Equal/y"
  op: "Const"
  input: "^huber_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "huber_loss/num_present/Equal"
  op: "Equal"
  input: "huber_loss/Cast/x"
  input: "huber_loss/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "huber_loss/num_present/zeros_like"
  op: "Const"
  input: "^huber_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "huber_loss/num_present/ones_like/Shape/shape_as_tensor"
  op: "Const"
  input: "^huber_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "huber_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^huber_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "huber_loss/num_present/ones_like"
  op: "Fill"
  input: "huber_loss/num_present/ones_like/Shape/shape_as_tensor"
  input: "huber_loss/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "huber_loss/num_present/Select"
  op: "Select"
  input: "huber_loss/num_present/Equal"
  input: "huber_loss/num_present/zeros_like"
  input: "huber_loss/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "huber_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^huber_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "huber_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^huber_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "huber_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "huber_loss/Add"
  input: "^huber_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "huber_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^huber_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "huber_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^huber_loss/assert_broadcastable/static_scalar_check_success"
}
node {
  name: "huber_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "huber_loss/Add"
  input: "^huber_loss/assert_broadcastable/static_scalar_check_success"
  input: "^huber_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "huber_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^huber_loss/assert_broadcastable/static_scalar_check_success"
  input: "^huber_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "huber_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "huber_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "huber_loss/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "huber_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "huber_loss/num_present/Select"
  input: "huber_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "huber_loss/num_present/Const"
  op: "Const"
  input: "^huber_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "huber_loss/num_present"
  op: "Sum"
  input: "huber_loss/num_present/broadcast_weights"
  input: "huber_loss/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "huber_loss/Rank"
  op: "Const"
  input: "^huber_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "huber_loss/range/start"
  op: "Const"
  input: "^huber_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "huber_loss/range/delta"
  op: "Const"
  input: "^huber_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "huber_loss/range"
  op: "Range"
  input: "huber_loss/range/start"
  input: "huber_loss/Rank"
  input: "huber_loss/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "huber_loss/Sum_1"
  op: "Sum"
  input: "huber_loss/Sum"
  input: "huber_loss/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "huber_loss/value"
  op: "DivNoNan"
  input: "huber_loss/Sum_1"
  input: "huber_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_3"
  op: "StridedSlice"
  input: "IteratorGetNext:1"
  input: "strided_slice_3/stack"
  input: "strided_slice_3/stack_1"
  input: "strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_4"
  op: "StridedSlice"
  input: "stack"
  input: "strided_slice_4/stack"
  input: "strided_slice_4/stack_1"
  input: "strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/labels_stop_gradient"
  op: "StopGradient"
  input: "strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Shape"
  op: "Shape"
  input: "strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Shape_1"
  op: "Shape"
  input: "strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub"
  op: "Sub"
  input: "softmax_cross_entropy_loss/xentropy/Rank_1"
  input: "softmax_cross_entropy_loss/xentropy/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice/begin"
  op: "Pack"
  input: "softmax_cross_entropy_loss/xentropy/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice"
  op: "Slice"
  input: "softmax_cross_entropy_loss/xentropy/Shape_1"
  input: "softmax_cross_entropy_loss/xentropy/Slice/begin"
  input: "softmax_cross_entropy_loss/xentropy/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat"
  op: "ConcatV2"
  input: "softmax_cross_entropy_loss/xentropy/concat/values_0"
  input: "softmax_cross_entropy_loss/xentropy/Slice"
  input: "softmax_cross_entropy_loss/xentropy/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Reshape"
  op: "Reshape"
  input: "strided_slice_4"
  input: "softmax_cross_entropy_loss/xentropy/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Rank_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Shape_2"
  op: "Shape"
  input: "softmax_cross_entropy_loss/labels_stop_gradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_1"
  op: "Sub"
  input: "softmax_cross_entropy_loss/xentropy/Rank_2"
  input: "softmax_cross_entropy_loss/xentropy/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_1/begin"
  op: "Pack"
  input: "softmax_cross_entropy_loss/xentropy/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_1"
  op: "Slice"
  input: "softmax_cross_entropy_loss/xentropy/Shape_2"
  input: "softmax_cross_entropy_loss/xentropy/Slice_1/begin"
  input: "softmax_cross_entropy_loss/xentropy/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat_1"
  op: "ConcatV2"
  input: "softmax_cross_entropy_loss/xentropy/concat_1/values_0"
  input: "softmax_cross_entropy_loss/xentropy/Slice_1"
  input: "softmax_cross_entropy_loss/xentropy/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Reshape_1"
  op: "Reshape"
  input: "softmax_cross_entropy_loss/labels_stop_gradient"
  input: "softmax_cross_entropy_loss/xentropy/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "softmax_cross_entropy_loss/xentropy/Reshape"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_2"
  op: "Sub"
  input: "softmax_cross_entropy_loss/xentropy/Rank"
  input: "softmax_cross_entropy_loss/xentropy/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_2/size"
  op: "Pack"
  input: "softmax_cross_entropy_loss/xentropy/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_2"
  op: "Slice"
  input: "softmax_cross_entropy_loss/xentropy/Shape"
  input: "softmax_cross_entropy_loss/xentropy/Slice_2/begin"
  input: "softmax_cross_entropy_loss/xentropy/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  op: "Reshape"
  input: "softmax_cross_entropy_loss/xentropy"
  input: "softmax_cross_entropy_loss/xentropy/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "softmax_cross_entropy_loss/Cast/x"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "softmax_cross_entropy_loss/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Sum"
  op: "Sum"
  input: "softmax_cross_entropy_loss/Mul"
  input: "softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Equal/y"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Equal"
  op: "Equal"
  input: "softmax_cross_entropy_loss/Cast/x"
  input: "softmax_cross_entropy_loss/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/zeros_like"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/ones_like/Shape/shape_as_tensor"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/ones_like"
  op: "Fill"
  input: "softmax_cross_entropy_loss/num_present/ones_like/Shape/shape_as_tensor"
  input: "softmax_cross_entropy_loss/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Select"
  op: "Select"
  input: "softmax_cross_entropy_loss/num_present/Equal"
  input: "softmax_cross_entropy_loss/num_present/zeros_like"
  input: "softmax_cross_entropy_loss/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "softmax_cross_entropy_loss/num_present/Select"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present"
  op: "Sum"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights"
  input: "softmax_cross_entropy_loss/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Rank"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/range/start"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/range/delta"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/range"
  op: "Range"
  input: "softmax_cross_entropy_loss/range/start"
  input: "softmax_cross_entropy_loss/Rank"
  input: "softmax_cross_entropy_loss/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Sum_1"
  op: "Sum"
  input: "softmax_cross_entropy_loss/Sum"
  input: "softmax_cross_entropy_loss/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/value"
  op: "DivNoNan"
  input: "softmax_cross_entropy_loss/Sum_1"
  input: "softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1000.0
      }
    }
  }
}
node {
  name: "mul_1"
  op: "Mul"
  input: "mul_1/x"
  input: "softmax_cross_entropy_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add"
  op: "AddV2"
  input: "mul_1"
  input: "huber_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\277\000\000\000\000\315\314\314=\315\314L>\000\000\000?"
      }
    }
  }
}
node {
  name: "strided_slice_5/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_5"
  op: "StridedSlice"
  input: "stack"
  input: "strided_slice_5/stack"
  input: "strided_slice_5/stack_1"
  input: "strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ArgMax_1"
  op: "ArgMax"
  input: "strided_slice_5"
  input: "ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_6/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_6"
  op: "StridedSlice"
  input: "stack"
  input: "strided_slice_6/stack"
  input: "strided_slice_6/stack_1"
  input: "strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "one_hot_1/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "one_hot_1/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "one_hot_1/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "one_hot_1"
  op: "OneHot"
  input: "ArgMax_1"
  input: "one_hot_1/depth"
  input: "one_hot_1/on_value"
  input: "one_hot_1/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "mul_2"
  op: "Mul"
  input: "strided_slice_6"
  input: "one_hot_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Sum"
  op: "Sum"
  input: "mul_2"
  input: "Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map/Shape"
  op: "Shape"
  input: "ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map/strided_slice"
  op: "StridedSlice"
  input: "map/Shape"
  input: "map/strided_slice/stack"
  input: "map/strided_slice/stack_1"
  input: "map/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map/TensorArrayV2/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "map/TensorArrayV2"
  op: "TensorListReserve"
  input: "map/TensorArrayV2/element_shape"
  input: "map/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack/TensorListFromTensor/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "map/TensorArrayUnstack/TensorListFromTensor"
  op: "TensorListFromTensor"
  input: "ArgMax_1"
  input: "map/TensorArrayUnstack/TensorListFromTensor/element_shape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "map/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/TensorArrayV2_1/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "map/TensorArrayV2_1"
  op: "TensorListReserve"
  input: "map/TensorArrayV2_1/element_shape"
  input: "map/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "map/while/loop_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map/while"
  op: "StatelessWhile"
  input: "map/while/loop_counter"
  input: "map/strided_slice"
  input: "map/Const"
  input: "map/TensorArrayV2_1"
  input: "map/strided_slice"
  input: "map/TensorArrayUnstack/TensorListFromTensor"
  input: "Const"
  attr {
    key: "T"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_VARIANT
        type: DT_INT32
        type: DT_VARIANT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_num_original_outputs"
    value {
      i: 7
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "_stateful_parallelism"
    value {
      b: false
    }
  }
  attr {
    key: "body"
    value {
      func {
        name: "map_while_body_4115"
      }
    }
  }
  attr {
    key: "cond"
    value {
      func {
        name: "map_while_cond_4114"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map/while/Identity"
  op: "Identity"
  input: "map/while"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Identity_1"
  op: "Identity"
  input: "map/while:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Identity_2"
  op: "Identity"
  input: "map/while:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Identity_3"
  op: "Identity"
  input: "map/while:3"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Identity_4"
  op: "Identity"
  input: "map/while:4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Identity_5"
  op: "Identity"
  input: "map/while:5"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map/while/Identity_6"
  op: "Identity"
  input: "map/while:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "map/TensorArrayV2Stack/TensorListStack/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "map/TensorArrayV2Stack/TensorListStack"
  op: "TensorListStack"
  input: "map/while/Identity_3"
  input: "map/TensorArrayV2Stack/TensorListStack/element_shape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_elements"
    value {
      i: -1
    }
  }
}
node {
  name: "add_1"
  op: "AddV2"
  input: "map/TensorArrayV2Stack/TensorListStack"
  input: "Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_7/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_7"
  op: "StridedSlice"
  input: "IteratorGetNext"
  input: "strided_slice_7/stack"
  input: "strided_slice_7/stack_1"
  input: "strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "add_2"
  op: "AddV2"
  input: "add_1"
  input: "strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\277\000\000\000\000\315\314\314=\315\314L>\000\000\000?"
      }
    }
  }
}
node {
  name: "strided_slice_8/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_8"
  op: "StridedSlice"
  input: "IteratorGetNext:1"
  input: "strided_slice_8/stack"
  input: "strided_slice_8/stack_1"
  input: "strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "ArgMax_2/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ArgMax_2"
  op: "ArgMax"
  input: "strided_slice_8"
  input: "ArgMax_2/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_9/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_9/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_9/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_9"
  op: "StridedSlice"
  input: "IteratorGetNext:1"
  input: "strided_slice_9/stack"
  input: "strided_slice_9/stack_1"
  input: "strided_slice_9/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "one_hot_2/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "one_hot_2/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "one_hot_2/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "one_hot_2"
  op: "OneHot"
  input: "ArgMax_2"
  input: "one_hot_2/depth"
  input: "one_hot_2/on_value"
  input: "one_hot_2/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "mul_3"
  op: "Mul"
  input: "strided_slice_9"
  input: "one_hot_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Sum_1"
  op: "Sum"
  input: "mul_3"
  input: "Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "map_1/Shape"
  op: "Shape"
  input: "ArgMax_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "map_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "map_1/strided_slice"
  op: "StridedSlice"
  input: "map_1/Shape"
  input: "map_1/strided_slice/stack"
  input: "map_1/strided_slice/stack_1"
  input: "map_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "map_1/TensorArrayV2/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "map_1/TensorArrayV2"
  op: "TensorListReserve"
  input: "map_1/TensorArrayV2/element_shape"
  input: "map_1/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "map_1/TensorArrayUnstack/TensorListFromTensor/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "map_1/TensorArrayUnstack/TensorListFromTensor"
  op: "TensorListFromTensor"
  input: "ArgMax_2"
  input: "map_1/TensorArrayUnstack/TensorListFromTensor/element_shape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "map_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_1/TensorArrayV2_1/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "map_1/TensorArrayV2_1"
  op: "TensorListReserve"
  input: "map_1/TensorArrayV2_1/element_shape"
  input: "map_1/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "map_1/while/loop_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "map_1/while"
  op: "StatelessWhile"
  input: "map_1/while/loop_counter"
  input: "map_1/strided_slice"
  input: "map_1/Const"
  input: "map_1/TensorArrayV2_1"
  input: "map_1/strided_slice"
  input: "map_1/TensorArrayUnstack/TensorListFromTensor"
  input: "Const_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_VARIANT
        type: DT_INT32
        type: DT_VARIANT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_num_original_outputs"
    value {
      i: 7
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "_stateful_parallelism"
    value {
      b: false
    }
  }
  attr {
    key: "body"
    value {
      func {
        name: "map_1_while_body_4248"
      }
    }
  }
  attr {
    key: "cond"
    value {
      func {
        name: "map_1_while_cond_4247"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "map_1/while/Identity"
  op: "Identity"
  input: "map_1/while"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Identity_1"
  op: "Identity"
  input: "map_1/while:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Identity_2"
  op: "Identity"
  input: "map_1/while:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Identity_3"
  op: "Identity"
  input: "map_1/while:3"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Identity_4"
  op: "Identity"
  input: "map_1/while:4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Identity_5"
  op: "Identity"
  input: "map_1/while:5"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "map_1/while/Identity_6"
  op: "Identity"
  input: "map_1/while:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "map_1/TensorArrayV2Stack/TensorListStack/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "map_1/TensorArrayV2Stack/TensorListStack"
  op: "TensorListStack"
  input: "map_1/while/Identity_3"
  input: "map_1/TensorArrayV2Stack/TensorListStack/element_shape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_elements"
    value {
      i: -1
    }
  }
}
node {
  name: "add_3"
  op: "AddV2"
  input: "map_1/TensorArrayV2Stack/TensorListStack"
  input: "Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "strided_slice_10/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_10/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_10/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_10"
  op: "StridedSlice"
  input: "IteratorGetNext"
  input: "strided_slice_10/stack"
  input: "strided_slice_10/stack_1"
  input: "strided_slice_10/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "add_4"
  op: "AddV2"
  input: "add_3"
  input: "strided_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "SquaredDifference"
  op: "SquaredDifference"
  input: "add_2"
  input: "add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_squared_error/total"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "mean_squared_error/total"
    }
  }
}
node {
  name: "mean_squared_error/total/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "mean_squared_error/total"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/total/Assign"
  op: "AssignVariableOp"
  input: "mean_squared_error/total"
  input: "mean_squared_error/total/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error/total/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mean_squared_error/total"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_squared_error/count"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "mean_squared_error/count"
    }
  }
}
node {
  name: "mean_squared_error/count/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "mean_squared_error/count"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/count/Assign"
  op: "AssignVariableOp"
  input: "mean_squared_error/count"
  input: "mean_squared_error/count/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error/count/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mean_squared_error/count"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error/Size"
  op: "Size"
  input: "SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/Cast"
  op: "Cast"
  input: "mean_squared_error/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "mean_squared_error/Sum"
  op: "Sum"
  input: "SquaredDifference"
  input: "mean_squared_error/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "mean_squared_error/total"
  input: "mean_squared_error/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mean_squared_error/total"
  input: "^mean_squared_error/AssignAddVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "mean_squared_error/count"
  input: "mean_squared_error/Cast"
  input: "^SquaredDifference"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "mean_squared_error/count"
  input: "^SquaredDifference"
  input: "^mean_squared_error/AssignAddVariableOp_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error/Maximum/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mean_squared_error/count"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_squared_error/Maximum"
  op: "Maximum"
  input: "mean_squared_error/Maximum/ReadVariableOp"
  input: "mean_squared_error/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/value/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mean_squared_error/total"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error/value"
  op: "DivNoNan"
  input: "mean_squared_error/value/ReadVariableOp"
  input: "mean_squared_error/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/Maximum_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mean_squared_error/count"
  input: "^mean_squared_error/AssignAddVariableOp_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_squared_error/Maximum_1"
  op: "Maximum"
  input: "mean_squared_error/Maximum_1/ReadVariableOp"
  input: "mean_squared_error/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/update_op/ReadVariableOp"
  op: "ReadVariableOp"
  input: "mean_squared_error/total"
  input: "^mean_squared_error/AssignAddVariableOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error/update_op"
  op: "DivNoNan"
  input: "mean_squared_error/update_op/ReadVariableOp"
  input: "mean_squared_error/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "learning_rate/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Identity"
  input: "learning_rate/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_loss"
  op: "Identity"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_accuracy"
  op: "Identity"
  input: "mean_squared_error/update_op"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_accuracy_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_accuracy_1"
      }
    }
  }
}
node {
  name: "train_accuracy_1"
  op: "ScalarSummary"
  input: "train_accuracy_1/tags"
  input: "mean_squared_error/update_op"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conf_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "conf_loss"
      }
    }
  }
}
node {
  name: "conf_loss"
  op: "ScalarSummary"
  input: "conf_loss/tags"
  input: "mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dist_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dist_loss"
      }
    }
  }
}
node {
  name: "dist_loss"
  op: "ScalarSummary"
  input: "dist_loss/tags"
  input: "huber_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/grad_ys_0"
}
node {
  name: "gradients/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/grad_ys_0"
  input: "^gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/grad_ys_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/grad_ys_0"
  input: "^gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/grad_ys_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/add_grad/tuple/control_dependency"
  input: "softmax_cross_entropy_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/add_grad/tuple/control_dependency"
  input: "mul_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_1_grad/Mul"
  input: "^gradients/mul_1_grad/Mul_1"
}
node {
  name: "gradients/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_1_grad/Mul"
  input: "^gradients/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_1_grad/Mul_1"
  input: "^gradients/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/huber_loss/value_grad/Shape"
  input: "gradients/huber_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "gradients/add_grad/tuple/control_dependency_1"
  input: "huber_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/value_grad/Sum"
  op: "Sum"
  input: "gradients/huber_loss/value_grad/div_no_nan"
  input: "gradients/huber_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/huber_loss/value_grad/Reshape"
  op: "Reshape"
  input: "gradients/huber_loss/value_grad/Sum"
  input: "gradients/huber_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/value_grad/Neg"
  op: "Neg"
  input: "huber_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "gradients/huber_loss/value_grad/Neg"
  input: "huber_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "gradients/huber_loss/value_grad/div_no_nan_1"
  input: "huber_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/value_grad/mul"
  op: "Mul"
  input: "gradients/add_grad/tuple/control_dependency_1"
  input: "gradients/huber_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/value_grad/Sum_1"
  op: "Sum"
  input: "gradients/huber_loss/value_grad/mul"
  input: "gradients/huber_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/huber_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/huber_loss/value_grad/Sum_1"
  input: "gradients/huber_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/huber_loss/value_grad/Reshape"
  input: "^gradients/huber_loss/value_grad/Reshape_1"
}
node {
  name: "gradients/huber_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/huber_loss/value_grad/Reshape"
  input: "^gradients/huber_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/huber_loss/value_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/huber_loss/value_grad/Reshape_1"
  input: "^gradients/huber_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/huber_loss/value_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Shape"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "gradients/mul_1_grad/tuple/control_dependency_1"
  input: "softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Sum"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/value_grad/div_no_nan"
  input: "gradients/softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Sum"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Neg"
  op: "Neg"
  input: "softmax_cross_entropy_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Neg"
  input: "softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "gradients/softmax_cross_entropy_loss/value_grad/div_no_nan_1"
  input: "softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/mul"
  op: "Mul"
  input: "gradients/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/softmax_cross_entropy_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Sum_1"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/value_grad/mul"
  input: "gradients/softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Sum_1"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/Reshape_1"
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/value_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Reshape_1"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/value_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Sum_1_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/huber_loss/value_grad/tuple/control_dependency"
  input: "gradients/huber_loss/Sum_1_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients/huber_loss/Sum_1_grad/Reshape"
  input: "gradients/huber_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/huber_loss/Sum_1_grad/Tile"
  input: "gradients/huber_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Sum_grad/Shape"
  op: "Shape"
  input: "huber_loss/Mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/huber_loss/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/huber_loss/Sum_grad/Reshape"
  input: "gradients/huber_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Tile"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_3_grad/Shape"
  op: "Shape"
  input: "huber_loss/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_3_grad/Shape_1"
  op: "Shape"
  input: "huber_loss/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/huber_loss/Mul_3_grad/Shape"
  input: "gradients/huber_loss/Mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/huber_loss/Sum_grad/Tile"
  input: "huber_loss/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/huber_loss/Mul_3_grad/Mul"
  input: "gradients/huber_loss/Mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/huber_loss/Mul_3_grad/Sum"
  input: "gradients/huber_loss/Mul_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_3_grad/Mul_1"
  op: "Mul"
  input: "huber_loss/Add"
  input: "gradients/huber_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/huber_loss/Mul_3_grad/Mul_1"
  input: "gradients/huber_loss/Mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/huber_loss/Mul_3_grad/Sum_1"
  input: "gradients/huber_loss/Mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/huber_loss/Mul_3_grad/Reshape"
  input: "^gradients/huber_loss/Mul_3_grad/Reshape_1"
}
node {
  name: "gradients/huber_loss/Mul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/huber_loss/Mul_3_grad/Reshape"
  input: "^gradients/huber_loss/Mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/huber_loss/Mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/huber_loss/Mul_3_grad/Reshape_1"
  input: "^gradients/huber_loss/Mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/huber_loss/Mul_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Shape"
  input: "softmax_cross_entropy_loss/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile"
  input: "softmax_cross_entropy_loss/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Mul"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Mul_1"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum_1"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Add_grad/Shape"
  op: "Shape"
  input: "huber_loss/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/huber_loss/Add_grad/Shape_1"
  op: "Shape"
  input: "huber_loss/Mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/huber_loss/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/huber_loss/Add_grad/Shape"
  input: "gradients/huber_loss/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Add_grad/Sum"
  op: "Sum"
  input: "gradients/huber_loss/Mul_3_grad/tuple/control_dependency"
  input: "gradients/huber_loss/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/huber_loss/Add_grad/Reshape"
  op: "Reshape"
  input: "gradients/huber_loss/Add_grad/Sum"
  input: "gradients/huber_loss/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Add_grad/Sum_1"
  op: "Sum"
  input: "gradients/huber_loss/Mul_3_grad/tuple/control_dependency"
  input: "gradients/huber_loss/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/huber_loss/Add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/huber_loss/Add_grad/Sum_1"
  input: "gradients/huber_loss/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/huber_loss/Add_grad/Reshape"
  input: "^gradients/huber_loss/Add_grad/Reshape_1"
}
node {
  name: "gradients/huber_loss/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/huber_loss/Add_grad/Reshape"
  input: "^gradients/huber_loss/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/huber_loss/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/huber_loss/Add_grad/Reshape_1"
  input: "^gradients/huber_loss/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/huber_loss/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_1_grad/Shape"
  op: "Shape"
  input: "huber_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_1_grad/Shape_1"
  op: "Shape"
  input: "huber_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/huber_loss/Mul_1_grad/Shape"
  input: "gradients/huber_loss/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/huber_loss/Add_grad/tuple/control_dependency"
  input: "huber_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/huber_loss/Mul_1_grad/Mul"
  input: "gradients/huber_loss/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/huber_loss/Mul_1_grad/Sum"
  input: "gradients/huber_loss/Mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "huber_loss/Const"
  input: "gradients/huber_loss/Add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/huber_loss/Mul_1_grad/Mul_1"
  input: "gradients/huber_loss/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/huber_loss/Mul_1_grad/Sum_1"
  input: "gradients/huber_loss/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/huber_loss/Mul_1_grad/Reshape"
  input: "^gradients/huber_loss/Mul_1_grad/Reshape_1"
}
node {
  name: "gradients/huber_loss/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/huber_loss/Mul_1_grad/Reshape"
  input: "^gradients/huber_loss/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/huber_loss/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/huber_loss/Mul_1_grad/Reshape_1"
  input: "^gradients/huber_loss/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/huber_loss/Mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_2_grad/Shape"
  op: "Shape"
  input: "huber_loss/Mul_2/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_2_grad/Shape_1"
  op: "Shape"
  input: "huber_loss/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/huber_loss/Mul_2_grad/Shape"
  input: "gradients/huber_loss/Mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/huber_loss/Add_grad/tuple/control_dependency_1"
  input: "huber_loss/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/huber_loss/Mul_2_grad/Mul"
  input: "gradients/huber_loss/Mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/huber_loss/Mul_2_grad/Sum"
  input: "gradients/huber_loss/Mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_2_grad/Mul_1"
  op: "Mul"
  input: "huber_loss/Mul_2/x"
  input: "gradients/huber_loss/Add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/huber_loss/Mul_2_grad/Mul_1"
  input: "gradients/huber_loss/Mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/huber_loss/Mul_2_grad/Sum_1"
  input: "gradients/huber_loss/Mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/huber_loss/Mul_2_grad/Reshape"
  input: "^gradients/huber_loss/Mul_2_grad/Reshape_1"
}
node {
  name: "gradients/huber_loss/Mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/huber_loss/Mul_2_grad/Reshape"
  input: "^gradients/huber_loss/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/huber_loss/Mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/huber_loss/Mul_2_grad/Reshape_1"
  input: "^gradients/huber_loss/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/huber_loss/Mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like"
  op: "ZerosLike"
  input: "softmax_cross_entropy_loss/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims"
  input: "softmax_cross_entropy_loss/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/LogSoftmax"
  op: "LogSoftmax"
  input: "softmax_cross_entropy_loss/xentropy/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/Neg"
  op: "Neg"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_grad/Shape"
  op: "Shape"
  input: "huber_loss/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_grad/Shape_1"
  op: "Shape"
  input: "huber_loss/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/huber_loss/Mul_grad/Shape"
  input: "gradients/huber_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/huber_loss/Mul_1_grad/tuple/control_dependency_1"
  input: "huber_loss/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/huber_loss/Mul_grad/Mul"
  input: "gradients/huber_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/huber_loss/Mul_grad/Sum"
  input: "gradients/huber_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "huber_loss/Minimum"
  input: "gradients/huber_loss/Mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/huber_loss/Mul_grad/Mul_1"
  input: "gradients/huber_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/huber_loss/Mul_grad/Sum_1"
  input: "gradients/huber_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/huber_loss/Mul_grad/Reshape"
  input: "^gradients/huber_loss/Mul_grad/Reshape_1"
}
node {
  name: "gradients/huber_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/huber_loss/Mul_grad/Reshape"
  input: "^gradients/huber_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/huber_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/huber_loss/Mul_grad/Reshape_1"
  input: "^gradients/huber_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/huber_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Sub_1_grad/Shape"
  op: "Shape"
  input: "huber_loss/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/huber_loss/Sub_1_grad/Shape_1"
  op: "Shape"
  input: "huber_loss/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/huber_loss/Sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/huber_loss/Sub_1_grad/Shape"
  input: "gradients/huber_loss/Sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Sub_1_grad/Sum"
  op: "Sum"
  input: "gradients/huber_loss/Mul_2_grad/tuple/control_dependency_1"
  input: "gradients/huber_loss/Sub_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/huber_loss/Sub_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/huber_loss/Sub_1_grad/Sum"
  input: "gradients/huber_loss/Sub_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Sub_1_grad/Neg"
  op: "Neg"
  input: "gradients/huber_loss/Mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Sub_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/huber_loss/Sub_1_grad/Neg"
  input: "gradients/huber_loss/Sub_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/huber_loss/Sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/huber_loss/Sub_1_grad/Sum_1"
  input: "gradients/huber_loss/Sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/huber_loss/Sub_1_grad/Reshape"
  input: "^gradients/huber_loss/Sub_1_grad/Reshape_1"
}
node {
  name: "gradients/huber_loss/Sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/huber_loss/Sub_1_grad/Reshape"
  input: "^gradients/huber_loss/Sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/huber_loss/Sub_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/huber_loss/Sub_1_grad/Reshape_1"
  input: "^gradients/huber_loss/Sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/huber_loss/Sub_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Shape"
  op: "Shape"
  input: "strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/huber_loss/Mul_grad/tuple/control_dependency"
  input: "gradients/huber_loss/Mul_grad/tuple/control_dependency_1"
  input: "gradients/huber_loss/Sub_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/huber_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Minimum_grad/Shape"
  op: "Shape"
  input: "huber_loss/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/huber_loss/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Minimum_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "huber_loss/Abs"
  input: "huber_loss/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/huber_loss/Minimum_grad/Shape"
  input: "gradients/huber_loss/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Minimum_grad/SelectV2"
  op: "SelectV2"
  input: "gradients/huber_loss/Minimum_grad/LessEqual"
  input: "gradients/AddN"
  input: "gradients/huber_loss/Minimum_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/huber_loss/Minimum_grad/SelectV2"
  input: "gradients/huber_loss/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/huber_loss/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/huber_loss/Minimum_grad/Sum"
  input: "gradients/huber_loss/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Minimum_grad/SelectV2_1"
  op: "SelectV2"
  input: "gradients/huber_loss/Minimum_grad/LessEqual"
  input: "gradients/huber_loss/Minimum_grad/zeros_like"
  input: "gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/huber_loss/Minimum_grad/SelectV2_1"
  input: "gradients/huber_loss/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/huber_loss/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/huber_loss/Minimum_grad/Sum_1"
  input: "gradients/huber_loss/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/huber_loss/Minimum_grad/Reshape"
  input: "^gradients/huber_loss/Minimum_grad/Reshape_1"
}
node {
  name: "gradients/huber_loss/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/huber_loss/Minimum_grad/Reshape"
  input: "^gradients/huber_loss/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/huber_loss/Minimum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/huber_loss/Minimum_grad/Reshape_1"
  input: "^gradients/huber_loss/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/huber_loss/Minimum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/strided_slice_4_grad/Shape"
  op: "Shape"
  input: "stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_4_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_4_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_4_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_4_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/strided_slice_4_grad/Shape"
  input: "gradients/strided_slice_4_grad/StridedSliceGrad/begin"
  input: "gradients/strided_slice_4_grad/StridedSliceGrad/end"
  input: "gradients/strided_slice_4_grad/StridedSliceGrad/strides"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/huber_loss/Sub_1_grad/tuple/control_dependency"
  input: "gradients/huber_loss/Minimum_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/huber_loss/Sub_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Abs_grad/Sign"
  op: "Sign"
  input: "huber_loss/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Abs_grad/mul"
  op: "Mul"
  input: "gradients/AddN_1"
  input: "gradients/huber_loss/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Sub_grad/Shape"
  op: "Shape"
  input: "mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/huber_loss/Sub_grad/Shape_1"
  op: "Shape"
  input: "strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/huber_loss/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/huber_loss/Sub_grad/Shape"
  input: "gradients/huber_loss/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Sub_grad/Sum"
  op: "Sum"
  input: "gradients/huber_loss/Abs_grad/mul"
  input: "gradients/huber_loss/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/huber_loss/Sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/huber_loss/Sub_grad/Sum"
  input: "gradients/huber_loss/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Sub_grad/Neg"
  op: "Neg"
  input: "gradients/huber_loss/Abs_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/huber_loss/Sub_grad/Neg"
  input: "gradients/huber_loss/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/huber_loss/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/huber_loss/Sub_grad/Sum_1"
  input: "gradients/huber_loss/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/huber_loss/Sub_grad/Reshape"
  input: "^gradients/huber_loss/Sub_grad/Reshape_1"
}
node {
  name: "gradients/huber_loss/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/huber_loss/Sub_grad/Reshape"
  input: "^gradients/huber_loss/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/huber_loss/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/huber_loss/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/huber_loss/Sub_grad/Reshape_1"
  input: "^gradients/huber_loss/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/huber_loss/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Shape"
  op: "Shape"
  input: "strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_grad/Shape_1"
  op: "Shape"
  input: "one_hot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_grad/Shape"
  input: "gradients/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Mul"
  op: "Mul"
  input: "gradients/huber_loss/Sub_grad/tuple/control_dependency"
  input: "one_hot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Sum"
  op: "Sum"
  input: "gradients/mul_grad/Mul"
  input: "gradients/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_grad/Sum"
  input: "gradients/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Mul_1"
  op: "Mul"
  input: "strided_slice_1"
  input: "gradients/huber_loss/Sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/mul_grad/Mul_1"
  input: "gradients/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mul_grad/Sum_1"
  input: "gradients/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_grad/Reshape"
  input: "^gradients/mul_grad/Reshape_1"
}
node {
  name: "gradients/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_grad/Reshape"
  input: "^gradients/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_grad/Reshape_1"
  input: "^gradients/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/strided_slice_1_grad/Shape"
  op: "Shape"
  input: "stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_1_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_1_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_1_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/strided_slice_1_grad/Shape"
  input: "gradients/strided_slice_1_grad/StridedSliceGrad/begin"
  input: "gradients/strided_slice_1_grad/StridedSliceGrad/end"
  input: "gradients/strided_slice_1_grad/StridedSliceGrad/strides"
  input: "gradients/mul_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/strided_slice_4_grad/StridedSliceGrad"
  input: "gradients/strided_slice_1_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/strided_slice_4_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/stack_grad/unstack"
  op: "Unpack"
  input: "gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -2
    }
  }
  attr {
    key: "num"
    value {
      i: 4
    }
  }
}
node {
  name: "gradients/stack_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/stack_grad/unstack"
}
node {
  name: "gradients/stack_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/stack_grad/unstack"
  input: "^gradients/stack_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/stack_grad/unstack"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/stack_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/stack_grad/unstack:1"
  input: "^gradients/stack_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/stack_grad/unstack"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/stack_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/stack_grad/unstack:2"
  input: "^gradients/stack_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/stack_grad/unstack"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/stack_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/stack_grad/unstack:3"
  input: "^gradients/stack_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/stack_grad/unstack"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/x_comb/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/lstm_model/x_comb/concat_grad/mod"
  op: "FloorMod"
  input: "lstm_model/x_comb/concat/axis"
  input: "gradients/lstm_model/x_comb/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/x_comb/concat_grad/Shape"
  op: "Shape"
  input: "lstm_model/x_conf/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/lstm_model/x_comb/concat_grad/ShapeN"
  op: "ShapeN"
  input: "lstm_model/x_conf/BiasAdd"
  input: "lstm_model/x_reg/BiasAdd"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/lstm_model/x_comb/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/lstm_model/x_comb/concat_grad/mod"
  input: "gradients/lstm_model/x_comb/concat_grad/ShapeN"
  input: "gradients/lstm_model/x_comb/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/x_comb/concat_grad/Slice"
  op: "Slice"
  input: "gradients/stack_grad/tuple/control_dependency"
  input: "gradients/lstm_model/x_comb/concat_grad/ConcatOffset"
  input: "gradients/lstm_model/x_comb/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/x_comb/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/stack_grad/tuple/control_dependency"
  input: "gradients/lstm_model/x_comb/concat_grad/ConcatOffset:1"
  input: "gradients/lstm_model/x_comb/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/x_comb/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/lstm_model/x_comb/concat_grad/Slice"
  input: "^gradients/lstm_model/x_comb/concat_grad/Slice_1"
}
node {
  name: "gradients/lstm_model/x_comb/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/lstm_model/x_comb/concat_grad/Slice"
  input: "^gradients/lstm_model/x_comb/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/x_comb/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/x_comb/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/lstm_model/x_comb/concat_grad/Slice_1"
  input: "^gradients/lstm_model/x_comb/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/x_comb/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/y_comb/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/lstm_model/y_comb/concat_grad/mod"
  op: "FloorMod"
  input: "lstm_model/y_comb/concat/axis"
  input: "gradients/lstm_model/y_comb/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/y_comb/concat_grad/Shape"
  op: "Shape"
  input: "lstm_model/y_conf/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/lstm_model/y_comb/concat_grad/ShapeN"
  op: "ShapeN"
  input: "lstm_model/y_conf/BiasAdd"
  input: "lstm_model/y_reg/BiasAdd"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/lstm_model/y_comb/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/lstm_model/y_comb/concat_grad/mod"
  input: "gradients/lstm_model/y_comb/concat_grad/ShapeN"
  input: "gradients/lstm_model/y_comb/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/y_comb/concat_grad/Slice"
  op: "Slice"
  input: "gradients/stack_grad/tuple/control_dependency_1"
  input: "gradients/lstm_model/y_comb/concat_grad/ConcatOffset"
  input: "gradients/lstm_model/y_comb/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/y_comb/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/stack_grad/tuple/control_dependency_1"
  input: "gradients/lstm_model/y_comb/concat_grad/ConcatOffset:1"
  input: "gradients/lstm_model/y_comb/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/y_comb/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/lstm_model/y_comb/concat_grad/Slice"
  input: "^gradients/lstm_model/y_comb/concat_grad/Slice_1"
}
node {
  name: "gradients/lstm_model/y_comb/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/lstm_model/y_comb/concat_grad/Slice"
  input: "^gradients/lstm_model/y_comb/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/y_comb/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/y_comb/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/lstm_model/y_comb/concat_grad/Slice_1"
  input: "^gradients/lstm_model/y_comb/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/y_comb/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/h_comb/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/lstm_model/h_comb/concat_grad/mod"
  op: "FloorMod"
  input: "lstm_model/h_comb/concat/axis"
  input: "gradients/lstm_model/h_comb/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/h_comb/concat_grad/Shape"
  op: "Shape"
  input: "lstm_model/h_conf/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/lstm_model/h_comb/concat_grad/ShapeN"
  op: "ShapeN"
  input: "lstm_model/h_conf/BiasAdd"
  input: "lstm_model/h_reg/BiasAdd"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/lstm_model/h_comb/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/lstm_model/h_comb/concat_grad/mod"
  input: "gradients/lstm_model/h_comb/concat_grad/ShapeN"
  input: "gradients/lstm_model/h_comb/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/h_comb/concat_grad/Slice"
  op: "Slice"
  input: "gradients/stack_grad/tuple/control_dependency_2"
  input: "gradients/lstm_model/h_comb/concat_grad/ConcatOffset"
  input: "gradients/lstm_model/h_comb/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/h_comb/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/stack_grad/tuple/control_dependency_2"
  input: "gradients/lstm_model/h_comb/concat_grad/ConcatOffset:1"
  input: "gradients/lstm_model/h_comb/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/h_comb/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/lstm_model/h_comb/concat_grad/Slice"
  input: "^gradients/lstm_model/h_comb/concat_grad/Slice_1"
}
node {
  name: "gradients/lstm_model/h_comb/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/lstm_model/h_comb/concat_grad/Slice"
  input: "^gradients/lstm_model/h_comb/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/h_comb/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/h_comb/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/lstm_model/h_comb/concat_grad/Slice_1"
  input: "^gradients/lstm_model/h_comb/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/h_comb/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/w_comb/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/lstm_model/w_comb/concat_grad/mod"
  op: "FloorMod"
  input: "lstm_model/w_comb/concat/axis"
  input: "gradients/lstm_model/w_comb/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/w_comb/concat_grad/Shape"
  op: "Shape"
  input: "lstm_model/w_conf/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/lstm_model/w_comb/concat_grad/ShapeN"
  op: "ShapeN"
  input: "lstm_model/w_conf/BiasAdd"
  input: "lstm_model/w_reg/BiasAdd"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/lstm_model/w_comb/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/lstm_model/w_comb/concat_grad/mod"
  input: "gradients/lstm_model/w_comb/concat_grad/ShapeN"
  input: "gradients/lstm_model/w_comb/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/w_comb/concat_grad/Slice"
  op: "Slice"
  input: "gradients/stack_grad/tuple/control_dependency_3"
  input: "gradients/lstm_model/w_comb/concat_grad/ConcatOffset"
  input: "gradients/lstm_model/w_comb/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/w_comb/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/stack_grad/tuple/control_dependency_3"
  input: "gradients/lstm_model/w_comb/concat_grad/ConcatOffset:1"
  input: "gradients/lstm_model/w_comb/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/w_comb/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/lstm_model/w_comb/concat_grad/Slice"
  input: "^gradients/lstm_model/w_comb/concat_grad/Slice_1"
}
node {
  name: "gradients/lstm_model/w_comb/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/lstm_model/w_comb/concat_grad/Slice"
  input: "^gradients/lstm_model/w_comb/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/w_comb/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/w_comb/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/lstm_model/w_comb/concat_grad/Slice_1"
  input: "^gradients/lstm_model/w_comb/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/w_comb/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/x_conf/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/lstm_model/x_comb/concat_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/lstm_model/x_conf/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/lstm_model/x_comb/concat_grad/tuple/control_dependency"
  input: "^gradients/lstm_model/x_conf/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/lstm_model/x_conf/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/lstm_model/x_comb/concat_grad/tuple/control_dependency"
  input: "^gradients/lstm_model/x_conf/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/x_comb/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/x_conf/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/lstm_model/x_conf/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/lstm_model/x_conf/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/x_conf/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/x_reg/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/lstm_model/x_comb/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/lstm_model/x_reg/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/lstm_model/x_comb/concat_grad/tuple/control_dependency_1"
  input: "^gradients/lstm_model/x_reg/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/lstm_model/x_reg/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/lstm_model/x_comb/concat_grad/tuple/control_dependency_1"
  input: "^gradients/lstm_model/x_reg/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/x_comb/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/x_reg/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/lstm_model/x_reg/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/lstm_model/x_reg/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/x_reg/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/y_conf/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/lstm_model/y_comb/concat_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/lstm_model/y_conf/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/lstm_model/y_comb/concat_grad/tuple/control_dependency"
  input: "^gradients/lstm_model/y_conf/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/lstm_model/y_conf/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/lstm_model/y_comb/concat_grad/tuple/control_dependency"
  input: "^gradients/lstm_model/y_conf/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/y_comb/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/y_conf/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/lstm_model/y_conf/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/lstm_model/y_conf/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/y_conf/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/y_reg/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/lstm_model/y_comb/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/lstm_model/y_reg/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/lstm_model/y_comb/concat_grad/tuple/control_dependency_1"
  input: "^gradients/lstm_model/y_reg/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/lstm_model/y_reg/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/lstm_model/y_comb/concat_grad/tuple/control_dependency_1"
  input: "^gradients/lstm_model/y_reg/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/y_comb/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/y_reg/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/lstm_model/y_reg/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/lstm_model/y_reg/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/y_reg/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/h_conf/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/lstm_model/h_comb/concat_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/lstm_model/h_conf/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/lstm_model/h_comb/concat_grad/tuple/control_dependency"
  input: "^gradients/lstm_model/h_conf/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/lstm_model/h_conf/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/lstm_model/h_comb/concat_grad/tuple/control_dependency"
  input: "^gradients/lstm_model/h_conf/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/h_comb/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/h_conf/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/lstm_model/h_conf/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/lstm_model/h_conf/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/h_conf/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/h_reg/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/lstm_model/h_comb/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/lstm_model/h_reg/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/lstm_model/h_comb/concat_grad/tuple/control_dependency_1"
  input: "^gradients/lstm_model/h_reg/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/lstm_model/h_reg/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/lstm_model/h_comb/concat_grad/tuple/control_dependency_1"
  input: "^gradients/lstm_model/h_reg/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/h_comb/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/h_reg/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/lstm_model/h_reg/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/lstm_model/h_reg/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/h_reg/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/w_conf/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/lstm_model/w_comb/concat_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/lstm_model/w_conf/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/lstm_model/w_comb/concat_grad/tuple/control_dependency"
  input: "^gradients/lstm_model/w_conf/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/lstm_model/w_conf/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/lstm_model/w_comb/concat_grad/tuple/control_dependency"
  input: "^gradients/lstm_model/w_conf/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/w_comb/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/w_conf/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/lstm_model/w_conf/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/lstm_model/w_conf/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/w_conf/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/w_reg/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/lstm_model/w_comb/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/lstm_model/w_reg/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/lstm_model/w_comb/concat_grad/tuple/control_dependency_1"
  input: "^gradients/lstm_model/w_reg/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/lstm_model/w_reg/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/lstm_model/w_comb/concat_grad/tuple/control_dependency_1"
  input: "^gradients/lstm_model/w_reg/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/w_comb/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/w_reg/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/lstm_model/w_reg/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/lstm_model/w_reg/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/w_reg/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/x_conf/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/lstm_model/x_conf/BiasAdd_grad/tuple/control_dependency"
  input: "lstm_model/x_conf/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/lstm_model/x_conf/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "lstm_model/RNN_net/strided_slice_3"
  input: "gradients/lstm_model/x_conf/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/lstm_model/x_conf/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/lstm_model/x_conf/MatMul_grad/MatMul"
  input: "^gradients/lstm_model/x_conf/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/lstm_model/x_conf/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/lstm_model/x_conf/MatMul_grad/MatMul"
  input: "^gradients/lstm_model/x_conf/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/x_conf/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/x_conf/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/lstm_model/x_conf/MatMul_grad/MatMul_1"
  input: "^gradients/lstm_model/x_conf/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/x_conf/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/x_reg/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/lstm_model/x_reg/BiasAdd_grad/tuple/control_dependency"
  input: "lstm_model/x_reg/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/lstm_model/x_reg/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "lstm_model/RNN_net/strided_slice_3"
  input: "gradients/lstm_model/x_reg/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/lstm_model/x_reg/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/lstm_model/x_reg/MatMul_grad/MatMul"
  input: "^gradients/lstm_model/x_reg/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/lstm_model/x_reg/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/lstm_model/x_reg/MatMul_grad/MatMul"
  input: "^gradients/lstm_model/x_reg/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/x_reg/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/x_reg/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/lstm_model/x_reg/MatMul_grad/MatMul_1"
  input: "^gradients/lstm_model/x_reg/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/x_reg/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/y_conf/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/lstm_model/y_conf/BiasAdd_grad/tuple/control_dependency"
  input: "lstm_model/y_conf/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/lstm_model/y_conf/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "lstm_model/RNN_net/strided_slice_3"
  input: "gradients/lstm_model/y_conf/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/lstm_model/y_conf/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/lstm_model/y_conf/MatMul_grad/MatMul"
  input: "^gradients/lstm_model/y_conf/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/lstm_model/y_conf/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/lstm_model/y_conf/MatMul_grad/MatMul"
  input: "^gradients/lstm_model/y_conf/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/y_conf/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/y_conf/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/lstm_model/y_conf/MatMul_grad/MatMul_1"
  input: "^gradients/lstm_model/y_conf/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/y_conf/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/y_reg/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/lstm_model/y_reg/BiasAdd_grad/tuple/control_dependency"
  input: "lstm_model/y_reg/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/lstm_model/y_reg/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "lstm_model/RNN_net/strided_slice_3"
  input: "gradients/lstm_model/y_reg/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/lstm_model/y_reg/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/lstm_model/y_reg/MatMul_grad/MatMul"
  input: "^gradients/lstm_model/y_reg/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/lstm_model/y_reg/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/lstm_model/y_reg/MatMul_grad/MatMul"
  input: "^gradients/lstm_model/y_reg/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/y_reg/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/y_reg/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/lstm_model/y_reg/MatMul_grad/MatMul_1"
  input: "^gradients/lstm_model/y_reg/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/y_reg/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/h_conf/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/lstm_model/h_conf/BiasAdd_grad/tuple/control_dependency"
  input: "lstm_model/h_conf/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/lstm_model/h_conf/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "lstm_model/RNN_net/strided_slice_3"
  input: "gradients/lstm_model/h_conf/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/lstm_model/h_conf/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/lstm_model/h_conf/MatMul_grad/MatMul"
  input: "^gradients/lstm_model/h_conf/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/lstm_model/h_conf/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/lstm_model/h_conf/MatMul_grad/MatMul"
  input: "^gradients/lstm_model/h_conf/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/h_conf/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/h_conf/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/lstm_model/h_conf/MatMul_grad/MatMul_1"
  input: "^gradients/lstm_model/h_conf/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/h_conf/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/h_reg/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/lstm_model/h_reg/BiasAdd_grad/tuple/control_dependency"
  input: "lstm_model/h_reg/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/lstm_model/h_reg/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "lstm_model/RNN_net/strided_slice_3"
  input: "gradients/lstm_model/h_reg/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/lstm_model/h_reg/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/lstm_model/h_reg/MatMul_grad/MatMul"
  input: "^gradients/lstm_model/h_reg/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/lstm_model/h_reg/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/lstm_model/h_reg/MatMul_grad/MatMul"
  input: "^gradients/lstm_model/h_reg/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/h_reg/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/h_reg/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/lstm_model/h_reg/MatMul_grad/MatMul_1"
  input: "^gradients/lstm_model/h_reg/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/h_reg/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/w_conf/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/lstm_model/w_conf/BiasAdd_grad/tuple/control_dependency"
  input: "lstm_model/w_conf/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/lstm_model/w_conf/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "lstm_model/RNN_net/strided_slice_3"
  input: "gradients/lstm_model/w_conf/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/lstm_model/w_conf/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/lstm_model/w_conf/MatMul_grad/MatMul"
  input: "^gradients/lstm_model/w_conf/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/lstm_model/w_conf/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/lstm_model/w_conf/MatMul_grad/MatMul"
  input: "^gradients/lstm_model/w_conf/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/w_conf/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/w_conf/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/lstm_model/w_conf/MatMul_grad/MatMul_1"
  input: "^gradients/lstm_model/w_conf/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/w_conf/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/w_reg/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/lstm_model/w_reg/BiasAdd_grad/tuple/control_dependency"
  input: "lstm_model/w_reg/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/lstm_model/w_reg/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "lstm_model/RNN_net/strided_slice_3"
  input: "gradients/lstm_model/w_reg/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/lstm_model/w_reg/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/lstm_model/w_reg/MatMul_grad/MatMul"
  input: "^gradients/lstm_model/w_reg/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/lstm_model/w_reg/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/lstm_model/w_reg/MatMul_grad/MatMul"
  input: "^gradients/lstm_model/w_reg/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/w_reg/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/w_reg/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/lstm_model/w_reg/MatMul_grad/MatMul_1"
  input: "^gradients/lstm_model/w_reg/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/w_reg/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/lstm_model/x_conf/MatMul_grad/tuple/control_dependency"
  input: "gradients/lstm_model/x_reg/MatMul_grad/tuple/control_dependency"
  input: "gradients/lstm_model/y_conf/MatMul_grad/tuple/control_dependency"
  input: "gradients/lstm_model/y_reg/MatMul_grad/tuple/control_dependency"
  input: "gradients/lstm_model/h_conf/MatMul_grad/tuple/control_dependency"
  input: "gradients/lstm_model/h_reg/MatMul_grad/tuple/control_dependency"
  input: "gradients/lstm_model/w_conf/MatMul_grad/tuple/control_dependency"
  input: "gradients/lstm_model/w_reg/MatMul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/x_conf/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/strided_slice_3_grad/Shape"
  op: "Shape"
  input: "lstm_model/RNN_net/TensorArrayV2Stack/TensorListStack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/strided_slice_3_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/strided_slice_3_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/strided_slice_3_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/lstm_model/RNN_net/strided_slice_3_grad/Shape"
  input: "gradients/lstm_model/RNN_net/strided_slice_3_grad/StridedSliceGrad/begin"
  input: "gradients/lstm_model/RNN_net/strided_slice_3_grad/StridedSliceGrad/end"
  input: "gradients/lstm_model/RNN_net/strided_slice_3_grad/StridedSliceGrad/strides"
  input: "gradients/AddN_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/TensorArrayV2Stack/TensorListStack_grad/TensorListFromTensor/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/TensorArrayV2Stack/TensorListStack_grad/TensorListFromTensor"
  op: "TensorListFromTensor"
  input: "gradients/lstm_model/RNN_net/strided_slice_3_grad/StridedSliceGrad"
  input: "gradients/lstm_model/RNN_net/TensorArrayV2Stack/TensorListStack_grad/TensorListFromTensor/element_shape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_1"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_2"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_3"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_4"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_5"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:9"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/VariableShape"
  op: "VariableShape"
  input: "lstm_model/RNN_net/while:10"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros"
  op: "Fill"
  input: "gradients/VariableShape"
  input: "gradients/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/VariableShape_1"
  op: "VariableShape"
  input: "lstm_model/RNN_net/while:11"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_1"
  op: "Fill"
  input: "gradients/VariableShape_1"
  input: "gradients/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/VariableShape_2"
  op: "VariableShape"
  input: "lstm_model/RNN_net/while:12"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_2"
  op: "Fill"
  input: "gradients/VariableShape_2"
  input: "gradients/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/VariableShape_3"
  op: "VariableShape"
  input: "lstm_model/RNN_net/while:13"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_3"
  op: "Fill"
  input: "gradients/VariableShape_3"
  input: "gradients/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/VariableShape_4"
  op: "VariableShape"
  input: "lstm_model/RNN_net/while:14"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_4"
  op: "Fill"
  input: "gradients/VariableShape_4"
  input: "gradients/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/VariableShape_5"
  op: "VariableShape"
  input: "lstm_model/RNN_net/while:15"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_5"
  op: "Fill"
  input: "gradients/VariableShape_5"
  input: "gradients/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_like_6"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:18"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_7"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:19"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_8"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:20"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_9"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:21"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_10"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:22"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_11"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:24"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_12"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:26"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_13"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:27"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_14"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:28"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_15"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:29"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_16"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:30"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_17"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:31"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_18"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:32"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_19"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:33"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_20"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:34"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_21"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:36"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_22"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:37"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_23"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:38"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_24"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:39"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_25"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:40"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_26"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:41"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_27"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:42"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_28"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:43"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_29"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:44"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_30"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:45"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_31"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:49"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_32"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:50"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_33"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:51"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_34"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:52"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_35"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:53"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_36"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:54"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_37"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:55"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_38"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:56"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_39"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:57"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_40"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:58"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_41"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:59"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_42"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:60"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_43"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:64"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_44"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:65"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_45"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:66"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_46"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:67"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_47"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:68"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_48"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:69"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_49"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:70"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_50"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:71"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_51"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:72"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_52"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:73"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_53"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:74"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_54"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:75"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_55"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:76"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_56"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:80"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_57"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:81"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_58"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:82"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_59"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:83"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_60"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:84"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_61"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:85"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_62"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:86"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_63"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:90"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_64"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:91"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_65"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:92"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_66"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:93"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_67"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:94"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_68"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:95"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_69"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:96"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_70"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:97"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_71"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:98"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_72"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:99"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_73"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:100"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_74"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:101"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_75"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:102"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_76"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:104"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_77"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:105"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_78"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:106"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_79"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:107"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_80"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:108"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_81"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:109"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_82"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:110"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_83"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:111"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_84"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:112"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_85"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:114"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_86"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:115"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_87"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:116"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_88"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:117"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_89"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:118"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_90"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:119"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_91"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:120"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_92"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:121"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_93"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:122"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_94"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:123"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_95"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:127"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_96"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:128"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_97"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:129"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_98"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:130"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_99"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:131"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_100"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:132"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_101"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:133"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_102"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:134"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_103"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:135"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_104"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:136"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_105"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:137"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_106"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:138"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_107"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:142"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_108"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:143"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_109"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:144"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_110"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:145"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_111"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:146"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_112"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:147"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_113"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:148"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_114"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:149"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_115"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:150"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_116"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:151"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_117"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:152"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_118"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:153"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_119"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:154"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_120"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:158"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_121"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:159"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_122"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:160"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_123"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:161"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_124"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:162"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_125"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:163"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_126"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:164"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_127"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:168"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_128"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:169"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_129"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:170"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_130"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:171"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_131"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:172"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_132"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:173"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_133"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:174"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_134"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:175"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_135"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:176"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_136"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:177"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_137"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:178"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_138"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:179"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_139"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:180"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_140"
  op: "ZerosLike"
  input: "lstm_model/RNN_net/while:182"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/grad_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListElementShape_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListElementShape_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/lstm_model/RNN_net/while_grad/gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListElementShape_0/accumulator/element_shape"
  input: "lstm_model/RNN_net/while/maximum_iterations"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListLength_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/lstm_model/RNN_net/while_grad/Const"
  input: "lstm_model/RNN_net/while/maximum_iterations"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad"
  op: "StatelessWhile"
  input: "gradients/lstm_model/RNN_net/while_grad/grad_counter"
  input: "lstm_model/RNN_net/while/maximum_iterations"
  input: "lstm_model/RNN_net/while"
  input: "gradients/lstm_model/RNN_net/TensorArrayV2Stack/TensorListStack_grad/TensorListFromTensor"
  input: "gradients/zeros_like_1"
  input: "gradients/zeros_like_2"
  input: "gradients/zeros_like_3"
  input: "gradients/zeros_like_4"
  input: "gradients/zeros_like_5"
  input: "gradients/zeros"
  input: "gradients/zeros_1"
  input: "gradients/zeros_2"
  input: "gradients/zeros_3"
  input: "gradients/zeros_4"
  input: "gradients/zeros_5"
  input: "lstm_model/RNN_net/while:180"
  input: "lstm_model/RNN_net/while:178"
  input: "lstm_model/RNN_net/while:179"
  input: "lstm_model/RNN_net/while:176"
  input: "lstm_model/RNN_net/while:174"
  input: "lstm_model/RNN_net/while:153"
  input: "lstm_model/RNN_net/while:162"
  input: "lstm_model/RNN_net/while:173"
  input: "lstm_model/RNN_net/while:152"
  input: "lstm_model/RNN_net/while:22"
  input: "lstm_model/RNN_net/while:137"
  input: "lstm_model/RNN_net/while:161"
  input: "lstm_model/RNN_net/while:170"
  input: "lstm_model/RNN_net/while:150"
  input: "lstm_model/RNN_net/while:135"
  input: "lstm_model/RNN_net/while:122"
  input: "lstm_model/RNN_net/while:169"
  input: "lstm_model/RNN_net/while:148"
  input: "lstm_model/RNN_net/while:133"
  input: "lstm_model/RNN_net/while:121"
  input: "lstm_model/RNN_net/while:159"
  input: "lstm_model/RNN_net/while:168"
  input: "lstm_model/RNN_net/while:21"
  input: "lstm_model/RNN_net/while:147"
  input: "lstm_model/RNN_net/while:132"
  input: "lstm_model/RNN_net/while:158"
  input: "lstm_model/RNN_net/while:108"
  input: "lstm_model/RNN_net/while:102"
  input: "lstm_model/RNN_net/while:144"
  input: "lstm_model/RNN_net/while:129"
  input: "lstm_model/RNN_net/while:107"
  input: "lstm_model/RNN_net/while:120"
  input: "lstm_model/RNN_net/while:143"
  input: "lstm_model/RNN_net/while:119"
  input: "lstm_model/RNN_net/while:128"
  input: "lstm_model/RNN_net/while:142"
  input: "lstm_model/RNN_net/while:127"
  input: "lstm_model/RNN_net/while:106"
  input: "lstm_model/RNN_net/while:105"
  input: "lstm_model/RNN_net/while:100"
  input: "lstm_model/RNN_net/while:101"
  input: "lstm_model/RNN_net/while:98"
  input: "lstm_model/RNN_net/while:96"
  input: "lstm_model/RNN_net/while:75"
  input: "lstm_model/RNN_net/while:84"
  input: "lstm_model/RNN_net/while:95"
  input: "lstm_model/RNN_net/while:74"
  input: "lstm_model/RNN_net/while:20"
  input: "lstm_model/RNN_net/while:59"
  input: "lstm_model/RNN_net/while:83"
  input: "lstm_model/RNN_net/while:92"
  input: "lstm_model/RNN_net/while:72"
  input: "lstm_model/RNN_net/while:57"
  input: "lstm_model/RNN_net/while:44"
  input: "lstm_model/RNN_net/while:91"
  input: "lstm_model/RNN_net/while:70"
  input: "lstm_model/RNN_net/while:55"
  input: "lstm_model/RNN_net/while:43"
  input: "lstm_model/RNN_net/while:81"
  input: "lstm_model/RNN_net/while:90"
  input: "lstm_model/RNN_net/while:19"
  input: "lstm_model/RNN_net/while:69"
  input: "lstm_model/RNN_net/while:54"
  input: "lstm_model/RNN_net/while:80"
  input: "lstm_model/RNN_net/while:30"
  input: "lstm_model/RNN_net/while:24"
  input: "lstm_model/RNN_net/while:66"
  input: "lstm_model/RNN_net/while:51"
  input: "lstm_model/RNN_net/while:29"
  input: "lstm_model/RNN_net/while:42"
  input: "lstm_model/RNN_net/while:65"
  input: "lstm_model/RNN_net/while:41"
  input: "lstm_model/RNN_net/while:50"
  input: "lstm_model/RNN_net/while:64"
  input: "lstm_model/RNN_net/while:49"
  input: "lstm_model/RNN_net/while:28"
  input: "lstm_model/RNN_net/while:27"
  input: "lstm_model/RNN_net/while:187"
  input: "lstm_model/RNN_net/while:188"
  input: "lstm_model/RNN_net/while:17"
  attr {
    key: "T"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_num_original_outputs"
    value {
      i: 95
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "_stateful_parallelism"
    value {
      b: false
    }
  }
  attr {
    key: "body"
    value {
      func {
        name: "lstm_model_RNN_net_while_body_2295_grad_4864"
      }
    }
  }
  attr {
    key: "cond"
    value {
      func {
        name: "lstm_model_RNN_net_while_cond_2294_rewritten_grad_5782"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
        shape {
        }
        shape {
          dim {
            size: 13
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_1"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_2"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_3"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:3"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_4"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_5"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_6"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_7"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_8"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:8"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_9"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_10"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_11"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_12"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_13"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_14"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_15"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:15"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_16"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:16"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_17"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:17"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_18"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:18"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_19"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:19"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_20"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:20"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_21"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:21"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_22"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:22"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_23"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:23"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_24"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:24"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_25"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:25"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_26"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:26"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_27"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:27"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_28"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:28"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_29"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:29"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_30"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:30"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_31"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:31"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_32"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:32"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_33"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:33"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_34"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:34"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_35"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:35"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_36"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:36"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_37"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:37"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_38"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:38"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_39"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:39"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_40"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:40"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_41"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:41"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_42"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:42"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_43"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:43"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_44"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:44"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_45"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:45"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_46"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:46"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_47"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:47"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_48"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:48"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_49"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:49"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_50"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:50"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_51"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:51"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_52"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:52"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_53"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:53"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_54"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:54"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_55"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:55"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_56"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:56"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_57"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:57"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_58"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:58"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_59"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:59"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_60"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:60"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_61"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:61"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_62"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:62"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_63"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:63"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_64"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:64"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_65"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:65"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_66"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:66"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_67"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:67"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_68"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:68"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_69"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:69"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_70"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:70"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_71"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:71"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_72"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:72"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_73"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:73"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_74"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:74"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_75"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:75"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_76"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:76"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_77"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:77"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_78"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:78"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_79"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:79"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_80"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:80"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_81"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:81"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_82"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:82"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_83"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:83"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_84"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:84"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_85"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:85"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_86"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:86"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_87"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:87"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_88"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:88"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_89"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:89"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_90"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:90"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_91"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:91"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_92"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:92"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_93"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:93"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/Identity_94"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/lstm_model/RNN_net/while_grad:94"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/lstm_model/RNN_net/while_grad/Identity_10"
  input: "^gradients/lstm_model/RNN_net/while_grad/Identity_11"
  input: "^gradients/lstm_model/RNN_net/while_grad/Identity_12"
  input: "^gradients/lstm_model/RNN_net/while_grad/Identity_13"
  input: "^gradients/lstm_model/RNN_net/while_grad/Identity_14"
  input: "^gradients/lstm_model/RNN_net/while_grad/Identity_3"
  input: "^gradients/lstm_model/RNN_net/while_grad/Identity_4"
  input: "^gradients/lstm_model/RNN_net/while_grad/Identity_5"
  input: "^gradients/lstm_model/RNN_net/while_grad/Identity_6"
  input: "^gradients/lstm_model/RNN_net/while_grad/Identity_7"
  input: "^gradients/lstm_model/RNN_net/while_grad/Identity_8"
  input: "^gradients/lstm_model/RNN_net/while_grad/Identity_9"
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/Identity_3"
  input: "^gradients/lstm_model/RNN_net/while_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/RNN_net/while_grad/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/Identity_4"
  input: "^gradients/lstm_model/RNN_net/while_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/RNN_net/while_grad/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/Identity_5"
  input: "^gradients/lstm_model/RNN_net/while_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/RNN_net/while_grad/Identity_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/Identity_6"
  input: "^gradients/lstm_model/RNN_net/while_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/RNN_net/while_grad/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/Identity_7"
  input: "^gradients/lstm_model/RNN_net/while_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/RNN_net/while_grad/Identity_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/tuple/control_dependency_5"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/Identity_8"
  input: "^gradients/lstm_model/RNN_net/while_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/RNN_net/while_grad/Identity_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/tuple/control_dependency_6"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/Identity_9"
  input: "^gradients/lstm_model/RNN_net/while_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/RNN_net/while_grad/Identity_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/tuple/control_dependency_7"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/Identity_10"
  input: "^gradients/lstm_model/RNN_net/while_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/RNN_net/while_grad/Identity_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/tuple/control_dependency_8"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/Identity_11"
  input: "^gradients/lstm_model/RNN_net/while_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/RNN_net/while_grad/Identity_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/tuple/control_dependency_9"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/Identity_12"
  input: "^gradients/lstm_model/RNN_net/while_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/RNN_net/while_grad/Identity_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/tuple/control_dependency_10"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/Identity_13"
  input: "^gradients/lstm_model/RNN_net/while_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/RNN_net/while_grad/Identity_13"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/lstm_model/RNN_net/while_grad/tuple/control_dependency_11"
  op: "Identity"
  input: "gradients/lstm_model/RNN_net/while_grad/Identity_14"
  input: "^gradients/lstm_model/RNN_net/while_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/lstm_model/RNN_net/while_grad/Identity_14"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "GradientDescent/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "GradientDescent/update_RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel"
  input: "GradientDescent/learning_rate"
  input: "gradients/lstm_model/RNN_net/while_grad/tuple/control_dependency_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
  input: "GradientDescent/learning_rate"
  input: "gradients/lstm_model/RNN_net/while_grad/tuple/control_dependency_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias"
  input: "GradientDescent/learning_rate"
  input: "gradients/lstm_model/RNN_net/while_grad/tuple/control_dependency_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel"
  input: "GradientDescent/learning_rate"
  input: "gradients/lstm_model/RNN_net/while_grad/tuple/control_dependency_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
  input: "GradientDescent/learning_rate"
  input: "gradients/lstm_model/RNN_net/while_grad/tuple/control_dependency_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias"
  input: "GradientDescent/learning_rate"
  input: "gradients/lstm_model/RNN_net/while_grad/tuple/control_dependency_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_x_conf/kernel/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "x_conf/kernel"
  input: "GradientDescent/learning_rate"
  input: "gradients/lstm_model/x_conf/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@x_conf/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_x_conf/bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "x_conf/bias"
  input: "GradientDescent/learning_rate"
  input: "gradients/lstm_model/x_conf/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@x_conf/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_x_reg/kernel/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "x_reg/kernel"
  input: "GradientDescent/learning_rate"
  input: "gradients/lstm_model/x_reg/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@x_reg/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_x_reg/bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "x_reg/bias"
  input: "GradientDescent/learning_rate"
  input: "gradients/lstm_model/x_reg/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@x_reg/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_y_conf/kernel/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "y_conf/kernel"
  input: "GradientDescent/learning_rate"
  input: "gradients/lstm_model/y_conf/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_conf/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_y_conf/bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "y_conf/bias"
  input: "GradientDescent/learning_rate"
  input: "gradients/lstm_model/y_conf/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_conf/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_y_reg/kernel/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "y_reg/kernel"
  input: "GradientDescent/learning_rate"
  input: "gradients/lstm_model/y_reg/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_reg/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_y_reg/bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "y_reg/bias"
  input: "GradientDescent/learning_rate"
  input: "gradients/lstm_model/y_reg/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_reg/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_h_conf/kernel/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "h_conf/kernel"
  input: "GradientDescent/learning_rate"
  input: "gradients/lstm_model/h_conf/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@h_conf/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_h_conf/bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "h_conf/bias"
  input: "GradientDescent/learning_rate"
  input: "gradients/lstm_model/h_conf/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@h_conf/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_h_reg/kernel/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "h_reg/kernel"
  input: "GradientDescent/learning_rate"
  input: "gradients/lstm_model/h_reg/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@h_reg/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_h_reg/bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "h_reg/bias"
  input: "GradientDescent/learning_rate"
  input: "gradients/lstm_model/h_reg/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@h_reg/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_w_conf/kernel/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "w_conf/kernel"
  input: "GradientDescent/learning_rate"
  input: "gradients/lstm_model/w_conf/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_conf/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_w_conf/bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "w_conf/bias"
  input: "GradientDescent/learning_rate"
  input: "gradients/lstm_model/w_conf/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_conf/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_w_reg/kernel/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "w_reg/kernel"
  input: "GradientDescent/learning_rate"
  input: "gradients/lstm_model/w_reg/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_reg/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_w_reg/bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "w_reg/bias"
  input: "GradientDescent/learning_rate"
  input: "gradients/lstm_model/w_reg/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@w_reg/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update"
  op: "NoOp"
  input: "^GradientDescent/update_RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias/ResourceApplyGradientDescent"
  input: "^GradientDescent/update_RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel/ResourceApplyGradientDescent"
  input: "^GradientDescent/update_RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/ResourceApplyGradientDescent"
  input: "^GradientDescent/update_RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias/ResourceApplyGradientDescent"
  input: "^GradientDescent/update_RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel/ResourceApplyGradientDescent"
  input: "^GradientDescent/update_RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/ResourceApplyGradientDescent"
  input: "^GradientDescent/update_h_conf/bias/ResourceApplyGradientDescent"
  input: "^GradientDescent/update_h_conf/kernel/ResourceApplyGradientDescent"
  input: "^GradientDescent/update_h_reg/bias/ResourceApplyGradientDescent"
  input: "^GradientDescent/update_h_reg/kernel/ResourceApplyGradientDescent"
  input: "^GradientDescent/update_w_conf/bias/ResourceApplyGradientDescent"
  input: "^GradientDescent/update_w_conf/kernel/ResourceApplyGradientDescent"
  input: "^GradientDescent/update_w_reg/bias/ResourceApplyGradientDescent"
  input: "^GradientDescent/update_w_reg/kernel/ResourceApplyGradientDescent"
  input: "^GradientDescent/update_x_conf/bias/ResourceApplyGradientDescent"
  input: "^GradientDescent/update_x_conf/kernel/ResourceApplyGradientDescent"
  input: "^GradientDescent/update_x_reg/bias/ResourceApplyGradientDescent"
  input: "^GradientDescent/update_x_reg/kernel/ResourceApplyGradientDescent"
  input: "^GradientDescent/update_y_conf/bias/ResourceApplyGradientDescent"
  input: "^GradientDescent/update_y_conf/kernel/ResourceApplyGradientDescent"
  input: "^GradientDescent/update_y_reg/bias/ResourceApplyGradientDescent"
  input: "^GradientDescent/update_y_reg/kernel/ResourceApplyGradientDescent"
}
node {
  name: "GradientDescent/Const"
  op: "Const"
  input: "^GradientDescent/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "GradientDescent"
  op: "AssignAddVariableOp"
  input: "global_step"
  input: "GradientDescent/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias/Assign"
  input: "^RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel/Assign"
  input: "^RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Assign"
  input: "^RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias/Assign"
  input: "^RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel/Assign"
  input: "^RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Assign"
  input: "^global_step/Assign"
  input: "^h_conf/bias/Assign"
  input: "^h_conf/kernel/Assign"
  input: "^h_reg/bias/Assign"
  input: "^h_reg/kernel/Assign"
  input: "^w_conf/bias/Assign"
  input: "^w_conf/kernel/Assign"
  input: "^w_reg/bias/Assign"
  input: "^w_reg/kernel/Assign"
  input: "^x_conf/bias/Assign"
  input: "^x_conf/kernel/Assign"
  input: "^x_reg/bias/Assign"
  input: "^x_reg/kernel/Assign"
  input: "^y_conf/bias/Assign"
  input: "^y_conf/kernel/Assign"
  input: "^y_reg/bias/Assign"
  input: "^y_reg/kernel/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "x_conf/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "x_conf/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "x_reg/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "x_reg/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "y_conf/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "y_conf/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "y_reg/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "y_reg/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "h_conf/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "h_conf/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "h_reg/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "h_reg/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "w_conf/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "w_conf/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "w_reg/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "w_reg/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "mean_squared_error/total"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "mean_squared_error/count"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/VarIsInitializedOp"
  input: "report_uninitialized_variables/VarIsInitializedOp_1"
  input: "report_uninitialized_variables/VarIsInitializedOp_2"
  input: "report_uninitialized_variables/VarIsInitializedOp_3"
  input: "report_uninitialized_variables/VarIsInitializedOp_4"
  input: "report_uninitialized_variables/VarIsInitializedOp_5"
  input: "report_uninitialized_variables/VarIsInitializedOp_6"
  input: "report_uninitialized_variables/VarIsInitializedOp_7"
  input: "report_uninitialized_variables/VarIsInitializedOp_8"
  input: "report_uninitialized_variables/VarIsInitializedOp_9"
  input: "report_uninitialized_variables/VarIsInitializedOp_10"
  input: "report_uninitialized_variables/VarIsInitializedOp_11"
  input: "report_uninitialized_variables/VarIsInitializedOp_12"
  input: "report_uninitialized_variables/VarIsInitializedOp_13"
  input: "report_uninitialized_variables/VarIsInitializedOp_14"
  input: "report_uninitialized_variables/VarIsInitializedOp_15"
  input: "report_uninitialized_variables/VarIsInitializedOp_16"
  input: "report_uninitialized_variables/VarIsInitializedOp_17"
  input: "report_uninitialized_variables/VarIsInitializedOp_18"
  input: "report_uninitialized_variables/VarIsInitializedOp_19"
  input: "report_uninitialized_variables/VarIsInitializedOp_20"
  input: "report_uninitialized_variables/VarIsInitializedOp_21"
  input: "report_uninitialized_variables/VarIsInitializedOp_22"
  input: "report_uninitialized_variables/VarIsInitializedOp_23"
  input: "report_uninitialized_variables/VarIsInitializedOp_24"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 25
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 25
          }
        }
        string_val: "global_step"
        string_val: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel"
        string_val: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
        string_val: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias"
        string_val: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel"
        string_val: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
        string_val: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias"
        string_val: "x_conf/kernel"
        string_val: "x_conf/bias"
        string_val: "x_reg/kernel"
        string_val: "x_reg/bias"
        string_val: "y_conf/kernel"
        string_val: "y_conf/bias"
        string_val: "y_reg/kernel"
        string_val: "y_reg/bias"
        string_val: "h_conf/kernel"
        string_val: "h_conf/bias"
        string_val: "h_reg/kernel"
        string_val: "h_reg/bias"
        string_val: "w_conf/kernel"
        string_val: "w_conf/bias"
        string_val: "w_reg/kernel"
        string_val: "w_reg/bias"
        string_val: "mean_squared_error/total"
        string_val: "mean_squared_error/count"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 25
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 25
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 25
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 25
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "x_conf/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "x_conf/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "x_reg/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "x_reg/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "y_conf/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "y_conf/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "y_reg/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "y_reg/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "h_conf/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "h_conf/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "h_reg/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "h_reg/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "w_conf/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "w_conf/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "w_reg/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "w_reg/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/VarIsInitializedOp"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 23
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 23
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 23
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 23
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 23
          }
        }
        string_val: "global_step"
        string_val: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel"
        string_val: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
        string_val: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias"
        string_val: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel"
        string_val: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
        string_val: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias"
        string_val: "x_conf/kernel"
        string_val: "x_conf/bias"
        string_val: "x_reg/kernel"
        string_val: "x_reg/bias"
        string_val: "y_conf/kernel"
        string_val: "y_conf/bias"
        string_val: "y_reg/kernel"
        string_val: "y_reg/bias"
        string_val: "h_conf/kernel"
        string_val: "h_conf/bias"
        string_val: "h_reg/kernel"
        string_val: "h_reg/bias"
        string_val: "w_conf/kernel"
        string_val: "w_conf/bias"
        string_val: "w_reg/kernel"
        string_val: "w_reg/bias"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 23
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 23
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 23
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 23
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 23
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  input: "report_uninitialized_resources_1/Const"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^mean_squared_error/count/Assign"
  input: "^mean_squared_error/total/Assign"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "train_accuracy_1"
  input: "conf_loss"
  input: "dist_loss"
  input: "loss"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/StaticRegexFullMatch"
  op: "StaticRegexFullMatch"
  input: "save/Const"
  device: "/device:CPU:*"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "pattern"
    value {
      s: "^s3://.*"
    }
  }
}
node {
  name: "save/Const_1"
  op: "Const"
  device: "/device:CPU:*"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ".part"
      }
    }
  }
}
node {
  name: "save/Const_2"
  op: "Const"
  device: "/device:CPU:*"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp/part"
      }
    }
  }
}
node {
  name: "save/Select"
  op: "Select"
  input: "save/StaticRegexFullMatch"
  input: "save/Const_1"
  input: "save/Const_2"
  device: "/device:CPU:*"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/Select"
  device: "/device:CPU:*"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 23
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 23
          }
        }
        string_val: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias"
        string_val: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel"
        string_val: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
        string_val: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias"
        string_val: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel"
        string_val: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
        string_val: "global_step"
        string_val: "h_conf/bias"
        string_val: "h_conf/kernel"
        string_val: "h_reg/bias"
        string_val: "h_reg/kernel"
        string_val: "w_conf/bias"
        string_val: "w_conf/kernel"
        string_val: "w_reg/bias"
        string_val: "w_reg/kernel"
        string_val: "x_conf/bias"
        string_val: "x_conf/kernel"
        string_val: "x_reg/bias"
        string_val: "x_reg/kernel"
        string_val: "y_conf/bias"
        string_val: "y_conf/kernel"
        string_val: "y_reg/bias"
        string_val: "y_reg/kernel"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 23
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 23
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias/Read/ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel/Read/ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel/Read/ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias/Read/ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel/Read/ReadVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel/Read/ReadVariableOp"
  input: "global_step/Read/ReadVariableOp"
  input: "h_conf/bias/Read/ReadVariableOp"
  input: "h_conf/kernel/Read/ReadVariableOp"
  input: "h_reg/bias/Read/ReadVariableOp"
  input: "h_reg/kernel/Read/ReadVariableOp"
  input: "w_conf/bias/Read/ReadVariableOp"
  input: "w_conf/kernel/Read/ReadVariableOp"
  input: "w_reg/bias/Read/ReadVariableOp"
  input: "w_reg/kernel/Read/ReadVariableOp"
  input: "x_conf/bias/Read/ReadVariableOp"
  input: "x_conf/kernel/Read/ReadVariableOp"
  input: "x_reg/bias/Read/ReadVariableOp"
  input: "x_reg/kernel/Read/ReadVariableOp"
  input: "y_conf/bias/Read/ReadVariableOp"
  input: "y_conf/kernel/Read/ReadVariableOp"
  input: "y_reg/bias/Read/ReadVariableOp"
  input: "y_reg/kernel/Read/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 23
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 23
          }
        }
        string_val: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias"
        string_val: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel"
        string_val: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
        string_val: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias"
        string_val: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel"
        string_val: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
        string_val: "global_step"
        string_val: "h_conf/bias"
        string_val: "h_conf/kernel"
        string_val: "h_reg/bias"
        string_val: "h_reg/kernel"
        string_val: "w_conf/bias"
        string_val: "w_conf/kernel"
        string_val: "w_reg/bias"
        string_val: "w_reg/kernel"
        string_val: "x_conf/bias"
        string_val: "x_conf/kernel"
        string_val: "x_reg/bias"
        string_val: "x_reg/kernel"
        string_val: "y_conf/bias"
        string_val: "y_conf/kernel"
        string_val: "y_reg/bias"
        string_val: "y_reg/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 23
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 23
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/bias"
  input: "save/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/kernel"
  input: "save/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_0/recurrent_kernel"
  input: "save/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/bias"
  input: "save/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/kernel"
  input: "save/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "RNN_net/stacked_rnn_cells/LSTM_Layer_1/recurrent_kernel"
  input: "save/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "global_step"
  input: "save/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "h_conf/bias"
  input: "save/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "h_conf/kernel"
  input: "save/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "h_reg/bias"
  input: "save/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "h_reg/kernel"
  input: "save/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "w_conf/bias"
  input: "save/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "w_conf/kernel"
  input: "save/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "w_reg/bias"
  input: "save/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "w_reg/kernel"
  input: "save/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "x_conf/bias"
  input: "save/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "x_conf/kernel"
  input: "save/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "x_reg/bias"
  input: "save/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "x_reg/kernel"
  input: "save/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "y_conf/bias"
  input: "save/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "y_conf/kernel"
  input: "save/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_22"
  op: "Identity"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "y_reg/bias"
  input: "save/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_23"
  op: "Identity"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "y_reg/kernel"
  input: "save/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_19"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_20"
  input: "^save/AssignVariableOp_21"
  input: "^save/AssignVariableOp_22"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_9"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
library {
  function {
    signature {
      name: "lstm_model_RNN_net_while_body_2295_rewritten"
      input_arg {
        name: "lstm_model_rnn_net_while_loop_counter"
        type: DT_INT32
      }
      input_arg {
        name: "lstm_model_rnn_net_while_maximum_iterations_0"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_2"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_3"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_4"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_5"
        type: DT_FLOAT
      }
      input_arg {
        name: "lstm_model_rnn_net_strided_slice_1_0"
        type: DT_INT32
      }
      input_arg {
        name: "tensorarrayv2read_tensorlistgetitem_lstm_model_rnn_net_tensorarrayunstack_tensorlistfromtensor_0"
        type: DT_VARIANT
      }
      input_arg {
        name: "stacked_rnn_cells_lstm_layer_0_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_kernel_0"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 13
            }
            dim {
              size: 128
            }
          }
        }
      }
      input_arg {
        name: "stacked_rnn_cells_lstm_layer_0_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_bias_0"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      input_arg {
        name: "stacked_rnn_cells_lstm_layer_0_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_recurrent_kernel_0"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 32
            }
            dim {
              size: 128
            }
          }
        }
      }
      input_arg {
        name: "stacked_rnn_cells_lstm_layer_1_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_kernel_0"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 32
            }
            dim {
              size: 128
            }
          }
        }
      }
      input_arg {
        name: "stacked_rnn_cells_lstm_layer_1_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_bias_0"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      input_arg {
        name: "stacked_rnn_cells_lstm_layer_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_recurrent_kernel_0"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 32
            }
            dim {
              size: 128
            }
          }
        }
      }
      input_arg {
        name: "tensorlistpushback_lstm_model_rnn_net_while_emptytensorlist"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_1_lstm_model_rnn_net_while_emptytensorlist_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_2_lstm_model_rnn_net_while_emptytensorlist_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_3_lstm_model_rnn_net_while_emptytensorlist_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_4_lstm_model_rnn_net_while_emptytensorlist_4"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_5_lstm_model_rnn_net_while_emptytensorlist_5"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_6_lstm_model_rnn_net_while_emptytensorlist_6"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_7_lstm_model_rnn_net_while_emptytensorlist_7"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_8_lstm_model_rnn_net_while_emptytensorlist_8"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_9_lstm_model_rnn_net_while_emptytensorlist_9"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_10_lstm_model_rnn_net_while_emptytensorlist_10"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_11_lstm_model_rnn_net_while_emptytensorlist_11"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_12_lstm_model_rnn_net_while_emptytensorlist_12"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_13_lstm_model_rnn_net_while_emptytensorlist_13"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_14_lstm_model_rnn_net_while_emptytensorlist_14"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_15_lstm_model_rnn_net_while_emptytensorlist_15"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_16_lstm_model_rnn_net_while_emptytensorlist_16"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_17_lstm_model_rnn_net_while_emptytensorlist_17"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_18_lstm_model_rnn_net_while_emptytensorlist_18"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_19_lstm_model_rnn_net_while_emptytensorlist_19"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_20_lstm_model_rnn_net_while_emptytensorlist_20"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_21_lstm_model_rnn_net_while_emptytensorlist_21"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_22_lstm_model_rnn_net_while_emptytensorlist_22"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_23_lstm_model_rnn_net_while_emptytensorlist_23"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_24_lstm_model_rnn_net_while_emptytensorlist_24"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_25_lstm_model_rnn_net_while_emptytensorlist_25"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_26_lstm_model_rnn_net_while_emptytensorlist_26"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_27_lstm_model_rnn_net_while_emptytensorlist_27"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_28_lstm_model_rnn_net_while_emptytensorlist_28"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_29_lstm_model_rnn_net_while_emptytensorlist_29"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_30_lstm_model_rnn_net_while_emptytensorlist_30"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_31_lstm_model_rnn_net_while_emptytensorlist_31"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_32_lstm_model_rnn_net_while_emptytensorlist_32"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_33_lstm_model_rnn_net_while_emptytensorlist_33"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_34_lstm_model_rnn_net_while_emptytensorlist_34"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_35_lstm_model_rnn_net_while_emptytensorlist_35"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_36_lstm_model_rnn_net_while_emptytensorlist_36"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_37_lstm_model_rnn_net_while_emptytensorlist_37"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_38_lstm_model_rnn_net_while_emptytensorlist_38"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_39_lstm_model_rnn_net_while_emptytensorlist_39"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_40_lstm_model_rnn_net_while_emptytensorlist_40"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_41_lstm_model_rnn_net_while_emptytensorlist_41"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_42_lstm_model_rnn_net_while_emptytensorlist_42"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_43_lstm_model_rnn_net_while_emptytensorlist_43"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_44_lstm_model_rnn_net_while_emptytensorlist_44"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_45_lstm_model_rnn_net_while_emptytensorlist_45"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_46_lstm_model_rnn_net_while_emptytensorlist_46"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_47_lstm_model_rnn_net_while_emptytensorlist_47"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_48_lstm_model_rnn_net_while_emptytensorlist_48"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_49_lstm_model_rnn_net_while_emptytensorlist_49"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_50_lstm_model_rnn_net_while_emptytensorlist_50"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_51_lstm_model_rnn_net_while_emptytensorlist_51"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_52_lstm_model_rnn_net_while_emptytensorlist_52"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_53_lstm_model_rnn_net_while_emptytensorlist_53"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_54_lstm_model_rnn_net_while_emptytensorlist_54"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_55_lstm_model_rnn_net_while_emptytensorlist_55"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_56_lstm_model_rnn_net_while_emptytensorlist_56"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_57_lstm_model_rnn_net_while_emptytensorlist_57"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_58_lstm_model_rnn_net_while_emptytensorlist_58"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_59_lstm_model_rnn_net_while_emptytensorlist_59"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_60_lstm_model_rnn_net_while_emptytensorlist_60"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_61_lstm_model_rnn_net_while_emptytensorlist_61"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_62_lstm_model_rnn_net_while_emptytensorlist_62"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_63_lstm_model_rnn_net_while_emptytensorlist_63"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_64_lstm_model_rnn_net_while_emptytensorlist_64"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_65_lstm_model_rnn_net_while_emptytensorlist_65"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_66_lstm_model_rnn_net_while_emptytensorlist_66"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_67_lstm_model_rnn_net_while_emptytensorlist_67"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_68_lstm_model_rnn_net_while_emptytensorlist_68"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_69_lstm_model_rnn_net_while_emptytensorlist_69"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_70_lstm_model_rnn_net_while_emptytensorlist_70"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_71_lstm_model_rnn_net_while_emptytensorlist_71"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_72_lstm_model_rnn_net_while_emptytensorlist_72"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_73_lstm_model_rnn_net_while_emptytensorlist_73"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_74_lstm_model_rnn_net_while_emptytensorlist_74"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_75_lstm_model_rnn_net_while_emptytensorlist_75"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_76_lstm_model_rnn_net_while_emptytensorlist_76"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_77_lstm_model_rnn_net_while_emptytensorlist_77"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_78_lstm_model_rnn_net_while_emptytensorlist_78"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_79_lstm_model_rnn_net_while_emptytensorlist_79"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_80_lstm_model_rnn_net_while_emptytensorlist_80"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_81_lstm_model_rnn_net_while_emptytensorlist_81"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_82_lstm_model_rnn_net_while_emptytensorlist_82"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_83_lstm_model_rnn_net_while_emptytensorlist_83"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_84_lstm_model_rnn_net_while_emptytensorlist_84"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_85_lstm_model_rnn_net_while_emptytensorlist_85"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_86_lstm_model_rnn_net_while_emptytensorlist_86"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_87_lstm_model_rnn_net_while_emptytensorlist_87"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_88_lstm_model_rnn_net_while_emptytensorlist_88"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_89_lstm_model_rnn_net_while_emptytensorlist_89"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_90_lstm_model_rnn_net_while_emptytensorlist_90"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_91_lstm_model_rnn_net_while_emptytensorlist_91"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_92_lstm_model_rnn_net_while_emptytensorlist_92"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_93_lstm_model_rnn_net_while_emptytensorlist_93"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_94_lstm_model_rnn_net_while_emptytensorlist_94"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_95_lstm_model_rnn_net_while_emptytensorlist_95"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_96_lstm_model_rnn_net_while_emptytensorlist_96"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_97_lstm_model_rnn_net_while_emptytensorlist_97"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_98_lstm_model_rnn_net_while_emptytensorlist_98"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_99_lstm_model_rnn_net_while_emptytensorlist_99"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_100_lstm_model_rnn_net_while_emptytensorlist_100"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_101_lstm_model_rnn_net_while_emptytensorlist_101"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_102_lstm_model_rnn_net_while_emptytensorlist_102"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_103_lstm_model_rnn_net_while_emptytensorlist_103"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_104_lstm_model_rnn_net_while_emptytensorlist_104"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_105_lstm_model_rnn_net_while_emptytensorlist_105"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_106_lstm_model_rnn_net_while_emptytensorlist_106"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_107_lstm_model_rnn_net_while_emptytensorlist_107"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_108_lstm_model_rnn_net_while_emptytensorlist_108"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_109_lstm_model_rnn_net_while_emptytensorlist_109"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_110_lstm_model_rnn_net_while_emptytensorlist_110"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_111_lstm_model_rnn_net_while_emptytensorlist_111"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_112_lstm_model_rnn_net_while_emptytensorlist_112"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_113_lstm_model_rnn_net_while_emptytensorlist_113"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_114_lstm_model_rnn_net_while_emptytensorlist_114"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_115_lstm_model_rnn_net_while_emptytensorlist_115"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_116_lstm_model_rnn_net_while_emptytensorlist_116"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_117_lstm_model_rnn_net_while_emptytensorlist_117"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_118_lstm_model_rnn_net_while_emptytensorlist_118"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_119_lstm_model_rnn_net_while_emptytensorlist_119"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_120_lstm_model_rnn_net_while_emptytensorlist_120"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_121_lstm_model_rnn_net_while_emptytensorlist_121"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_122_lstm_model_rnn_net_while_emptytensorlist_122"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_123_lstm_model_rnn_net_while_emptytensorlist_123"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_124_lstm_model_rnn_net_while_emptytensorlist_124"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_125_lstm_model_rnn_net_while_emptytensorlist_125"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_126_lstm_model_rnn_net_while_emptytensorlist_126"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_127_lstm_model_rnn_net_while_emptytensorlist_127"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_128_lstm_model_rnn_net_while_emptytensorlist_128"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_129_lstm_model_rnn_net_while_emptytensorlist_129"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_130_lstm_model_rnn_net_while_emptytensorlist_130"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_131_lstm_model_rnn_net_while_emptytensorlist_131"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_132_lstm_model_rnn_net_while_emptytensorlist_132"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_133_lstm_model_rnn_net_while_emptytensorlist_133"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_134_lstm_model_rnn_net_while_emptytensorlist_134"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_135_lstm_model_rnn_net_while_emptytensorlist_135"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_136_lstm_model_rnn_net_while_emptytensorlist_136"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_137_lstm_model_rnn_net_while_emptytensorlist_137"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_138_lstm_model_rnn_net_while_emptytensorlist_138"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_139_lstm_model_rnn_net_while_emptytensorlist_139"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_140_lstm_model_rnn_net_while_emptytensorlist_140"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_141_lstm_model_rnn_net_while_emptytensorlist_141"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_142_lstm_model_rnn_net_while_emptytensorlist_142"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_143_lstm_model_rnn_net_while_emptytensorlist_143"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_144_lstm_model_rnn_net_while_emptytensorlist_144"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_145_lstm_model_rnn_net_while_emptytensorlist_145"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_146_lstm_model_rnn_net_while_emptytensorlist_146"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_147_lstm_model_rnn_net_while_emptytensorlist_147"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_148_lstm_model_rnn_net_while_emptytensorlist_148"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_149_lstm_model_rnn_net_while_emptytensorlist_149"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_150_lstm_model_rnn_net_while_emptytensorlist_150"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_151_lstm_model_rnn_net_while_emptytensorlist_151"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_152_lstm_model_rnn_net_while_emptytensorlist_152"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_153_lstm_model_rnn_net_while_emptytensorlist_153"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_154_lstm_model_rnn_net_while_emptytensorlist_154"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_155_lstm_model_rnn_net_while_emptytensorlist_155"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_156_lstm_model_rnn_net_while_emptytensorlist_156"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_157_lstm_model_rnn_net_while_emptytensorlist_157"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_158_lstm_model_rnn_net_while_emptytensorlist_158"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_159_lstm_model_rnn_net_while_emptytensorlist_159"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_160_lstm_model_rnn_net_while_emptytensorlist_160"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_161_lstm_model_rnn_net_while_emptytensorlist_161"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_162_lstm_model_rnn_net_while_emptytensorlist_162"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_163_lstm_model_rnn_net_while_emptytensorlist_163"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_164_lstm_model_rnn_net_while_emptytensorlist_164"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_165_lstm_model_rnn_net_while_emptytensorlist_165"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_166_lstm_model_rnn_net_while_emptytensorlist_166"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_167_lstm_model_rnn_net_while_emptytensorlist_167"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_168_lstm_model_rnn_net_while_emptytensorlist_168"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_169_lstm_model_rnn_net_while_emptytensorlist_169"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_170_lstm_model_rnn_net_while_emptytensorlist_170"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_171_gradients_lstm_model_rnn_net_while_grad_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistelementshape_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_172_gradients_lstm_model_rnn_net_while_grad_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistlength_0_accumulator"
        type: DT_VARIANT
      }
      output_arg {
        name: "add_1"
        type: DT_INT32
      }
      output_arg {
        name: "lstm_model_rnn_net_while_maximum_iterations"
        type: DT_INT32
      }
      output_arg {
        name: "add"
        type: DT_INT32
      }
      output_arg {
        name: "tensorarrayv2write_tensorlistsetitem"
        type: DT_VARIANT
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_0_mul_5"
        type: DT_FLOAT
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_0_add_5"
        type: DT_FLOAT
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_1_mul_5"
        type: DT_FLOAT
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_1_add_5"
        type: DT_FLOAT
      }
      output_arg {
        name: "lstm_model_rnn_net_strided_slice_1"
        type: DT_INT32
      }
      output_arg {
        name: "tensorarrayv2read_tensorlistgetitem_lstm_model_rnn_net_tensorarrayunstack_tensorlistfromtensor"
        type: DT_VARIANT
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_0_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_kernel"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 13
            }
            dim {
              size: 128
            }
          }
        }
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_0_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_bias"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_0_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_recurrent_kernel"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 32
            }
            dim {
              size: 128
            }
          }
        }
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_1_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_kernel"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 32
            }
            dim {
              size: 128
            }
          }
        }
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_1_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_bias"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_recurrent_kernel"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 32
            }
            dim {
              size: 128
            }
          }
        }
      }
      output_arg {
        name: "tensorlistpushback"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_6"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_7"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_8"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_9"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_10"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_11"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_12"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_13"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_14"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_15"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_16"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_17"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_18"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_19"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_20"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_21"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_22"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_23"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_24"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_25"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_26"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_27"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_28"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_29"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_30"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_31"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_32"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_33"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_34"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_35"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_36"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_37"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_38"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_39"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_40"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_41"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_42"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_43"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_44"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_45"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_46"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_47"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_48"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_49"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_50"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_51"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_52"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_53"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_54"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_55"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_56"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_57"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_58"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_59"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_60"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_61"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_62"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_63"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_64"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_65"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_66"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_67"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_68"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_69"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_70"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_71"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_72"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_73"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_74"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_75"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_76"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_77"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_78"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_79"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_80"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_81"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_82"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_83"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_84"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_85"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_86"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_87"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_88"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_89"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_90"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_91"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_92"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_93"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_94"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_95"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_96"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_97"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_98"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_99"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_100"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_101"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_102"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_103"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_104"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_105"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_106"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_107"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_108"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_109"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_110"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_111"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_112"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_113"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_114"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_115"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_116"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_117"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_118"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_119"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_120"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_121"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_122"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_123"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_124"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_125"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_126"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_127"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_128"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_129"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_130"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_131"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_132"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_133"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_134"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_135"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_136"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_137"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_138"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_139"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_140"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_141"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_142"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_143"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_144"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_145"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_146"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_147"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_148"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_149"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_150"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_151"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_152"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_153"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_154"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_155"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_156"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_157"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_158"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_159"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_160"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_161"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_162"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_163"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_164"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_165"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_166"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_167"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_168"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_169"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_170"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_171"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_172"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "TensorArrayV2Read/TensorListGetItem/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\377\377\377\377\r\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "TensorArrayV2Read/TensorListGetItem"
      op: "TensorListGetItem"
      input: "tensorarrayv2read_tensorlistgetitem_lstm_model_rnn_net_tensorarrayunstack_tensorlistfromtensor_0"
      input: "placeholder"
      input: "TensorArrayV2Read/TensorListGetItem/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 13
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/split/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/split/ReadVariableOp"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_0_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 13
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/split"
      op: "Split"
      input: "stacked_rnn_cells/LSTM_Layer_0/split/split_dim:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 13
              }
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 13
              }
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 13
              }
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 13
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 4
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/MatMul"
      op: "MatMul"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/MatMul_1"
      op: "MatMul"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split:output:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/MatMul_2"
      op: "MatMul"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split:output:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/MatMul_3"
      op: "MatMul"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split:output:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/split_1/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/split_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_0_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_bias_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/split_1"
      op: "Split"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1/split_dim:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 4
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd"
      op: "BiasAdd"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul:product:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd_1"
      op: "BiasAdd"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_1:product:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1:output:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd_2"
      op: "BiasAdd"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_2:product:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1:output:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd_3"
      op: "BiasAdd"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_3:product:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1:output:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_0_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_recurrent_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000 \000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice"
      op: "StridedSlice"
      input: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp:value:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 3
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/MatMul_4"
      op: "MatMul"
      input: "placeholder_2"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/add"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_4:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Mul"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_0/add:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Add_1"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_0/Mul:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum"
      op: "Minimum"
      input: "stacked_rnn_cells/LSTM_Layer_0/Add_1:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value"
      op: "Maximum"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_0_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_recurrent_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000 \000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000@\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1"
      op: "StridedSlice"
      input: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_1:value:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/MatMul_5"
      op: "MatMul"
      input: "placeholder_2"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/add_2"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_5:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Mul_1"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_0/add_2:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Add_3"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_0/Mul_1:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum"
      op: "Minimum"
      input: "stacked_rnn_cells/LSTM_Layer_0/Add_3:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1"
      op: "Maximum"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/mul_2"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1:z:0"
      input: "placeholder_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_2"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_0_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_recurrent_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000@\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000`\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2"
      op: "StridedSlice"
      input: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_2:value:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/MatMul_6"
      op: "MatMul"
      input: "placeholder_2"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/add_4"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd_2:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_6:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Tanh"
      op: "Tanh"
      input: "stacked_rnn_cells/LSTM_Layer_0/add_4:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/mul_3"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/Tanh:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/add_5"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_0/mul_2:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/mul_3:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_3"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_0_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_recurrent_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000`\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3"
      op: "StridedSlice"
      input: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_3:value:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 3
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/MatMul_7"
      op: "MatMul"
      input: "placeholder_2"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/add_6"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd_3:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_7:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Const_4"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Const_5"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Mul_4"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_0/add_6:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_4:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Add_7"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_0/Mul_4:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_5:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum"
      op: "Minimum"
      input: "stacked_rnn_cells/LSTM_Layer_0/Add_7:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2"
      op: "Maximum"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Tanh_1"
      op: "Tanh"
      input: "stacked_rnn_cells/LSTM_Layer_0/add_5:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/mul_5"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/Tanh_1:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/split/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/split/ReadVariableOp"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_1_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/split"
      op: "Split"
      input: "stacked_rnn_cells/LSTM_Layer_1/split/split_dim:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 4
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/MatMul"
      op: "MatMul"
      input: "stacked_rnn_cells/LSTM_Layer_0/mul_5:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/MatMul_1"
      op: "MatMul"
      input: "stacked_rnn_cells/LSTM_Layer_0/mul_5:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split:output:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/MatMul_2"
      op: "MatMul"
      input: "stacked_rnn_cells/LSTM_Layer_0/mul_5:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split:output:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/MatMul_3"
      op: "MatMul"
      input: "stacked_rnn_cells/LSTM_Layer_0/mul_5:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split:output:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/split_1/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/split_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_1_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_bias_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/split_1"
      op: "Split"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1/split_dim:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 4
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd"
      op: "BiasAdd"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul:product:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd_1"
      op: "BiasAdd"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_1:product:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1:output:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd_2"
      op: "BiasAdd"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_2:product:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1:output:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd_3"
      op: "BiasAdd"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_3:product:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1:output:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_recurrent_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000 \000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice"
      op: "StridedSlice"
      input: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp:value:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 3
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/MatMul_4"
      op: "MatMul"
      input: "placeholder_4"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/add"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_4:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Mul"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_1/add:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Add_1"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_1/Mul:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum"
      op: "Minimum"
      input: "stacked_rnn_cells/LSTM_Layer_1/Add_1:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value"
      op: "Maximum"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_recurrent_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000 \000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000@\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1"
      op: "StridedSlice"
      input: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_1:value:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/MatMul_5"
      op: "MatMul"
      input: "placeholder_4"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/add_2"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_5:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Mul_1"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_1/add_2:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Add_3"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_1/Mul_1:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum"
      op: "Minimum"
      input: "stacked_rnn_cells/LSTM_Layer_1/Add_3:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1"
      op: "Maximum"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/mul_2"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1:z:0"
      input: "placeholder_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_2"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_recurrent_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000@\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000`\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2"
      op: "StridedSlice"
      input: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_2:value:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/MatMul_6"
      op: "MatMul"
      input: "placeholder_4"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/add_4"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd_2:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_6:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Tanh"
      op: "Tanh"
      input: "stacked_rnn_cells/LSTM_Layer_1/add_4:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/mul_3"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/Tanh:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/add_5"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_1/mul_2:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/mul_3:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_3"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_recurrent_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000`\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3"
      op: "StridedSlice"
      input: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_3:value:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 3
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/MatMul_7"
      op: "MatMul"
      input: "placeholder_4"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/add_6"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd_3:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_7:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Const_4"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Const_5"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Mul_4"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_1/add_6:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_4:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Add_7"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_1/Mul_4:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_5:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum"
      op: "Minimum"
      input: "stacked_rnn_cells/LSTM_Layer_1/Add_7:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2"
      op: "Maximum"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Tanh_1"
      op: "Tanh"
      input: "stacked_rnn_cells/LSTM_Layer_1/add_5:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/mul_5"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/Tanh_1:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "TensorArrayV2Write/TensorListSetItem/index"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "TensorArrayV2Write/TensorListSetItem"
      op: "TensorListSetItem"
      input: "placeholder_1"
      input: "TensorArrayV2Write/TensorListSetItem/index:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/mul_5:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "add/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add_0"
      op: "AddV2"
      input: "placeholder"
      input: "add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "add_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add_1_0"
      op: "AddV2"
      input: "lstm_model_rnn_net_while_loop_counter"
      input: "add_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "TensorListPushBack"
      op: "TensorListPushBack"
      input: "tensorlistpushback_lstm_model_rnn_net_while_emptytensorlist"
      input: "lstm_model_rnn_net_while_maximum_iterations_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_1"
      op: "TensorListPushBack"
      input: "tensorlistpushback_1_lstm_model_rnn_net_while_emptytensorlist_1"
      input: "placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_2"
      op: "TensorListPushBack"
      input: "tensorlistpushback_2_lstm_model_rnn_net_while_emptytensorlist_2"
      input: "placeholder_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_VARIANT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
        }
      }
    }
    node_def {
      name: "TensorListPushBack_3"
      op: "TensorListPushBack"
      input: "tensorlistpushback_3_lstm_model_rnn_net_while_emptytensorlist_3"
      input: "placeholder_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_4"
      op: "TensorListPushBack"
      input: "tensorlistpushback_4_lstm_model_rnn_net_while_emptytensorlist_4"
      input: "placeholder_3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_5"
      op: "TensorListPushBack"
      input: "tensorlistpushback_5_lstm_model_rnn_net_while_emptytensorlist_5"
      input: "placeholder_4"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_6"
      op: "TensorListPushBack"
      input: "tensorlistpushback_6_lstm_model_rnn_net_while_emptytensorlist_6"
      input: "placeholder_5"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_7"
      op: "TensorListPushBack"
      input: "tensorlistpushback_7_lstm_model_rnn_net_while_emptytensorlist_7"
      input: "TensorArrayV2Read/TensorListGetItem/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_8"
      op: "TensorListPushBack"
      input: "tensorlistpushback_8_lstm_model_rnn_net_while_emptytensorlist_8"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_9"
      op: "TensorListPushBack"
      input: "tensorlistpushback_9_lstm_model_rnn_net_while_emptytensorlist_9"
      input: "stacked_rnn_cells/LSTM_Layer_0/split/split_dim:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_10"
      op: "TensorListPushBack"
      input: "tensorlistpushback_10_lstm_model_rnn_net_while_emptytensorlist_10"
      input: "stacked_rnn_cells/LSTM_Layer_0/split/ReadVariableOp:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_11"
      op: "TensorListPushBack"
      input: "tensorlistpushback_11_lstm_model_rnn_net_while_emptytensorlist_11"
      input: "stacked_rnn_cells/LSTM_Layer_0/split:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_12"
      op: "TensorListPushBack"
      input: "tensorlistpushback_12_lstm_model_rnn_net_while_emptytensorlist_12"
      input: "stacked_rnn_cells/LSTM_Layer_0/split:output:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_13"
      op: "TensorListPushBack"
      input: "tensorlistpushback_13_lstm_model_rnn_net_while_emptytensorlist_13"
      input: "stacked_rnn_cells/LSTM_Layer_0/split:output:2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_14"
      op: "TensorListPushBack"
      input: "tensorlistpushback_14_lstm_model_rnn_net_while_emptytensorlist_14"
      input: "stacked_rnn_cells/LSTM_Layer_0/split:output:3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_15"
      op: "TensorListPushBack"
      input: "tensorlistpushback_15_lstm_model_rnn_net_while_emptytensorlist_15"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_16"
      op: "TensorListPushBack"
      input: "tensorlistpushback_16_lstm_model_rnn_net_while_emptytensorlist_16"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_1:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_17"
      op: "TensorListPushBack"
      input: "tensorlistpushback_17_lstm_model_rnn_net_while_emptytensorlist_17"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_2:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_18"
      op: "TensorListPushBack"
      input: "tensorlistpushback_18_lstm_model_rnn_net_while_emptytensorlist_18"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_3:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_19"
      op: "TensorListPushBack"
      input: "tensorlistpushback_19_lstm_model_rnn_net_while_emptytensorlist_19"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1/split_dim:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_20"
      op: "TensorListPushBack"
      input: "tensorlistpushback_20_lstm_model_rnn_net_while_emptytensorlist_20"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1/ReadVariableOp:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_21"
      op: "TensorListPushBack"
      input: "tensorlistpushback_21_lstm_model_rnn_net_while_emptytensorlist_21"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_22"
      op: "TensorListPushBack"
      input: "tensorlistpushback_22_lstm_model_rnn_net_while_emptytensorlist_22"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1:output:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_23"
      op: "TensorListPushBack"
      input: "tensorlistpushback_23_lstm_model_rnn_net_while_emptytensorlist_23"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1:output:2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_24"
      op: "TensorListPushBack"
      input: "tensorlistpushback_24_lstm_model_rnn_net_while_emptytensorlist_24"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1:output:3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_25"
      op: "TensorListPushBack"
      input: "tensorlistpushback_25_lstm_model_rnn_net_while_emptytensorlist_25"
      input: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_26"
      op: "TensorListPushBack"
      input: "tensorlistpushback_26_lstm_model_rnn_net_while_emptytensorlist_26"
      input: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_27"
      op: "TensorListPushBack"
      input: "tensorlistpushback_27_lstm_model_rnn_net_while_emptytensorlist_27"
      input: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_28"
      op: "TensorListPushBack"
      input: "tensorlistpushback_28_lstm_model_rnn_net_while_emptytensorlist_28"
      input: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd_3:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_29"
      op: "TensorListPushBack"
      input: "tensorlistpushback_29_lstm_model_rnn_net_while_emptytensorlist_29"
      input: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_30"
      op: "TensorListPushBack"
      input: "tensorlistpushback_30_lstm_model_rnn_net_while_emptytensorlist_30"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_31"
      op: "TensorListPushBack"
      input: "tensorlistpushback_31_lstm_model_rnn_net_while_emptytensorlist_31"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_32"
      op: "TensorListPushBack"
      input: "tensorlistpushback_32_lstm_model_rnn_net_while_emptytensorlist_32"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_33"
      op: "TensorListPushBack"
      input: "tensorlistpushback_33_lstm_model_rnn_net_while_emptytensorlist_33"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_34"
      op: "TensorListPushBack"
      input: "tensorlistpushback_34_lstm_model_rnn_net_while_emptytensorlist_34"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_4:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_35"
      op: "TensorListPushBack"
      input: "tensorlistpushback_35_lstm_model_rnn_net_while_emptytensorlist_35"
      input: "stacked_rnn_cells/LSTM_Layer_0/add:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_36"
      op: "TensorListPushBack"
      input: "tensorlistpushback_36_lstm_model_rnn_net_while_emptytensorlist_36"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_37"
      op: "TensorListPushBack"
      input: "tensorlistpushback_37_lstm_model_rnn_net_while_emptytensorlist_37"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_38"
      op: "TensorListPushBack"
      input: "tensorlistpushback_38_lstm_model_rnn_net_while_emptytensorlist_38"
      input: "stacked_rnn_cells/LSTM_Layer_0/Mul:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_39"
      op: "TensorListPushBack"
      input: "tensorlistpushback_39_lstm_model_rnn_net_while_emptytensorlist_39"
      input: "stacked_rnn_cells/LSTM_Layer_0/Add_1:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_40"
      op: "TensorListPushBack"
      input: "tensorlistpushback_40_lstm_model_rnn_net_while_emptytensorlist_40"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_41"
      op: "TensorListPushBack"
      input: "tensorlistpushback_41_lstm_model_rnn_net_while_emptytensorlist_41"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_42"
      op: "TensorListPushBack"
      input: "tensorlistpushback_42_lstm_model_rnn_net_while_emptytensorlist_42"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_43"
      op: "TensorListPushBack"
      input: "tensorlistpushback_43_lstm_model_rnn_net_while_emptytensorlist_43"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_44"
      op: "TensorListPushBack"
      input: "tensorlistpushback_44_lstm_model_rnn_net_while_emptytensorlist_44"
      input: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_1:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_45"
      op: "TensorListPushBack"
      input: "tensorlistpushback_45_lstm_model_rnn_net_while_emptytensorlist_45"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_46"
      op: "TensorListPushBack"
      input: "tensorlistpushback_46_lstm_model_rnn_net_while_emptytensorlist_46"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_47"
      op: "TensorListPushBack"
      input: "tensorlistpushback_47_lstm_model_rnn_net_while_emptytensorlist_47"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_48"
      op: "TensorListPushBack"
      input: "tensorlistpushback_48_lstm_model_rnn_net_while_emptytensorlist_48"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_49"
      op: "TensorListPushBack"
      input: "tensorlistpushback_49_lstm_model_rnn_net_while_emptytensorlist_49"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_5:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_50"
      op: "TensorListPushBack"
      input: "tensorlistpushback_50_lstm_model_rnn_net_while_emptytensorlist_50"
      input: "stacked_rnn_cells/LSTM_Layer_0/add_2:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_51"
      op: "TensorListPushBack"
      input: "tensorlistpushback_51_lstm_model_rnn_net_while_emptytensorlist_51"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_52"
      op: "TensorListPushBack"
      input: "tensorlistpushback_52_lstm_model_rnn_net_while_emptytensorlist_52"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_3:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_53"
      op: "TensorListPushBack"
      input: "tensorlistpushback_53_lstm_model_rnn_net_while_emptytensorlist_53"
      input: "stacked_rnn_cells/LSTM_Layer_0/Mul_1:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_54"
      op: "TensorListPushBack"
      input: "tensorlistpushback_54_lstm_model_rnn_net_while_emptytensorlist_54"
      input: "stacked_rnn_cells/LSTM_Layer_0/Add_3:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_55"
      op: "TensorListPushBack"
      input: "tensorlistpushback_55_lstm_model_rnn_net_while_emptytensorlist_55"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_56"
      op: "TensorListPushBack"
      input: "tensorlistpushback_56_lstm_model_rnn_net_while_emptytensorlist_56"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_57"
      op: "TensorListPushBack"
      input: "tensorlistpushback_57_lstm_model_rnn_net_while_emptytensorlist_57"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_58"
      op: "TensorListPushBack"
      input: "tensorlistpushback_58_lstm_model_rnn_net_while_emptytensorlist_58"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_59"
      op: "TensorListPushBack"
      input: "tensorlistpushback_59_lstm_model_rnn_net_while_emptytensorlist_59"
      input: "stacked_rnn_cells/LSTM_Layer_0/mul_2:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_60"
      op: "TensorListPushBack"
      input: "tensorlistpushback_60_lstm_model_rnn_net_while_emptytensorlist_60"
      input: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_2:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_61"
      op: "TensorListPushBack"
      input: "tensorlistpushback_61_lstm_model_rnn_net_while_emptytensorlist_61"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_62"
      op: "TensorListPushBack"
      input: "tensorlistpushback_62_lstm_model_rnn_net_while_emptytensorlist_62"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_63"
      op: "TensorListPushBack"
      input: "tensorlistpushback_63_lstm_model_rnn_net_while_emptytensorlist_63"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_64"
      op: "TensorListPushBack"
      input: "tensorlistpushback_64_lstm_model_rnn_net_while_emptytensorlist_64"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_65"
      op: "TensorListPushBack"
      input: "tensorlistpushback_65_lstm_model_rnn_net_while_emptytensorlist_65"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_6:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_66"
      op: "TensorListPushBack"
      input: "tensorlistpushback_66_lstm_model_rnn_net_while_emptytensorlist_66"
      input: "stacked_rnn_cells/LSTM_Layer_0/add_4:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_67"
      op: "TensorListPushBack"
      input: "tensorlistpushback_67_lstm_model_rnn_net_while_emptytensorlist_67"
      input: "stacked_rnn_cells/LSTM_Layer_0/Tanh:y:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_68"
      op: "TensorListPushBack"
      input: "tensorlistpushback_68_lstm_model_rnn_net_while_emptytensorlist_68"
      input: "stacked_rnn_cells/LSTM_Layer_0/mul_3:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_69"
      op: "TensorListPushBack"
      input: "tensorlistpushback_69_lstm_model_rnn_net_while_emptytensorlist_69"
      input: "stacked_rnn_cells/LSTM_Layer_0/add_5:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_70"
      op: "TensorListPushBack"
      input: "tensorlistpushback_70_lstm_model_rnn_net_while_emptytensorlist_70"
      input: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_3:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_71"
      op: "TensorListPushBack"
      input: "tensorlistpushback_71_lstm_model_rnn_net_while_emptytensorlist_71"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_72"
      op: "TensorListPushBack"
      input: "tensorlistpushback_72_lstm_model_rnn_net_while_emptytensorlist_72"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_73"
      op: "TensorListPushBack"
      input: "tensorlistpushback_73_lstm_model_rnn_net_while_emptytensorlist_73"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_74"
      op: "TensorListPushBack"
      input: "tensorlistpushback_74_lstm_model_rnn_net_while_emptytensorlist_74"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_75"
      op: "TensorListPushBack"
      input: "tensorlistpushback_75_lstm_model_rnn_net_while_emptytensorlist_75"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_7:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_76"
      op: "TensorListPushBack"
      input: "tensorlistpushback_76_lstm_model_rnn_net_while_emptytensorlist_76"
      input: "stacked_rnn_cells/LSTM_Layer_0/add_6:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_77"
      op: "TensorListPushBack"
      input: "tensorlistpushback_77_lstm_model_rnn_net_while_emptytensorlist_77"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_4:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_78"
      op: "TensorListPushBack"
      input: "tensorlistpushback_78_lstm_model_rnn_net_while_emptytensorlist_78"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_5:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_79"
      op: "TensorListPushBack"
      input: "tensorlistpushback_79_lstm_model_rnn_net_while_emptytensorlist_79"
      input: "stacked_rnn_cells/LSTM_Layer_0/Mul_4:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_80"
      op: "TensorListPushBack"
      input: "tensorlistpushback_80_lstm_model_rnn_net_while_emptytensorlist_80"
      input: "stacked_rnn_cells/LSTM_Layer_0/Add_7:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_81"
      op: "TensorListPushBack"
      input: "tensorlistpushback_81_lstm_model_rnn_net_while_emptytensorlist_81"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_82"
      op: "TensorListPushBack"
      input: "tensorlistpushback_82_lstm_model_rnn_net_while_emptytensorlist_82"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_83"
      op: "TensorListPushBack"
      input: "tensorlistpushback_83_lstm_model_rnn_net_while_emptytensorlist_83"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_84"
      op: "TensorListPushBack"
      input: "tensorlistpushback_84_lstm_model_rnn_net_while_emptytensorlist_84"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_85"
      op: "TensorListPushBack"
      input: "tensorlistpushback_85_lstm_model_rnn_net_while_emptytensorlist_85"
      input: "stacked_rnn_cells/LSTM_Layer_0/Tanh_1:y:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_86"
      op: "TensorListPushBack"
      input: "tensorlistpushback_86_lstm_model_rnn_net_while_emptytensorlist_86"
      input: "stacked_rnn_cells/LSTM_Layer_0/mul_5:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_87"
      op: "TensorListPushBack"
      input: "tensorlistpushback_87_lstm_model_rnn_net_while_emptytensorlist_87"
      input: "stacked_rnn_cells/LSTM_Layer_1/split/split_dim:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_88"
      op: "TensorListPushBack"
      input: "tensorlistpushback_88_lstm_model_rnn_net_while_emptytensorlist_88"
      input: "stacked_rnn_cells/LSTM_Layer_1/split/ReadVariableOp:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_89"
      op: "TensorListPushBack"
      input: "tensorlistpushback_89_lstm_model_rnn_net_while_emptytensorlist_89"
      input: "stacked_rnn_cells/LSTM_Layer_1/split:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_90"
      op: "TensorListPushBack"
      input: "tensorlistpushback_90_lstm_model_rnn_net_while_emptytensorlist_90"
      input: "stacked_rnn_cells/LSTM_Layer_1/split:output:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_91"
      op: "TensorListPushBack"
      input: "tensorlistpushback_91_lstm_model_rnn_net_while_emptytensorlist_91"
      input: "stacked_rnn_cells/LSTM_Layer_1/split:output:2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_92"
      op: "TensorListPushBack"
      input: "tensorlistpushback_92_lstm_model_rnn_net_while_emptytensorlist_92"
      input: "stacked_rnn_cells/LSTM_Layer_1/split:output:3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_93"
      op: "TensorListPushBack"
      input: "tensorlistpushback_93_lstm_model_rnn_net_while_emptytensorlist_93"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_94"
      op: "TensorListPushBack"
      input: "tensorlistpushback_94_lstm_model_rnn_net_while_emptytensorlist_94"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_1:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_95"
      op: "TensorListPushBack"
      input: "tensorlistpushback_95_lstm_model_rnn_net_while_emptytensorlist_95"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_2:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_96"
      op: "TensorListPushBack"
      input: "tensorlistpushback_96_lstm_model_rnn_net_while_emptytensorlist_96"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_3:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_97"
      op: "TensorListPushBack"
      input: "tensorlistpushback_97_lstm_model_rnn_net_while_emptytensorlist_97"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1/split_dim:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_98"
      op: "TensorListPushBack"
      input: "tensorlistpushback_98_lstm_model_rnn_net_while_emptytensorlist_98"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1/ReadVariableOp:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_99"
      op: "TensorListPushBack"
      input: "tensorlistpushback_99_lstm_model_rnn_net_while_emptytensorlist_99"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_100"
      op: "TensorListPushBack"
      input: "tensorlistpushback_100_lstm_model_rnn_net_while_emptytensorlist_100"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1:output:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_101"
      op: "TensorListPushBack"
      input: "tensorlistpushback_101_lstm_model_rnn_net_while_emptytensorlist_101"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1:output:2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_102"
      op: "TensorListPushBack"
      input: "tensorlistpushback_102_lstm_model_rnn_net_while_emptytensorlist_102"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1:output:3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_103"
      op: "TensorListPushBack"
      input: "tensorlistpushback_103_lstm_model_rnn_net_while_emptytensorlist_103"
      input: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_104"
      op: "TensorListPushBack"
      input: "tensorlistpushback_104_lstm_model_rnn_net_while_emptytensorlist_104"
      input: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_105"
      op: "TensorListPushBack"
      input: "tensorlistpushback_105_lstm_model_rnn_net_while_emptytensorlist_105"
      input: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_106"
      op: "TensorListPushBack"
      input: "tensorlistpushback_106_lstm_model_rnn_net_while_emptytensorlist_106"
      input: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd_3:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_107"
      op: "TensorListPushBack"
      input: "tensorlistpushback_107_lstm_model_rnn_net_while_emptytensorlist_107"
      input: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_108"
      op: "TensorListPushBack"
      input: "tensorlistpushback_108_lstm_model_rnn_net_while_emptytensorlist_108"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_109"
      op: "TensorListPushBack"
      input: "tensorlistpushback_109_lstm_model_rnn_net_while_emptytensorlist_109"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_110"
      op: "TensorListPushBack"
      input: "tensorlistpushback_110_lstm_model_rnn_net_while_emptytensorlist_110"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_111"
      op: "TensorListPushBack"
      input: "tensorlistpushback_111_lstm_model_rnn_net_while_emptytensorlist_111"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_112"
      op: "TensorListPushBack"
      input: "tensorlistpushback_112_lstm_model_rnn_net_while_emptytensorlist_112"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_4:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_113"
      op: "TensorListPushBack"
      input: "tensorlistpushback_113_lstm_model_rnn_net_while_emptytensorlist_113"
      input: "stacked_rnn_cells/LSTM_Layer_1/add:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_114"
      op: "TensorListPushBack"
      input: "tensorlistpushback_114_lstm_model_rnn_net_while_emptytensorlist_114"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_115"
      op: "TensorListPushBack"
      input: "tensorlistpushback_115_lstm_model_rnn_net_while_emptytensorlist_115"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_116"
      op: "TensorListPushBack"
      input: "tensorlistpushback_116_lstm_model_rnn_net_while_emptytensorlist_116"
      input: "stacked_rnn_cells/LSTM_Layer_1/Mul:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_117"
      op: "TensorListPushBack"
      input: "tensorlistpushback_117_lstm_model_rnn_net_while_emptytensorlist_117"
      input: "stacked_rnn_cells/LSTM_Layer_1/Add_1:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_118"
      op: "TensorListPushBack"
      input: "tensorlistpushback_118_lstm_model_rnn_net_while_emptytensorlist_118"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_119"
      op: "TensorListPushBack"
      input: "tensorlistpushback_119_lstm_model_rnn_net_while_emptytensorlist_119"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_120"
      op: "TensorListPushBack"
      input: "tensorlistpushback_120_lstm_model_rnn_net_while_emptytensorlist_120"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_121"
      op: "TensorListPushBack"
      input: "tensorlistpushback_121_lstm_model_rnn_net_while_emptytensorlist_121"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_122"
      op: "TensorListPushBack"
      input: "tensorlistpushback_122_lstm_model_rnn_net_while_emptytensorlist_122"
      input: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_1:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_123"
      op: "TensorListPushBack"
      input: "tensorlistpushback_123_lstm_model_rnn_net_while_emptytensorlist_123"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_124"
      op: "TensorListPushBack"
      input: "tensorlistpushback_124_lstm_model_rnn_net_while_emptytensorlist_124"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_125"
      op: "TensorListPushBack"
      input: "tensorlistpushback_125_lstm_model_rnn_net_while_emptytensorlist_125"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_126"
      op: "TensorListPushBack"
      input: "tensorlistpushback_126_lstm_model_rnn_net_while_emptytensorlist_126"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_127"
      op: "TensorListPushBack"
      input: "tensorlistpushback_127_lstm_model_rnn_net_while_emptytensorlist_127"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_5:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_128"
      op: "TensorListPushBack"
      input: "tensorlistpushback_128_lstm_model_rnn_net_while_emptytensorlist_128"
      input: "stacked_rnn_cells/LSTM_Layer_1/add_2:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_129"
      op: "TensorListPushBack"
      input: "tensorlistpushback_129_lstm_model_rnn_net_while_emptytensorlist_129"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_130"
      op: "TensorListPushBack"
      input: "tensorlistpushback_130_lstm_model_rnn_net_while_emptytensorlist_130"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_3:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_131"
      op: "TensorListPushBack"
      input: "tensorlistpushback_131_lstm_model_rnn_net_while_emptytensorlist_131"
      input: "stacked_rnn_cells/LSTM_Layer_1/Mul_1:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_132"
      op: "TensorListPushBack"
      input: "tensorlistpushback_132_lstm_model_rnn_net_while_emptytensorlist_132"
      input: "stacked_rnn_cells/LSTM_Layer_1/Add_3:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_133"
      op: "TensorListPushBack"
      input: "tensorlistpushback_133_lstm_model_rnn_net_while_emptytensorlist_133"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_134"
      op: "TensorListPushBack"
      input: "tensorlistpushback_134_lstm_model_rnn_net_while_emptytensorlist_134"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_135"
      op: "TensorListPushBack"
      input: "tensorlistpushback_135_lstm_model_rnn_net_while_emptytensorlist_135"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_136"
      op: "TensorListPushBack"
      input: "tensorlistpushback_136_lstm_model_rnn_net_while_emptytensorlist_136"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_137"
      op: "TensorListPushBack"
      input: "tensorlistpushback_137_lstm_model_rnn_net_while_emptytensorlist_137"
      input: "stacked_rnn_cells/LSTM_Layer_1/mul_2:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_138"
      op: "TensorListPushBack"
      input: "tensorlistpushback_138_lstm_model_rnn_net_while_emptytensorlist_138"
      input: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_2:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_139"
      op: "TensorListPushBack"
      input: "tensorlistpushback_139_lstm_model_rnn_net_while_emptytensorlist_139"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_140"
      op: "TensorListPushBack"
      input: "tensorlistpushback_140_lstm_model_rnn_net_while_emptytensorlist_140"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_141"
      op: "TensorListPushBack"
      input: "tensorlistpushback_141_lstm_model_rnn_net_while_emptytensorlist_141"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_142"
      op: "TensorListPushBack"
      input: "tensorlistpushback_142_lstm_model_rnn_net_while_emptytensorlist_142"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_143"
      op: "TensorListPushBack"
      input: "tensorlistpushback_143_lstm_model_rnn_net_while_emptytensorlist_143"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_6:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_144"
      op: "TensorListPushBack"
      input: "tensorlistpushback_144_lstm_model_rnn_net_while_emptytensorlist_144"
      input: "stacked_rnn_cells/LSTM_Layer_1/add_4:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_145"
      op: "TensorListPushBack"
      input: "tensorlistpushback_145_lstm_model_rnn_net_while_emptytensorlist_145"
      input: "stacked_rnn_cells/LSTM_Layer_1/Tanh:y:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_146"
      op: "TensorListPushBack"
      input: "tensorlistpushback_146_lstm_model_rnn_net_while_emptytensorlist_146"
      input: "stacked_rnn_cells/LSTM_Layer_1/mul_3:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_147"
      op: "TensorListPushBack"
      input: "tensorlistpushback_147_lstm_model_rnn_net_while_emptytensorlist_147"
      input: "stacked_rnn_cells/LSTM_Layer_1/add_5:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_148"
      op: "TensorListPushBack"
      input: "tensorlistpushback_148_lstm_model_rnn_net_while_emptytensorlist_148"
      input: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_3:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_149"
      op: "TensorListPushBack"
      input: "tensorlistpushback_149_lstm_model_rnn_net_while_emptytensorlist_149"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_150"
      op: "TensorListPushBack"
      input: "tensorlistpushback_150_lstm_model_rnn_net_while_emptytensorlist_150"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_151"
      op: "TensorListPushBack"
      input: "tensorlistpushback_151_lstm_model_rnn_net_while_emptytensorlist_151"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_152"
      op: "TensorListPushBack"
      input: "tensorlistpushback_152_lstm_model_rnn_net_while_emptytensorlist_152"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_153"
      op: "TensorListPushBack"
      input: "tensorlistpushback_153_lstm_model_rnn_net_while_emptytensorlist_153"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_7:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_154"
      op: "TensorListPushBack"
      input: "tensorlistpushback_154_lstm_model_rnn_net_while_emptytensorlist_154"
      input: "stacked_rnn_cells/LSTM_Layer_1/add_6:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_155"
      op: "TensorListPushBack"
      input: "tensorlistpushback_155_lstm_model_rnn_net_while_emptytensorlist_155"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_4:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_156"
      op: "TensorListPushBack"
      input: "tensorlistpushback_156_lstm_model_rnn_net_while_emptytensorlist_156"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_5:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_157"
      op: "TensorListPushBack"
      input: "tensorlistpushback_157_lstm_model_rnn_net_while_emptytensorlist_157"
      input: "stacked_rnn_cells/LSTM_Layer_1/Mul_4:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_158"
      op: "TensorListPushBack"
      input: "tensorlistpushback_158_lstm_model_rnn_net_while_emptytensorlist_158"
      input: "stacked_rnn_cells/LSTM_Layer_1/Add_7:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_159"
      op: "TensorListPushBack"
      input: "tensorlistpushback_159_lstm_model_rnn_net_while_emptytensorlist_159"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_160"
      op: "TensorListPushBack"
      input: "tensorlistpushback_160_lstm_model_rnn_net_while_emptytensorlist_160"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_161"
      op: "TensorListPushBack"
      input: "tensorlistpushback_161_lstm_model_rnn_net_while_emptytensorlist_161"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_162"
      op: "TensorListPushBack"
      input: "tensorlistpushback_162_lstm_model_rnn_net_while_emptytensorlist_162"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_163"
      op: "TensorListPushBack"
      input: "tensorlistpushback_163_lstm_model_rnn_net_while_emptytensorlist_163"
      input: "stacked_rnn_cells/LSTM_Layer_1/Tanh_1:y:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_164"
      op: "TensorListPushBack"
      input: "tensorlistpushback_164_lstm_model_rnn_net_while_emptytensorlist_164"
      input: "stacked_rnn_cells/LSTM_Layer_1/mul_5:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_165"
      op: "TensorListPushBack"
      input: "tensorlistpushback_165_lstm_model_rnn_net_while_emptytensorlist_165"
      input: "TensorArrayV2Write/TensorListSetItem/index:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_166"
      op: "TensorListPushBack"
      input: "tensorlistpushback_166_lstm_model_rnn_net_while_emptytensorlist_166"
      input: "TensorArrayV2Write/TensorListSetItem:output_handle:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_VARIANT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
        }
      }
    }
    node_def {
      name: "TensorListPushBack_167"
      op: "TensorListPushBack"
      input: "tensorlistpushback_167_lstm_model_rnn_net_while_emptytensorlist_167"
      input: "add/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_168"
      op: "TensorListPushBack"
      input: "tensorlistpushback_168_lstm_model_rnn_net_while_emptytensorlist_168"
      input: "add_0:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_169"
      op: "TensorListPushBack"
      input: "tensorlistpushback_169_lstm_model_rnn_net_while_emptytensorlist_169"
      input: "add_1/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_170"
      op: "TensorListPushBack"
      input: "tensorlistpushback_170_lstm_model_rnn_net_while_emptytensorlist_170"
      input: "add_1_0:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListLength"
      op: "TensorListLength"
      input: "tensorarrayv2read_tensorlistgetitem_lstm_model_rnn_net_tensorarrayunstack_tensorlistfromtensor_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListElementShape"
      op: "TensorListElementShape"
      input: "tensorarrayv2read_tensorlistgetitem_lstm_model_rnn_net_tensorarrayunstack_tensorlistfromtensor_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "shape_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "TensorListPushBack_171"
      op: "TensorListPushBack"
      input: "tensorlistpushback_171_gradients_lstm_model_rnn_net_while_grad_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistelementshape_0_accumulator"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListElementShape:element_shape:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_172"
      op: "TensorListPushBack"
      input: "tensorlistpushback_172_gradients_lstm_model_rnn_net_while_grad_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistlength_0_accumulator"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListLength:length:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    ret {
      key: "add"
      value: "add_0:z:0"
    }
    ret {
      key: "add_1"
      value: "add_1_0:z:0"
    }
    ret {
      key: "lstm_model_rnn_net_strided_slice_1"
      value: "lstm_model_rnn_net_strided_slice_1_0"
    }
    ret {
      key: "lstm_model_rnn_net_while_maximum_iterations"
      value: "lstm_model_rnn_net_while_maximum_iterations_0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_0_add_5"
      value: "stacked_rnn_cells/LSTM_Layer_0/add_5:z:0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_0_mul_5"
      value: "stacked_rnn_cells/LSTM_Layer_0/mul_5:z:0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_0_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_recurrent_kernel"
      value: "stacked_rnn_cells_lstm_layer_0_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_recurrent_kernel_0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_0_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_bias"
      value: "stacked_rnn_cells_lstm_layer_0_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_bias_0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_0_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_kernel"
      value: "stacked_rnn_cells_lstm_layer_0_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_kernel_0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_1_add_5"
      value: "stacked_rnn_cells/LSTM_Layer_1/add_5:z:0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_1_mul_5"
      value: "stacked_rnn_cells/LSTM_Layer_1/mul_5:z:0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_recurrent_kernel"
      value: "stacked_rnn_cells_lstm_layer_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_recurrent_kernel_0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_1_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_bias"
      value: "stacked_rnn_cells_lstm_layer_1_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_bias_0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_1_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_kernel"
      value: "stacked_rnn_cells_lstm_layer_1_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_kernel_0"
    }
    ret {
      key: "tensorarrayv2read_tensorlistgetitem_lstm_model_rnn_net_tensorarrayunstack_tensorlistfromtensor"
      value: "tensorarrayv2read_tensorlistgetitem_lstm_model_rnn_net_tensorarrayunstack_tensorlistfromtensor_0"
    }
    ret {
      key: "tensorarrayv2write_tensorlistsetitem"
      value: "TensorArrayV2Write/TensorListSetItem:output_handle:0"
    }
    ret {
      key: "tensorlistpushback"
      value: "TensorListPushBack:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_1"
      value: "TensorListPushBack_1:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_10"
      value: "TensorListPushBack_10:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_100"
      value: "TensorListPushBack_100:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_101"
      value: "TensorListPushBack_101:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_102"
      value: "TensorListPushBack_102:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_103"
      value: "TensorListPushBack_103:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_104"
      value: "TensorListPushBack_104:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_105"
      value: "TensorListPushBack_105:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_106"
      value: "TensorListPushBack_106:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_107"
      value: "TensorListPushBack_107:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_108"
      value: "TensorListPushBack_108:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_109"
      value: "TensorListPushBack_109:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_11"
      value: "TensorListPushBack_11:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_110"
      value: "TensorListPushBack_110:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_111"
      value: "TensorListPushBack_111:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_112"
      value: "TensorListPushBack_112:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_113"
      value: "TensorListPushBack_113:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_114"
      value: "TensorListPushBack_114:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_115"
      value: "TensorListPushBack_115:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_116"
      value: "TensorListPushBack_116:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_117"
      value: "TensorListPushBack_117:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_118"
      value: "TensorListPushBack_118:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_119"
      value: "TensorListPushBack_119:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_12"
      value: "TensorListPushBack_12:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_120"
      value: "TensorListPushBack_120:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_121"
      value: "TensorListPushBack_121:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_122"
      value: "TensorListPushBack_122:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_123"
      value: "TensorListPushBack_123:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_124"
      value: "TensorListPushBack_124:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_125"
      value: "TensorListPushBack_125:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_126"
      value: "TensorListPushBack_126:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_127"
      value: "TensorListPushBack_127:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_128"
      value: "TensorListPushBack_128:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_129"
      value: "TensorListPushBack_129:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_13"
      value: "TensorListPushBack_13:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_130"
      value: "TensorListPushBack_130:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_131"
      value: "TensorListPushBack_131:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_132"
      value: "TensorListPushBack_132:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_133"
      value: "TensorListPushBack_133:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_134"
      value: "TensorListPushBack_134:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_135"
      value: "TensorListPushBack_135:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_136"
      value: "TensorListPushBack_136:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_137"
      value: "TensorListPushBack_137:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_138"
      value: "TensorListPushBack_138:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_139"
      value: "TensorListPushBack_139:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_14"
      value: "TensorListPushBack_14:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_140"
      value: "TensorListPushBack_140:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_141"
      value: "TensorListPushBack_141:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_142"
      value: "TensorListPushBack_142:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_143"
      value: "TensorListPushBack_143:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_144"
      value: "TensorListPushBack_144:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_145"
      value: "TensorListPushBack_145:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_146"
      value: "TensorListPushBack_146:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_147"
      value: "TensorListPushBack_147:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_148"
      value: "TensorListPushBack_148:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_149"
      value: "TensorListPushBack_149:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_15"
      value: "TensorListPushBack_15:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_150"
      value: "TensorListPushBack_150:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_151"
      value: "TensorListPushBack_151:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_152"
      value: "TensorListPushBack_152:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_153"
      value: "TensorListPushBack_153:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_154"
      value: "TensorListPushBack_154:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_155"
      value: "TensorListPushBack_155:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_156"
      value: "TensorListPushBack_156:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_157"
      value: "TensorListPushBack_157:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_158"
      value: "TensorListPushBack_158:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_159"
      value: "TensorListPushBack_159:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_16"
      value: "TensorListPushBack_16:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_160"
      value: "TensorListPushBack_160:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_161"
      value: "TensorListPushBack_161:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_162"
      value: "TensorListPushBack_162:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_163"
      value: "TensorListPushBack_163:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_164"
      value: "TensorListPushBack_164:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_165"
      value: "TensorListPushBack_165:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_166"
      value: "TensorListPushBack_166:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_167"
      value: "TensorListPushBack_167:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_168"
      value: "TensorListPushBack_168:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_169"
      value: "TensorListPushBack_169:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_17"
      value: "TensorListPushBack_17:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_170"
      value: "TensorListPushBack_170:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_171"
      value: "TensorListPushBack_171:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_172"
      value: "TensorListPushBack_172:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_18"
      value: "TensorListPushBack_18:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_19"
      value: "TensorListPushBack_19:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_2"
      value: "TensorListPushBack_2:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_20"
      value: "TensorListPushBack_20:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_21"
      value: "TensorListPushBack_21:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_22"
      value: "TensorListPushBack_22:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_23"
      value: "TensorListPushBack_23:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_24"
      value: "TensorListPushBack_24:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_25"
      value: "TensorListPushBack_25:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_26"
      value: "TensorListPushBack_26:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_27"
      value: "TensorListPushBack_27:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_28"
      value: "TensorListPushBack_28:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_29"
      value: "TensorListPushBack_29:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_3"
      value: "TensorListPushBack_3:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_30"
      value: "TensorListPushBack_30:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_31"
      value: "TensorListPushBack_31:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_32"
      value: "TensorListPushBack_32:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_33"
      value: "TensorListPushBack_33:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_34"
      value: "TensorListPushBack_34:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_35"
      value: "TensorListPushBack_35:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_36"
      value: "TensorListPushBack_36:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_37"
      value: "TensorListPushBack_37:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_38"
      value: "TensorListPushBack_38:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_39"
      value: "TensorListPushBack_39:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_4"
      value: "TensorListPushBack_4:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_40"
      value: "TensorListPushBack_40:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_41"
      value: "TensorListPushBack_41:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_42"
      value: "TensorListPushBack_42:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_43"
      value: "TensorListPushBack_43:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_44"
      value: "TensorListPushBack_44:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_45"
      value: "TensorListPushBack_45:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_46"
      value: "TensorListPushBack_46:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_47"
      value: "TensorListPushBack_47:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_48"
      value: "TensorListPushBack_48:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_49"
      value: "TensorListPushBack_49:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_5"
      value: "TensorListPushBack_5:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_50"
      value: "TensorListPushBack_50:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_51"
      value: "TensorListPushBack_51:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_52"
      value: "TensorListPushBack_52:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_53"
      value: "TensorListPushBack_53:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_54"
      value: "TensorListPushBack_54:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_55"
      value: "TensorListPushBack_55:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_56"
      value: "TensorListPushBack_56:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_57"
      value: "TensorListPushBack_57:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_58"
      value: "TensorListPushBack_58:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_59"
      value: "TensorListPushBack_59:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_6"
      value: "TensorListPushBack_6:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_60"
      value: "TensorListPushBack_60:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_61"
      value: "TensorListPushBack_61:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_62"
      value: "TensorListPushBack_62:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_63"
      value: "TensorListPushBack_63:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_64"
      value: "TensorListPushBack_64:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_65"
      value: "TensorListPushBack_65:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_66"
      value: "TensorListPushBack_66:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_67"
      value: "TensorListPushBack_67:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_68"
      value: "TensorListPushBack_68:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_69"
      value: "TensorListPushBack_69:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_7"
      value: "TensorListPushBack_7:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_70"
      value: "TensorListPushBack_70:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_71"
      value: "TensorListPushBack_71:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_72"
      value: "TensorListPushBack_72:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_73"
      value: "TensorListPushBack_73:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_74"
      value: "TensorListPushBack_74:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_75"
      value: "TensorListPushBack_75:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_76"
      value: "TensorListPushBack_76:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_77"
      value: "TensorListPushBack_77:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_78"
      value: "TensorListPushBack_78:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_79"
      value: "TensorListPushBack_79:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_8"
      value: "TensorListPushBack_8:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_80"
      value: "TensorListPushBack_80:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_81"
      value: "TensorListPushBack_81:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_82"
      value: "TensorListPushBack_82:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_83"
      value: "TensorListPushBack_83:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_84"
      value: "TensorListPushBack_84:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_85"
      value: "TensorListPushBack_85:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_86"
      value: "TensorListPushBack_86:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_87"
      value: "TensorListPushBack_87:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_88"
      value: "TensorListPushBack_88:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_89"
      value: "TensorListPushBack_89:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_9"
      value: "TensorListPushBack_9:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_90"
      value: "TensorListPushBack_90:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_91"
      value: "TensorListPushBack_91:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_92"
      value: "TensorListPushBack_92:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_93"
      value: "TensorListPushBack_93:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_94"
      value: "TensorListPushBack_94:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_95"
      value: "TensorListPushBack_95:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_96"
      value: "TensorListPushBack_96:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_97"
      value: "TensorListPushBack_97:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_98"
      value: "TensorListPushBack_98:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_99"
      value: "TensorListPushBack_99:output_handle:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 17
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 18
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 19
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 20
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 21
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 22
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 23
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 24
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 25
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 26
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 27
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 28
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 29
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 30
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 31
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 32
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 33
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 34
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 35
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 36
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 37
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 38
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 39
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 40
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 41
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 42
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 43
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 44
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 45
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 46
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 47
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 48
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 49
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 50
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 51
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 52
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 53
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 54
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 55
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 56
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 57
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 58
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 59
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 60
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 61
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 62
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 63
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 64
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 65
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 66
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 67
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 68
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 69
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 70
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 71
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 72
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 73
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 74
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 75
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 76
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 77
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 78
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 79
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 80
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 81
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 82
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 83
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 84
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 85
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 86
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 87
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 88
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 89
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 90
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 91
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 92
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 93
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 94
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 95
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 96
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 97
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 98
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 99
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 100
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 101
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 102
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 103
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 104
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 105
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 106
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 107
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 108
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 109
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 110
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 111
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 112
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 113
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 114
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 115
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 116
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 117
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 118
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 119
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 120
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 121
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 122
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 123
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 124
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 125
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 126
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 127
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 128
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 129
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 130
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 131
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 132
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 133
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 134
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 135
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 136
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 137
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 138
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 139
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 140
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 141
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 142
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 143
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 144
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 145
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 146
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 147
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 148
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 149
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 150
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 151
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 152
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 153
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 154
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 155
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 156
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 157
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 158
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 159
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 160
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 161
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 162
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 163
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 164
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 165
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 166
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 167
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 168
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 169
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 170
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 171
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 172
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 173
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 174
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 175
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 176
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 177
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 178
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 179
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 180
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 181
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 182
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 183
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 184
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 185
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 186
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 187
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 188
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference_Dataset_from_generator_get_iterator_id_fn_32"
      input_arg {
        name: "args_0"
        type: DT_INT32
      }
      input_arg {
        name: "pyfunc_args_0"
        type: DT_STRING
      }
      input_arg {
        name: "pyfunc_args_1"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_INT64
      }
      is_stateful: true
      control_output: "PyFunc"
    }
    node_def {
      name: "PyFunc"
      op: "PyFunc"
      input: "pyfunc_args_0"
      input: "pyfunc_args_1"
      attr {
        key: "Tin"
        value {
          list {
            type: DT_STRING
            type: DT_STRING
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "token"
        value {
          s: "pyfunc_0"
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "PyFunc:output:0"
      input: "^NoOp"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node_def {
      name: "NoOp"
      op: "NoOp"
      input: "^PyFunc"
      attr {
        key: "_acd_function_control_output"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
            dim {
              size: 2
            }
          }
          shape {
          }
        }
      }
    }
    attr {
      key: "_tf_data_function"
      value {
        b: true
      }
    }
    control_ret {
      key: "PyFunc"
      value: "PyFunc"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference_Dataset_from_generator_finalize_fn_44"
      input_arg {
        name: "args_0"
        type: DT_INT64
      }
      output_arg {
        name: "identity"
        type: DT_INT64
      }
      is_stateful: true
      control_output: "PyFunc"
    }
    node_def {
      name: "PyFunc"
      op: "PyFunc"
      input: "args_0"
      attr {
        key: "Tin"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "token"
        value {
          s: "pyfunc_2"
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "PyFunc:output:0"
      input: "^NoOp"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node_def {
      name: "NoOp"
      op: "NoOp"
      input: "^PyFunc"
      attr {
        key: "_acd_function_control_output"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "_tf_data_function"
      value {
        b: true
      }
    }
    control_ret {
      key: "PyFunc"
      value: "PyFunc"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "global_step_cond_false_7"
      input_arg {
        name: "placeholder"
        type: DT_RESOURCE
      }
      input_arg {
        name: "global_step_initializer_zeros_0"
        type: DT_INT64
      }
      output_arg {
        name: "global_step_initializer_zeros"
        type: DT_INT64
      }
    }
    ret {
      key: "global_step_initializer_zeros"
      value: "global_step_initializer_zeros_0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "RNN_net_while_body_336"
      input_arg {
        name: "rnn_net_while_loop_counter"
        type: DT_INT32
      }
      input_arg {
        name: "rnn_net_while_maximum_iterations_0"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_2"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_3"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_4"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_5"
        type: DT_FLOAT
      }
      input_arg {
        name: "rnn_net_strided_slice_1_0"
        type: DT_INT32
      }
      input_arg {
        name: "tensorarrayv2read_tensorlistgetitem_rnn_net_tensorarrayunstack_tensorlistfromtensor_0"
        type: DT_VARIANT
      }
      input_arg {
        name: "stacked_rnn_cells_lstm_layer_0_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_kernel_0"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 13
            }
            dim {
              size: 128
            }
          }
        }
      }
      input_arg {
        name: "stacked_rnn_cells_lstm_layer_0_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_bias_0"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      input_arg {
        name: "stacked_rnn_cells_lstm_layer_0_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_recurrent_kernel_0"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 32
            }
            dim {
              size: 128
            }
          }
        }
      }
      input_arg {
        name: "stacked_rnn_cells_lstm_layer_1_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_kernel_0"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 32
            }
            dim {
              size: 128
            }
          }
        }
      }
      input_arg {
        name: "stacked_rnn_cells_lstm_layer_1_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_bias_0"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      input_arg {
        name: "stacked_rnn_cells_lstm_layer_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_recurrent_kernel_0"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 32
            }
            dim {
              size: 128
            }
          }
        }
      }
      input_arg {
        name: "tensorlistpushback_rnn_net_while_emptytensorlist"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_1_rnn_net_while_emptytensorlist_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_2_rnn_net_while_emptytensorlist_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_3_rnn_net_while_emptytensorlist_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_4_rnn_net_while_emptytensorlist_4"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_5_rnn_net_while_emptytensorlist_5"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_6_rnn_net_while_emptytensorlist_6"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_7_rnn_net_while_emptytensorlist_7"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_8_rnn_net_while_emptytensorlist_8"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_9_rnn_net_while_emptytensorlist_9"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_10_rnn_net_while_emptytensorlist_10"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_11_rnn_net_while_emptytensorlist_11"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_12_rnn_net_while_emptytensorlist_12"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_13_rnn_net_while_emptytensorlist_13"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_14_rnn_net_while_emptytensorlist_14"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_15_rnn_net_while_emptytensorlist_15"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_16_rnn_net_while_emptytensorlist_16"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_17_rnn_net_while_emptytensorlist_17"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_18_rnn_net_while_emptytensorlist_18"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_19_rnn_net_while_emptytensorlist_19"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_20_rnn_net_while_emptytensorlist_20"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_21_rnn_net_while_emptytensorlist_21"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_22_rnn_net_while_emptytensorlist_22"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_23_rnn_net_while_emptytensorlist_23"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_24_rnn_net_while_emptytensorlist_24"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_25_rnn_net_while_emptytensorlist_25"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_26_rnn_net_while_emptytensorlist_26"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_27_rnn_net_while_emptytensorlist_27"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_28_rnn_net_while_emptytensorlist_28"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_29_rnn_net_while_emptytensorlist_29"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_30_rnn_net_while_emptytensorlist_30"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_31_rnn_net_while_emptytensorlist_31"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_32_rnn_net_while_emptytensorlist_32"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_33_rnn_net_while_emptytensorlist_33"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_34_rnn_net_while_emptytensorlist_34"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_35_rnn_net_while_emptytensorlist_35"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_36_rnn_net_while_emptytensorlist_36"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_37_rnn_net_while_emptytensorlist_37"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_38_rnn_net_while_emptytensorlist_38"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_39_rnn_net_while_emptytensorlist_39"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_40_rnn_net_while_emptytensorlist_40"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_41_rnn_net_while_emptytensorlist_41"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_42_rnn_net_while_emptytensorlist_42"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_43_rnn_net_while_emptytensorlist_43"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_44_rnn_net_while_emptytensorlist_44"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_45_rnn_net_while_emptytensorlist_45"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_46_rnn_net_while_emptytensorlist_46"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_47_rnn_net_while_emptytensorlist_47"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_48_rnn_net_while_emptytensorlist_48"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_49_rnn_net_while_emptytensorlist_49"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_50_rnn_net_while_emptytensorlist_50"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_51_rnn_net_while_emptytensorlist_51"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_52_rnn_net_while_emptytensorlist_52"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_53_rnn_net_while_emptytensorlist_53"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_54_rnn_net_while_emptytensorlist_54"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_55_rnn_net_while_emptytensorlist_55"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_56_rnn_net_while_emptytensorlist_56"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_57_rnn_net_while_emptytensorlist_57"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_58_rnn_net_while_emptytensorlist_58"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_59_rnn_net_while_emptytensorlist_59"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_60_rnn_net_while_emptytensorlist_60"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_61_rnn_net_while_emptytensorlist_61"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_62_rnn_net_while_emptytensorlist_62"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_63_rnn_net_while_emptytensorlist_63"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_64_rnn_net_while_emptytensorlist_64"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_65_rnn_net_while_emptytensorlist_65"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_66_rnn_net_while_emptytensorlist_66"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_67_rnn_net_while_emptytensorlist_67"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_68_rnn_net_while_emptytensorlist_68"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_69_rnn_net_while_emptytensorlist_69"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_70_rnn_net_while_emptytensorlist_70"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_71_rnn_net_while_emptytensorlist_71"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_72_rnn_net_while_emptytensorlist_72"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_73_rnn_net_while_emptytensorlist_73"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_74_rnn_net_while_emptytensorlist_74"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_75_rnn_net_while_emptytensorlist_75"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_76_rnn_net_while_emptytensorlist_76"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_77_rnn_net_while_emptytensorlist_77"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_78_rnn_net_while_emptytensorlist_78"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_79_rnn_net_while_emptytensorlist_79"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_80_rnn_net_while_emptytensorlist_80"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_81_rnn_net_while_emptytensorlist_81"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_82_rnn_net_while_emptytensorlist_82"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_83_rnn_net_while_emptytensorlist_83"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_84_rnn_net_while_emptytensorlist_84"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_85_rnn_net_while_emptytensorlist_85"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_86_rnn_net_while_emptytensorlist_86"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_87_rnn_net_while_emptytensorlist_87"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_88_rnn_net_while_emptytensorlist_88"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_89_rnn_net_while_emptytensorlist_89"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_90_rnn_net_while_emptytensorlist_90"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_91_rnn_net_while_emptytensorlist_91"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_92_rnn_net_while_emptytensorlist_92"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_93_rnn_net_while_emptytensorlist_93"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_94_rnn_net_while_emptytensorlist_94"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_95_rnn_net_while_emptytensorlist_95"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_96_rnn_net_while_emptytensorlist_96"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_97_rnn_net_while_emptytensorlist_97"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_98_rnn_net_while_emptytensorlist_98"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_99_rnn_net_while_emptytensorlist_99"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_100_rnn_net_while_emptytensorlist_100"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_101_rnn_net_while_emptytensorlist_101"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_102_rnn_net_while_emptytensorlist_102"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_103_rnn_net_while_emptytensorlist_103"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_104_rnn_net_while_emptytensorlist_104"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_105_rnn_net_while_emptytensorlist_105"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_106_rnn_net_while_emptytensorlist_106"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_107_rnn_net_while_emptytensorlist_107"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_108_rnn_net_while_emptytensorlist_108"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_109_rnn_net_while_emptytensorlist_109"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_110_rnn_net_while_emptytensorlist_110"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_111_rnn_net_while_emptytensorlist_111"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_112_rnn_net_while_emptytensorlist_112"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_113_rnn_net_while_emptytensorlist_113"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_114_rnn_net_while_emptytensorlist_114"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_115_rnn_net_while_emptytensorlist_115"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_116_rnn_net_while_emptytensorlist_116"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_117_rnn_net_while_emptytensorlist_117"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_118_rnn_net_while_emptytensorlist_118"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_119_rnn_net_while_emptytensorlist_119"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_120_rnn_net_while_emptytensorlist_120"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_121_rnn_net_while_emptytensorlist_121"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_122_rnn_net_while_emptytensorlist_122"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_123_rnn_net_while_emptytensorlist_123"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_124_rnn_net_while_emptytensorlist_124"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_125_rnn_net_while_emptytensorlist_125"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_126_rnn_net_while_emptytensorlist_126"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_127_rnn_net_while_emptytensorlist_127"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_128_rnn_net_while_emptytensorlist_128"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_129_rnn_net_while_emptytensorlist_129"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_130_rnn_net_while_emptytensorlist_130"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_131_rnn_net_while_emptytensorlist_131"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_132_rnn_net_while_emptytensorlist_132"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_133_rnn_net_while_emptytensorlist_133"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_134_rnn_net_while_emptytensorlist_134"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_135_rnn_net_while_emptytensorlist_135"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_136_rnn_net_while_emptytensorlist_136"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_137_rnn_net_while_emptytensorlist_137"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_138_rnn_net_while_emptytensorlist_138"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_139_rnn_net_while_emptytensorlist_139"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_140_rnn_net_while_emptytensorlist_140"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_141_rnn_net_while_emptytensorlist_141"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_142_rnn_net_while_emptytensorlist_142"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_143_rnn_net_while_emptytensorlist_143"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_144_rnn_net_while_emptytensorlist_144"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_145_rnn_net_while_emptytensorlist_145"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_146_rnn_net_while_emptytensorlist_146"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_147_rnn_net_while_emptytensorlist_147"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_148_rnn_net_while_emptytensorlist_148"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_149_rnn_net_while_emptytensorlist_149"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_150_rnn_net_while_emptytensorlist_150"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_151_rnn_net_while_emptytensorlist_151"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_152_rnn_net_while_emptytensorlist_152"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_153_rnn_net_while_emptytensorlist_153"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_154_rnn_net_while_emptytensorlist_154"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_155_rnn_net_while_emptytensorlist_155"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_156_rnn_net_while_emptytensorlist_156"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_157_rnn_net_while_emptytensorlist_157"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_158_rnn_net_while_emptytensorlist_158"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_159_rnn_net_while_emptytensorlist_159"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_160_rnn_net_while_emptytensorlist_160"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_161_rnn_net_while_emptytensorlist_161"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_162_rnn_net_while_emptytensorlist_162"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_163_rnn_net_while_emptytensorlist_163"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_164_rnn_net_while_emptytensorlist_164"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_165_rnn_net_while_emptytensorlist_165"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_166_rnn_net_while_emptytensorlist_166"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_167_rnn_net_while_emptytensorlist_167"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_168_rnn_net_while_emptytensorlist_168"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_169_rnn_net_while_emptytensorlist_169"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_170_rnn_net_while_emptytensorlist_170"
        type: DT_VARIANT
      }
      output_arg {
        name: "add_1"
        type: DT_INT32
      }
      output_arg {
        name: "rnn_net_while_maximum_iterations"
        type: DT_INT32
      }
      output_arg {
        name: "add"
        type: DT_INT32
      }
      output_arg {
        name: "tensorarrayv2write_tensorlistsetitem"
        type: DT_VARIANT
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_0_mul_5"
        type: DT_FLOAT
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_0_add_5"
        type: DT_FLOAT
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_1_mul_5"
        type: DT_FLOAT
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_1_add_5"
        type: DT_FLOAT
      }
      output_arg {
        name: "rnn_net_strided_slice_1"
        type: DT_INT32
      }
      output_arg {
        name: "tensorarrayv2read_tensorlistgetitem_rnn_net_tensorarrayunstack_tensorlistfromtensor"
        type: DT_VARIANT
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_0_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_kernel"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 13
            }
            dim {
              size: 128
            }
          }
        }
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_0_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_bias"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_0_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_recurrent_kernel"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 32
            }
            dim {
              size: 128
            }
          }
        }
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_1_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_kernel"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 32
            }
            dim {
              size: 128
            }
          }
        }
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_1_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_bias"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_recurrent_kernel"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 32
            }
            dim {
              size: 128
            }
          }
        }
      }
      output_arg {
        name: "tensorlistpushback"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_6"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_7"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_8"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_9"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_10"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_11"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_12"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_13"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_14"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_15"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_16"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_17"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_18"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_19"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_20"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_21"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_22"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_23"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_24"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_25"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_26"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_27"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_28"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_29"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_30"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_31"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_32"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_33"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_34"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_35"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_36"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_37"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_38"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_39"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_40"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_41"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_42"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_43"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_44"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_45"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_46"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_47"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_48"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_49"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_50"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_51"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_52"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_53"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_54"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_55"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_56"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_57"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_58"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_59"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_60"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_61"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_62"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_63"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_64"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_65"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_66"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_67"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_68"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_69"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_70"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_71"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_72"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_73"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_74"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_75"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_76"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_77"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_78"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_79"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_80"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_81"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_82"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_83"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_84"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_85"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_86"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_87"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_88"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_89"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_90"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_91"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_92"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_93"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_94"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_95"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_96"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_97"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_98"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_99"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_100"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_101"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_102"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_103"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_104"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_105"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_106"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_107"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_108"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_109"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_110"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_111"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_112"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_113"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_114"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_115"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_116"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_117"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_118"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_119"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_120"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_121"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_122"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_123"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_124"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_125"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_126"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_127"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_128"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_129"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_130"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_131"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_132"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_133"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_134"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_135"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_136"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_137"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_138"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_139"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_140"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_141"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_142"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_143"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_144"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_145"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_146"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_147"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_148"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_149"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_150"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_151"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_152"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_153"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_154"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_155"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_156"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_157"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_158"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_159"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_160"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_161"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_162"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_163"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_164"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_165"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_166"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_167"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_168"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_169"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_170"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "TensorArrayV2Read/TensorListGetItem/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\377\377\377\377\r\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "TensorArrayV2Read/TensorListGetItem"
      op: "TensorListGetItem"
      input: "tensorarrayv2read_tensorlistgetitem_rnn_net_tensorarrayunstack_tensorlistfromtensor_0"
      input: "placeholder"
      input: "TensorArrayV2Read/TensorListGetItem/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 13
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/split/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/split/ReadVariableOp"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_0_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 13
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/split"
      op: "Split"
      input: "stacked_rnn_cells/LSTM_Layer_0/split/split_dim:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 13
              }
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 13
              }
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 13
              }
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 13
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 4
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/MatMul"
      op: "MatMul"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/MatMul_1"
      op: "MatMul"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split:output:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/MatMul_2"
      op: "MatMul"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split:output:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/MatMul_3"
      op: "MatMul"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split:output:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/split_1/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/split_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_0_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_bias_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/split_1"
      op: "Split"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1/split_dim:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 4
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd"
      op: "BiasAdd"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul:product:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd_1"
      op: "BiasAdd"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_1:product:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1:output:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd_2"
      op: "BiasAdd"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_2:product:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1:output:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd_3"
      op: "BiasAdd"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_3:product:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1:output:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_0_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_recurrent_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000 \000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice"
      op: "StridedSlice"
      input: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp:value:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 3
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/MatMul_4"
      op: "MatMul"
      input: "placeholder_2"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/add"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_4:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Mul"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_0/add:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Add_1"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_0/Mul:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum"
      op: "Minimum"
      input: "stacked_rnn_cells/LSTM_Layer_0/Add_1:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value"
      op: "Maximum"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_0_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_recurrent_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000 \000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000@\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1"
      op: "StridedSlice"
      input: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_1:value:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/MatMul_5"
      op: "MatMul"
      input: "placeholder_2"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/add_2"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_5:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Mul_1"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_0/add_2:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Add_3"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_0/Mul_1:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum"
      op: "Minimum"
      input: "stacked_rnn_cells/LSTM_Layer_0/Add_3:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1"
      op: "Maximum"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/mul_2"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1:z:0"
      input: "placeholder_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_2"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_0_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_recurrent_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000@\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000`\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2"
      op: "StridedSlice"
      input: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_2:value:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/MatMul_6"
      op: "MatMul"
      input: "placeholder_2"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/add_4"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd_2:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_6:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Tanh"
      op: "Tanh"
      input: "stacked_rnn_cells/LSTM_Layer_0/add_4:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/mul_3"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/Tanh:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/add_5"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_0/mul_2:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/mul_3:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_3"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_0_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_recurrent_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000`\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3"
      op: "StridedSlice"
      input: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_3:value:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 3
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/MatMul_7"
      op: "MatMul"
      input: "placeholder_2"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/add_6"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd_3:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_7:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Const_4"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Const_5"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Mul_4"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_0/add_6:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_4:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Add_7"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_0/Mul_4:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_5:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum"
      op: "Minimum"
      input: "stacked_rnn_cells/LSTM_Layer_0/Add_7:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2"
      op: "Maximum"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Tanh_1"
      op: "Tanh"
      input: "stacked_rnn_cells/LSTM_Layer_0/add_5:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/mul_5"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/Tanh_1:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/split/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/split/ReadVariableOp"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_1_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/split"
      op: "Split"
      input: "stacked_rnn_cells/LSTM_Layer_1/split/split_dim:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 4
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/MatMul"
      op: "MatMul"
      input: "stacked_rnn_cells/LSTM_Layer_0/mul_5:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/MatMul_1"
      op: "MatMul"
      input: "stacked_rnn_cells/LSTM_Layer_0/mul_5:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split:output:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/MatMul_2"
      op: "MatMul"
      input: "stacked_rnn_cells/LSTM_Layer_0/mul_5:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split:output:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/MatMul_3"
      op: "MatMul"
      input: "stacked_rnn_cells/LSTM_Layer_0/mul_5:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split:output:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/split_1/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/split_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_1_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_bias_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/split_1"
      op: "Split"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1/split_dim:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 4
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd"
      op: "BiasAdd"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul:product:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd_1"
      op: "BiasAdd"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_1:product:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1:output:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd_2"
      op: "BiasAdd"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_2:product:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1:output:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd_3"
      op: "BiasAdd"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_3:product:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1:output:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_recurrent_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000 \000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice"
      op: "StridedSlice"
      input: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp:value:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 3
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/MatMul_4"
      op: "MatMul"
      input: "placeholder_4"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/add"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_4:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Mul"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_1/add:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Add_1"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_1/Mul:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum"
      op: "Minimum"
      input: "stacked_rnn_cells/LSTM_Layer_1/Add_1:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value"
      op: "Maximum"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_recurrent_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000 \000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000@\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1"
      op: "StridedSlice"
      input: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_1:value:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/MatMul_5"
      op: "MatMul"
      input: "placeholder_4"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/add_2"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_5:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Mul_1"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_1/add_2:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Add_3"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_1/Mul_1:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum"
      op: "Minimum"
      input: "stacked_rnn_cells/LSTM_Layer_1/Add_3:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1"
      op: "Maximum"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/mul_2"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1:z:0"
      input: "placeholder_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_2"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_recurrent_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000@\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000`\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2"
      op: "StridedSlice"
      input: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_2:value:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/MatMul_6"
      op: "MatMul"
      input: "placeholder_4"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/add_4"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd_2:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_6:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Tanh"
      op: "Tanh"
      input: "stacked_rnn_cells/LSTM_Layer_1/add_4:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/mul_3"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/Tanh:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/add_5"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_1/mul_2:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/mul_3:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_3"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_recurrent_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000`\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3"
      op: "StridedSlice"
      input: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_3:value:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 3
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/MatMul_7"
      op: "MatMul"
      input: "placeholder_4"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/add_6"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd_3:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_7:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Const_4"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Const_5"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Mul_4"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_1/add_6:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_4:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Add_7"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_1/Mul_4:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_5:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum"
      op: "Minimum"
      input: "stacked_rnn_cells/LSTM_Layer_1/Add_7:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2"
      op: "Maximum"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Tanh_1"
      op: "Tanh"
      input: "stacked_rnn_cells/LSTM_Layer_1/add_5:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/mul_5"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/Tanh_1:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "TensorArrayV2Write/TensorListSetItem/index"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "TensorArrayV2Write/TensorListSetItem"
      op: "TensorListSetItem"
      input: "placeholder_1"
      input: "TensorArrayV2Write/TensorListSetItem/index:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/mul_5:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "add/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add_0"
      op: "AddV2"
      input: "placeholder"
      input: "add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "add_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add_1_0"
      op: "AddV2"
      input: "rnn_net_while_loop_counter"
      input: "add_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "TensorListPushBack"
      op: "TensorListPushBack"
      input: "tensorlistpushback_rnn_net_while_emptytensorlist"
      input: "rnn_net_while_maximum_iterations_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_1"
      op: "TensorListPushBack"
      input: "tensorlistpushback_1_rnn_net_while_emptytensorlist_1"
      input: "placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_2"
      op: "TensorListPushBack"
      input: "tensorlistpushback_2_rnn_net_while_emptytensorlist_2"
      input: "placeholder_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_VARIANT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
        }
      }
    }
    node_def {
      name: "TensorListPushBack_3"
      op: "TensorListPushBack"
      input: "tensorlistpushback_3_rnn_net_while_emptytensorlist_3"
      input: "placeholder_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_4"
      op: "TensorListPushBack"
      input: "tensorlistpushback_4_rnn_net_while_emptytensorlist_4"
      input: "placeholder_3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_5"
      op: "TensorListPushBack"
      input: "tensorlistpushback_5_rnn_net_while_emptytensorlist_5"
      input: "placeholder_4"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_6"
      op: "TensorListPushBack"
      input: "tensorlistpushback_6_rnn_net_while_emptytensorlist_6"
      input: "placeholder_5"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_7"
      op: "TensorListPushBack"
      input: "tensorlistpushback_7_rnn_net_while_emptytensorlist_7"
      input: "TensorArrayV2Read/TensorListGetItem/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_8"
      op: "TensorListPushBack"
      input: "tensorlistpushback_8_rnn_net_while_emptytensorlist_8"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_9"
      op: "TensorListPushBack"
      input: "tensorlistpushback_9_rnn_net_while_emptytensorlist_9"
      input: "stacked_rnn_cells/LSTM_Layer_0/split/split_dim:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_10"
      op: "TensorListPushBack"
      input: "tensorlistpushback_10_rnn_net_while_emptytensorlist_10"
      input: "stacked_rnn_cells/LSTM_Layer_0/split/ReadVariableOp:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_11"
      op: "TensorListPushBack"
      input: "tensorlistpushback_11_rnn_net_while_emptytensorlist_11"
      input: "stacked_rnn_cells/LSTM_Layer_0/split:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_12"
      op: "TensorListPushBack"
      input: "tensorlistpushback_12_rnn_net_while_emptytensorlist_12"
      input: "stacked_rnn_cells/LSTM_Layer_0/split:output:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_13"
      op: "TensorListPushBack"
      input: "tensorlistpushback_13_rnn_net_while_emptytensorlist_13"
      input: "stacked_rnn_cells/LSTM_Layer_0/split:output:2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_14"
      op: "TensorListPushBack"
      input: "tensorlistpushback_14_rnn_net_while_emptytensorlist_14"
      input: "stacked_rnn_cells/LSTM_Layer_0/split:output:3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_15"
      op: "TensorListPushBack"
      input: "tensorlistpushback_15_rnn_net_while_emptytensorlist_15"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_16"
      op: "TensorListPushBack"
      input: "tensorlistpushback_16_rnn_net_while_emptytensorlist_16"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_1:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_17"
      op: "TensorListPushBack"
      input: "tensorlistpushback_17_rnn_net_while_emptytensorlist_17"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_2:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_18"
      op: "TensorListPushBack"
      input: "tensorlistpushback_18_rnn_net_while_emptytensorlist_18"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_3:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_19"
      op: "TensorListPushBack"
      input: "tensorlistpushback_19_rnn_net_while_emptytensorlist_19"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1/split_dim:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_20"
      op: "TensorListPushBack"
      input: "tensorlistpushback_20_rnn_net_while_emptytensorlist_20"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1/ReadVariableOp:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_21"
      op: "TensorListPushBack"
      input: "tensorlistpushback_21_rnn_net_while_emptytensorlist_21"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_22"
      op: "TensorListPushBack"
      input: "tensorlistpushback_22_rnn_net_while_emptytensorlist_22"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1:output:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_23"
      op: "TensorListPushBack"
      input: "tensorlistpushback_23_rnn_net_while_emptytensorlist_23"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1:output:2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_24"
      op: "TensorListPushBack"
      input: "tensorlistpushback_24_rnn_net_while_emptytensorlist_24"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1:output:3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_25"
      op: "TensorListPushBack"
      input: "tensorlistpushback_25_rnn_net_while_emptytensorlist_25"
      input: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_26"
      op: "TensorListPushBack"
      input: "tensorlistpushback_26_rnn_net_while_emptytensorlist_26"
      input: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_27"
      op: "TensorListPushBack"
      input: "tensorlistpushback_27_rnn_net_while_emptytensorlist_27"
      input: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_28"
      op: "TensorListPushBack"
      input: "tensorlistpushback_28_rnn_net_while_emptytensorlist_28"
      input: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd_3:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_29"
      op: "TensorListPushBack"
      input: "tensorlistpushback_29_rnn_net_while_emptytensorlist_29"
      input: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_30"
      op: "TensorListPushBack"
      input: "tensorlistpushback_30_rnn_net_while_emptytensorlist_30"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_31"
      op: "TensorListPushBack"
      input: "tensorlistpushback_31_rnn_net_while_emptytensorlist_31"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_32"
      op: "TensorListPushBack"
      input: "tensorlistpushback_32_rnn_net_while_emptytensorlist_32"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_33"
      op: "TensorListPushBack"
      input: "tensorlistpushback_33_rnn_net_while_emptytensorlist_33"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_34"
      op: "TensorListPushBack"
      input: "tensorlistpushback_34_rnn_net_while_emptytensorlist_34"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_4:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_35"
      op: "TensorListPushBack"
      input: "tensorlistpushback_35_rnn_net_while_emptytensorlist_35"
      input: "stacked_rnn_cells/LSTM_Layer_0/add:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_36"
      op: "TensorListPushBack"
      input: "tensorlistpushback_36_rnn_net_while_emptytensorlist_36"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_37"
      op: "TensorListPushBack"
      input: "tensorlistpushback_37_rnn_net_while_emptytensorlist_37"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_38"
      op: "TensorListPushBack"
      input: "tensorlistpushback_38_rnn_net_while_emptytensorlist_38"
      input: "stacked_rnn_cells/LSTM_Layer_0/Mul:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_39"
      op: "TensorListPushBack"
      input: "tensorlistpushback_39_rnn_net_while_emptytensorlist_39"
      input: "stacked_rnn_cells/LSTM_Layer_0/Add_1:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_40"
      op: "TensorListPushBack"
      input: "tensorlistpushback_40_rnn_net_while_emptytensorlist_40"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_41"
      op: "TensorListPushBack"
      input: "tensorlistpushback_41_rnn_net_while_emptytensorlist_41"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_42"
      op: "TensorListPushBack"
      input: "tensorlistpushback_42_rnn_net_while_emptytensorlist_42"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_43"
      op: "TensorListPushBack"
      input: "tensorlistpushback_43_rnn_net_while_emptytensorlist_43"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_44"
      op: "TensorListPushBack"
      input: "tensorlistpushback_44_rnn_net_while_emptytensorlist_44"
      input: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_1:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_45"
      op: "TensorListPushBack"
      input: "tensorlistpushback_45_rnn_net_while_emptytensorlist_45"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_46"
      op: "TensorListPushBack"
      input: "tensorlistpushback_46_rnn_net_while_emptytensorlist_46"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_47"
      op: "TensorListPushBack"
      input: "tensorlistpushback_47_rnn_net_while_emptytensorlist_47"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_48"
      op: "TensorListPushBack"
      input: "tensorlistpushback_48_rnn_net_while_emptytensorlist_48"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_49"
      op: "TensorListPushBack"
      input: "tensorlistpushback_49_rnn_net_while_emptytensorlist_49"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_5:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_50"
      op: "TensorListPushBack"
      input: "tensorlistpushback_50_rnn_net_while_emptytensorlist_50"
      input: "stacked_rnn_cells/LSTM_Layer_0/add_2:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_51"
      op: "TensorListPushBack"
      input: "tensorlistpushback_51_rnn_net_while_emptytensorlist_51"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_52"
      op: "TensorListPushBack"
      input: "tensorlistpushback_52_rnn_net_while_emptytensorlist_52"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_3:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_53"
      op: "TensorListPushBack"
      input: "tensorlistpushback_53_rnn_net_while_emptytensorlist_53"
      input: "stacked_rnn_cells/LSTM_Layer_0/Mul_1:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_54"
      op: "TensorListPushBack"
      input: "tensorlistpushback_54_rnn_net_while_emptytensorlist_54"
      input: "stacked_rnn_cells/LSTM_Layer_0/Add_3:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_55"
      op: "TensorListPushBack"
      input: "tensorlistpushback_55_rnn_net_while_emptytensorlist_55"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_56"
      op: "TensorListPushBack"
      input: "tensorlistpushback_56_rnn_net_while_emptytensorlist_56"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_57"
      op: "TensorListPushBack"
      input: "tensorlistpushback_57_rnn_net_while_emptytensorlist_57"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_58"
      op: "TensorListPushBack"
      input: "tensorlistpushback_58_rnn_net_while_emptytensorlist_58"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_59"
      op: "TensorListPushBack"
      input: "tensorlistpushback_59_rnn_net_while_emptytensorlist_59"
      input: "stacked_rnn_cells/LSTM_Layer_0/mul_2:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_60"
      op: "TensorListPushBack"
      input: "tensorlistpushback_60_rnn_net_while_emptytensorlist_60"
      input: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_2:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_61"
      op: "TensorListPushBack"
      input: "tensorlistpushback_61_rnn_net_while_emptytensorlist_61"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_62"
      op: "TensorListPushBack"
      input: "tensorlistpushback_62_rnn_net_while_emptytensorlist_62"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_63"
      op: "TensorListPushBack"
      input: "tensorlistpushback_63_rnn_net_while_emptytensorlist_63"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_64"
      op: "TensorListPushBack"
      input: "tensorlistpushback_64_rnn_net_while_emptytensorlist_64"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_65"
      op: "TensorListPushBack"
      input: "tensorlistpushback_65_rnn_net_while_emptytensorlist_65"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_6:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_66"
      op: "TensorListPushBack"
      input: "tensorlistpushback_66_rnn_net_while_emptytensorlist_66"
      input: "stacked_rnn_cells/LSTM_Layer_0/add_4:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_67"
      op: "TensorListPushBack"
      input: "tensorlistpushback_67_rnn_net_while_emptytensorlist_67"
      input: "stacked_rnn_cells/LSTM_Layer_0/Tanh:y:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_68"
      op: "TensorListPushBack"
      input: "tensorlistpushback_68_rnn_net_while_emptytensorlist_68"
      input: "stacked_rnn_cells/LSTM_Layer_0/mul_3:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_69"
      op: "TensorListPushBack"
      input: "tensorlistpushback_69_rnn_net_while_emptytensorlist_69"
      input: "stacked_rnn_cells/LSTM_Layer_0/add_5:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_70"
      op: "TensorListPushBack"
      input: "tensorlistpushback_70_rnn_net_while_emptytensorlist_70"
      input: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_3:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_71"
      op: "TensorListPushBack"
      input: "tensorlistpushback_71_rnn_net_while_emptytensorlist_71"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_72"
      op: "TensorListPushBack"
      input: "tensorlistpushback_72_rnn_net_while_emptytensorlist_72"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_73"
      op: "TensorListPushBack"
      input: "tensorlistpushback_73_rnn_net_while_emptytensorlist_73"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_74"
      op: "TensorListPushBack"
      input: "tensorlistpushback_74_rnn_net_while_emptytensorlist_74"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_75"
      op: "TensorListPushBack"
      input: "tensorlistpushback_75_rnn_net_while_emptytensorlist_75"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_7:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_76"
      op: "TensorListPushBack"
      input: "tensorlistpushback_76_rnn_net_while_emptytensorlist_76"
      input: "stacked_rnn_cells/LSTM_Layer_0/add_6:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_77"
      op: "TensorListPushBack"
      input: "tensorlistpushback_77_rnn_net_while_emptytensorlist_77"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_4:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_78"
      op: "TensorListPushBack"
      input: "tensorlistpushback_78_rnn_net_while_emptytensorlist_78"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_5:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_79"
      op: "TensorListPushBack"
      input: "tensorlistpushback_79_rnn_net_while_emptytensorlist_79"
      input: "stacked_rnn_cells/LSTM_Layer_0/Mul_4:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_80"
      op: "TensorListPushBack"
      input: "tensorlistpushback_80_rnn_net_while_emptytensorlist_80"
      input: "stacked_rnn_cells/LSTM_Layer_0/Add_7:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_81"
      op: "TensorListPushBack"
      input: "tensorlistpushback_81_rnn_net_while_emptytensorlist_81"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_82"
      op: "TensorListPushBack"
      input: "tensorlistpushback_82_rnn_net_while_emptytensorlist_82"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_83"
      op: "TensorListPushBack"
      input: "tensorlistpushback_83_rnn_net_while_emptytensorlist_83"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_84"
      op: "TensorListPushBack"
      input: "tensorlistpushback_84_rnn_net_while_emptytensorlist_84"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_85"
      op: "TensorListPushBack"
      input: "tensorlistpushback_85_rnn_net_while_emptytensorlist_85"
      input: "stacked_rnn_cells/LSTM_Layer_0/Tanh_1:y:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_86"
      op: "TensorListPushBack"
      input: "tensorlistpushback_86_rnn_net_while_emptytensorlist_86"
      input: "stacked_rnn_cells/LSTM_Layer_0/mul_5:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_87"
      op: "TensorListPushBack"
      input: "tensorlistpushback_87_rnn_net_while_emptytensorlist_87"
      input: "stacked_rnn_cells/LSTM_Layer_1/split/split_dim:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_88"
      op: "TensorListPushBack"
      input: "tensorlistpushback_88_rnn_net_while_emptytensorlist_88"
      input: "stacked_rnn_cells/LSTM_Layer_1/split/ReadVariableOp:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_89"
      op: "TensorListPushBack"
      input: "tensorlistpushback_89_rnn_net_while_emptytensorlist_89"
      input: "stacked_rnn_cells/LSTM_Layer_1/split:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_90"
      op: "TensorListPushBack"
      input: "tensorlistpushback_90_rnn_net_while_emptytensorlist_90"
      input: "stacked_rnn_cells/LSTM_Layer_1/split:output:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_91"
      op: "TensorListPushBack"
      input: "tensorlistpushback_91_rnn_net_while_emptytensorlist_91"
      input: "stacked_rnn_cells/LSTM_Layer_1/split:output:2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_92"
      op: "TensorListPushBack"
      input: "tensorlistpushback_92_rnn_net_while_emptytensorlist_92"
      input: "stacked_rnn_cells/LSTM_Layer_1/split:output:3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_93"
      op: "TensorListPushBack"
      input: "tensorlistpushback_93_rnn_net_while_emptytensorlist_93"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_94"
      op: "TensorListPushBack"
      input: "tensorlistpushback_94_rnn_net_while_emptytensorlist_94"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_1:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_95"
      op: "TensorListPushBack"
      input: "tensorlistpushback_95_rnn_net_while_emptytensorlist_95"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_2:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_96"
      op: "TensorListPushBack"
      input: "tensorlistpushback_96_rnn_net_while_emptytensorlist_96"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_3:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_97"
      op: "TensorListPushBack"
      input: "tensorlistpushback_97_rnn_net_while_emptytensorlist_97"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1/split_dim:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_98"
      op: "TensorListPushBack"
      input: "tensorlistpushback_98_rnn_net_while_emptytensorlist_98"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1/ReadVariableOp:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_99"
      op: "TensorListPushBack"
      input: "tensorlistpushback_99_rnn_net_while_emptytensorlist_99"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_100"
      op: "TensorListPushBack"
      input: "tensorlistpushback_100_rnn_net_while_emptytensorlist_100"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1:output:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_101"
      op: "TensorListPushBack"
      input: "tensorlistpushback_101_rnn_net_while_emptytensorlist_101"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1:output:2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_102"
      op: "TensorListPushBack"
      input: "tensorlistpushback_102_rnn_net_while_emptytensorlist_102"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1:output:3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_103"
      op: "TensorListPushBack"
      input: "tensorlistpushback_103_rnn_net_while_emptytensorlist_103"
      input: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_104"
      op: "TensorListPushBack"
      input: "tensorlistpushback_104_rnn_net_while_emptytensorlist_104"
      input: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_105"
      op: "TensorListPushBack"
      input: "tensorlistpushback_105_rnn_net_while_emptytensorlist_105"
      input: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_106"
      op: "TensorListPushBack"
      input: "tensorlistpushback_106_rnn_net_while_emptytensorlist_106"
      input: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd_3:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_107"
      op: "TensorListPushBack"
      input: "tensorlistpushback_107_rnn_net_while_emptytensorlist_107"
      input: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_108"
      op: "TensorListPushBack"
      input: "tensorlistpushback_108_rnn_net_while_emptytensorlist_108"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_109"
      op: "TensorListPushBack"
      input: "tensorlistpushback_109_rnn_net_while_emptytensorlist_109"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_110"
      op: "TensorListPushBack"
      input: "tensorlistpushback_110_rnn_net_while_emptytensorlist_110"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_111"
      op: "TensorListPushBack"
      input: "tensorlistpushback_111_rnn_net_while_emptytensorlist_111"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_112"
      op: "TensorListPushBack"
      input: "tensorlistpushback_112_rnn_net_while_emptytensorlist_112"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_4:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_113"
      op: "TensorListPushBack"
      input: "tensorlistpushback_113_rnn_net_while_emptytensorlist_113"
      input: "stacked_rnn_cells/LSTM_Layer_1/add:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_114"
      op: "TensorListPushBack"
      input: "tensorlistpushback_114_rnn_net_while_emptytensorlist_114"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_115"
      op: "TensorListPushBack"
      input: "tensorlistpushback_115_rnn_net_while_emptytensorlist_115"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_116"
      op: "TensorListPushBack"
      input: "tensorlistpushback_116_rnn_net_while_emptytensorlist_116"
      input: "stacked_rnn_cells/LSTM_Layer_1/Mul:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_117"
      op: "TensorListPushBack"
      input: "tensorlistpushback_117_rnn_net_while_emptytensorlist_117"
      input: "stacked_rnn_cells/LSTM_Layer_1/Add_1:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_118"
      op: "TensorListPushBack"
      input: "tensorlistpushback_118_rnn_net_while_emptytensorlist_118"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_119"
      op: "TensorListPushBack"
      input: "tensorlistpushback_119_rnn_net_while_emptytensorlist_119"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_120"
      op: "TensorListPushBack"
      input: "tensorlistpushback_120_rnn_net_while_emptytensorlist_120"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_121"
      op: "TensorListPushBack"
      input: "tensorlistpushback_121_rnn_net_while_emptytensorlist_121"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_122"
      op: "TensorListPushBack"
      input: "tensorlistpushback_122_rnn_net_while_emptytensorlist_122"
      input: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_1:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_123"
      op: "TensorListPushBack"
      input: "tensorlistpushback_123_rnn_net_while_emptytensorlist_123"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_124"
      op: "TensorListPushBack"
      input: "tensorlistpushback_124_rnn_net_while_emptytensorlist_124"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_125"
      op: "TensorListPushBack"
      input: "tensorlistpushback_125_rnn_net_while_emptytensorlist_125"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_126"
      op: "TensorListPushBack"
      input: "tensorlistpushback_126_rnn_net_while_emptytensorlist_126"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_127"
      op: "TensorListPushBack"
      input: "tensorlistpushback_127_rnn_net_while_emptytensorlist_127"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_5:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_128"
      op: "TensorListPushBack"
      input: "tensorlistpushback_128_rnn_net_while_emptytensorlist_128"
      input: "stacked_rnn_cells/LSTM_Layer_1/add_2:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_129"
      op: "TensorListPushBack"
      input: "tensorlistpushback_129_rnn_net_while_emptytensorlist_129"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_130"
      op: "TensorListPushBack"
      input: "tensorlistpushback_130_rnn_net_while_emptytensorlist_130"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_3:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_131"
      op: "TensorListPushBack"
      input: "tensorlistpushback_131_rnn_net_while_emptytensorlist_131"
      input: "stacked_rnn_cells/LSTM_Layer_1/Mul_1:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_132"
      op: "TensorListPushBack"
      input: "tensorlistpushback_132_rnn_net_while_emptytensorlist_132"
      input: "stacked_rnn_cells/LSTM_Layer_1/Add_3:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_133"
      op: "TensorListPushBack"
      input: "tensorlistpushback_133_rnn_net_while_emptytensorlist_133"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_134"
      op: "TensorListPushBack"
      input: "tensorlistpushback_134_rnn_net_while_emptytensorlist_134"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_135"
      op: "TensorListPushBack"
      input: "tensorlistpushback_135_rnn_net_while_emptytensorlist_135"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_136"
      op: "TensorListPushBack"
      input: "tensorlistpushback_136_rnn_net_while_emptytensorlist_136"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_137"
      op: "TensorListPushBack"
      input: "tensorlistpushback_137_rnn_net_while_emptytensorlist_137"
      input: "stacked_rnn_cells/LSTM_Layer_1/mul_2:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_138"
      op: "TensorListPushBack"
      input: "tensorlistpushback_138_rnn_net_while_emptytensorlist_138"
      input: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_2:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_139"
      op: "TensorListPushBack"
      input: "tensorlistpushback_139_rnn_net_while_emptytensorlist_139"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_140"
      op: "TensorListPushBack"
      input: "tensorlistpushback_140_rnn_net_while_emptytensorlist_140"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_141"
      op: "TensorListPushBack"
      input: "tensorlistpushback_141_rnn_net_while_emptytensorlist_141"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_142"
      op: "TensorListPushBack"
      input: "tensorlistpushback_142_rnn_net_while_emptytensorlist_142"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_143"
      op: "TensorListPushBack"
      input: "tensorlistpushback_143_rnn_net_while_emptytensorlist_143"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_6:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_144"
      op: "TensorListPushBack"
      input: "tensorlistpushback_144_rnn_net_while_emptytensorlist_144"
      input: "stacked_rnn_cells/LSTM_Layer_1/add_4:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_145"
      op: "TensorListPushBack"
      input: "tensorlistpushback_145_rnn_net_while_emptytensorlist_145"
      input: "stacked_rnn_cells/LSTM_Layer_1/Tanh:y:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_146"
      op: "TensorListPushBack"
      input: "tensorlistpushback_146_rnn_net_while_emptytensorlist_146"
      input: "stacked_rnn_cells/LSTM_Layer_1/mul_3:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_147"
      op: "TensorListPushBack"
      input: "tensorlistpushback_147_rnn_net_while_emptytensorlist_147"
      input: "stacked_rnn_cells/LSTM_Layer_1/add_5:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_148"
      op: "TensorListPushBack"
      input: "tensorlistpushback_148_rnn_net_while_emptytensorlist_148"
      input: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_3:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_149"
      op: "TensorListPushBack"
      input: "tensorlistpushback_149_rnn_net_while_emptytensorlist_149"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_150"
      op: "TensorListPushBack"
      input: "tensorlistpushback_150_rnn_net_while_emptytensorlist_150"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_151"
      op: "TensorListPushBack"
      input: "tensorlistpushback_151_rnn_net_while_emptytensorlist_151"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_152"
      op: "TensorListPushBack"
      input: "tensorlistpushback_152_rnn_net_while_emptytensorlist_152"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_153"
      op: "TensorListPushBack"
      input: "tensorlistpushback_153_rnn_net_while_emptytensorlist_153"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_7:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_154"
      op: "TensorListPushBack"
      input: "tensorlistpushback_154_rnn_net_while_emptytensorlist_154"
      input: "stacked_rnn_cells/LSTM_Layer_1/add_6:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_155"
      op: "TensorListPushBack"
      input: "tensorlistpushback_155_rnn_net_while_emptytensorlist_155"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_4:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_156"
      op: "TensorListPushBack"
      input: "tensorlistpushback_156_rnn_net_while_emptytensorlist_156"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_5:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_157"
      op: "TensorListPushBack"
      input: "tensorlistpushback_157_rnn_net_while_emptytensorlist_157"
      input: "stacked_rnn_cells/LSTM_Layer_1/Mul_4:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_158"
      op: "TensorListPushBack"
      input: "tensorlistpushback_158_rnn_net_while_emptytensorlist_158"
      input: "stacked_rnn_cells/LSTM_Layer_1/Add_7:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_159"
      op: "TensorListPushBack"
      input: "tensorlistpushback_159_rnn_net_while_emptytensorlist_159"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_160"
      op: "TensorListPushBack"
      input: "tensorlistpushback_160_rnn_net_while_emptytensorlist_160"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_161"
      op: "TensorListPushBack"
      input: "tensorlistpushback_161_rnn_net_while_emptytensorlist_161"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_162"
      op: "TensorListPushBack"
      input: "tensorlistpushback_162_rnn_net_while_emptytensorlist_162"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_163"
      op: "TensorListPushBack"
      input: "tensorlistpushback_163_rnn_net_while_emptytensorlist_163"
      input: "stacked_rnn_cells/LSTM_Layer_1/Tanh_1:y:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_164"
      op: "TensorListPushBack"
      input: "tensorlistpushback_164_rnn_net_while_emptytensorlist_164"
      input: "stacked_rnn_cells/LSTM_Layer_1/mul_5:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_165"
      op: "TensorListPushBack"
      input: "tensorlistpushback_165_rnn_net_while_emptytensorlist_165"
      input: "TensorArrayV2Write/TensorListSetItem/index:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_166"
      op: "TensorListPushBack"
      input: "tensorlistpushback_166_rnn_net_while_emptytensorlist_166"
      input: "TensorArrayV2Write/TensorListSetItem:output_handle:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_VARIANT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
        }
      }
    }
    node_def {
      name: "TensorListPushBack_167"
      op: "TensorListPushBack"
      input: "tensorlistpushback_167_rnn_net_while_emptytensorlist_167"
      input: "add/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_168"
      op: "TensorListPushBack"
      input: "tensorlistpushback_168_rnn_net_while_emptytensorlist_168"
      input: "add_0:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_169"
      op: "TensorListPushBack"
      input: "tensorlistpushback_169_rnn_net_while_emptytensorlist_169"
      input: "add_1/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_170"
      op: "TensorListPushBack"
      input: "tensorlistpushback_170_rnn_net_while_emptytensorlist_170"
      input: "add_1_0:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    ret {
      key: "add"
      value: "add_0:z:0"
    }
    ret {
      key: "add_1"
      value: "add_1_0:z:0"
    }
    ret {
      key: "rnn_net_strided_slice_1"
      value: "rnn_net_strided_slice_1_0"
    }
    ret {
      key: "rnn_net_while_maximum_iterations"
      value: "rnn_net_while_maximum_iterations_0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_0_add_5"
      value: "stacked_rnn_cells/LSTM_Layer_0/add_5:z:0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_0_mul_5"
      value: "stacked_rnn_cells/LSTM_Layer_0/mul_5:z:0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_0_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_recurrent_kernel"
      value: "stacked_rnn_cells_lstm_layer_0_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_recurrent_kernel_0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_0_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_bias"
      value: "stacked_rnn_cells_lstm_layer_0_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_bias_0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_0_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_kernel"
      value: "stacked_rnn_cells_lstm_layer_0_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_kernel_0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_1_add_5"
      value: "stacked_rnn_cells/LSTM_Layer_1/add_5:z:0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_1_mul_5"
      value: "stacked_rnn_cells/LSTM_Layer_1/mul_5:z:0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_recurrent_kernel"
      value: "stacked_rnn_cells_lstm_layer_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_recurrent_kernel_0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_1_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_bias"
      value: "stacked_rnn_cells_lstm_layer_1_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_bias_0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_1_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_kernel"
      value: "stacked_rnn_cells_lstm_layer_1_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_kernel_0"
    }
    ret {
      key: "tensorarrayv2read_tensorlistgetitem_rnn_net_tensorarrayunstack_tensorlistfromtensor"
      value: "tensorarrayv2read_tensorlistgetitem_rnn_net_tensorarrayunstack_tensorlistfromtensor_0"
    }
    ret {
      key: "tensorarrayv2write_tensorlistsetitem"
      value: "TensorArrayV2Write/TensorListSetItem:output_handle:0"
    }
    ret {
      key: "tensorlistpushback"
      value: "TensorListPushBack:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_1"
      value: "TensorListPushBack_1:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_10"
      value: "TensorListPushBack_10:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_100"
      value: "TensorListPushBack_100:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_101"
      value: "TensorListPushBack_101:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_102"
      value: "TensorListPushBack_102:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_103"
      value: "TensorListPushBack_103:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_104"
      value: "TensorListPushBack_104:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_105"
      value: "TensorListPushBack_105:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_106"
      value: "TensorListPushBack_106:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_107"
      value: "TensorListPushBack_107:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_108"
      value: "TensorListPushBack_108:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_109"
      value: "TensorListPushBack_109:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_11"
      value: "TensorListPushBack_11:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_110"
      value: "TensorListPushBack_110:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_111"
      value: "TensorListPushBack_111:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_112"
      value: "TensorListPushBack_112:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_113"
      value: "TensorListPushBack_113:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_114"
      value: "TensorListPushBack_114:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_115"
      value: "TensorListPushBack_115:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_116"
      value: "TensorListPushBack_116:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_117"
      value: "TensorListPushBack_117:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_118"
      value: "TensorListPushBack_118:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_119"
      value: "TensorListPushBack_119:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_12"
      value: "TensorListPushBack_12:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_120"
      value: "TensorListPushBack_120:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_121"
      value: "TensorListPushBack_121:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_122"
      value: "TensorListPushBack_122:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_123"
      value: "TensorListPushBack_123:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_124"
      value: "TensorListPushBack_124:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_125"
      value: "TensorListPushBack_125:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_126"
      value: "TensorListPushBack_126:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_127"
      value: "TensorListPushBack_127:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_128"
      value: "TensorListPushBack_128:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_129"
      value: "TensorListPushBack_129:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_13"
      value: "TensorListPushBack_13:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_130"
      value: "TensorListPushBack_130:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_131"
      value: "TensorListPushBack_131:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_132"
      value: "TensorListPushBack_132:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_133"
      value: "TensorListPushBack_133:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_134"
      value: "TensorListPushBack_134:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_135"
      value: "TensorListPushBack_135:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_136"
      value: "TensorListPushBack_136:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_137"
      value: "TensorListPushBack_137:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_138"
      value: "TensorListPushBack_138:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_139"
      value: "TensorListPushBack_139:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_14"
      value: "TensorListPushBack_14:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_140"
      value: "TensorListPushBack_140:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_141"
      value: "TensorListPushBack_141:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_142"
      value: "TensorListPushBack_142:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_143"
      value: "TensorListPushBack_143:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_144"
      value: "TensorListPushBack_144:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_145"
      value: "TensorListPushBack_145:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_146"
      value: "TensorListPushBack_146:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_147"
      value: "TensorListPushBack_147:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_148"
      value: "TensorListPushBack_148:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_149"
      value: "TensorListPushBack_149:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_15"
      value: "TensorListPushBack_15:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_150"
      value: "TensorListPushBack_150:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_151"
      value: "TensorListPushBack_151:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_152"
      value: "TensorListPushBack_152:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_153"
      value: "TensorListPushBack_153:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_154"
      value: "TensorListPushBack_154:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_155"
      value: "TensorListPushBack_155:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_156"
      value: "TensorListPushBack_156:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_157"
      value: "TensorListPushBack_157:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_158"
      value: "TensorListPushBack_158:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_159"
      value: "TensorListPushBack_159:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_16"
      value: "TensorListPushBack_16:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_160"
      value: "TensorListPushBack_160:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_161"
      value: "TensorListPushBack_161:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_162"
      value: "TensorListPushBack_162:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_163"
      value: "TensorListPushBack_163:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_164"
      value: "TensorListPushBack_164:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_165"
      value: "TensorListPushBack_165:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_166"
      value: "TensorListPushBack_166:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_167"
      value: "TensorListPushBack_167:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_168"
      value: "TensorListPushBack_168:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_169"
      value: "TensorListPushBack_169:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_17"
      value: "TensorListPushBack_17:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_170"
      value: "TensorListPushBack_170:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_18"
      value: "TensorListPushBack_18:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_19"
      value: "TensorListPushBack_19:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_2"
      value: "TensorListPushBack_2:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_20"
      value: "TensorListPushBack_20:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_21"
      value: "TensorListPushBack_21:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_22"
      value: "TensorListPushBack_22:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_23"
      value: "TensorListPushBack_23:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_24"
      value: "TensorListPushBack_24:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_25"
      value: "TensorListPushBack_25:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_26"
      value: "TensorListPushBack_26:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_27"
      value: "TensorListPushBack_27:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_28"
      value: "TensorListPushBack_28:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_29"
      value: "TensorListPushBack_29:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_3"
      value: "TensorListPushBack_3:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_30"
      value: "TensorListPushBack_30:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_31"
      value: "TensorListPushBack_31:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_32"
      value: "TensorListPushBack_32:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_33"
      value: "TensorListPushBack_33:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_34"
      value: "TensorListPushBack_34:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_35"
      value: "TensorListPushBack_35:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_36"
      value: "TensorListPushBack_36:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_37"
      value: "TensorListPushBack_37:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_38"
      value: "TensorListPushBack_38:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_39"
      value: "TensorListPushBack_39:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_4"
      value: "TensorListPushBack_4:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_40"
      value: "TensorListPushBack_40:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_41"
      value: "TensorListPushBack_41:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_42"
      value: "TensorListPushBack_42:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_43"
      value: "TensorListPushBack_43:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_44"
      value: "TensorListPushBack_44:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_45"
      value: "TensorListPushBack_45:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_46"
      value: "TensorListPushBack_46:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_47"
      value: "TensorListPushBack_47:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_48"
      value: "TensorListPushBack_48:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_49"
      value: "TensorListPushBack_49:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_5"
      value: "TensorListPushBack_5:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_50"
      value: "TensorListPushBack_50:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_51"
      value: "TensorListPushBack_51:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_52"
      value: "TensorListPushBack_52:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_53"
      value: "TensorListPushBack_53:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_54"
      value: "TensorListPushBack_54:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_55"
      value: "TensorListPushBack_55:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_56"
      value: "TensorListPushBack_56:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_57"
      value: "TensorListPushBack_57:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_58"
      value: "TensorListPushBack_58:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_59"
      value: "TensorListPushBack_59:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_6"
      value: "TensorListPushBack_6:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_60"
      value: "TensorListPushBack_60:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_61"
      value: "TensorListPushBack_61:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_62"
      value: "TensorListPushBack_62:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_63"
      value: "TensorListPushBack_63:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_64"
      value: "TensorListPushBack_64:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_65"
      value: "TensorListPushBack_65:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_66"
      value: "TensorListPushBack_66:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_67"
      value: "TensorListPushBack_67:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_68"
      value: "TensorListPushBack_68:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_69"
      value: "TensorListPushBack_69:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_7"
      value: "TensorListPushBack_7:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_70"
      value: "TensorListPushBack_70:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_71"
      value: "TensorListPushBack_71:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_72"
      value: "TensorListPushBack_72:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_73"
      value: "TensorListPushBack_73:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_74"
      value: "TensorListPushBack_74:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_75"
      value: "TensorListPushBack_75:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_76"
      value: "TensorListPushBack_76:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_77"
      value: "TensorListPushBack_77:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_78"
      value: "TensorListPushBack_78:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_79"
      value: "TensorListPushBack_79:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_8"
      value: "TensorListPushBack_8:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_80"
      value: "TensorListPushBack_80:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_81"
      value: "TensorListPushBack_81:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_82"
      value: "TensorListPushBack_82:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_83"
      value: "TensorListPushBack_83:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_84"
      value: "TensorListPushBack_84:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_85"
      value: "TensorListPushBack_85:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_86"
      value: "TensorListPushBack_86:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_87"
      value: "TensorListPushBack_87:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_88"
      value: "TensorListPushBack_88:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_89"
      value: "TensorListPushBack_89:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_9"
      value: "TensorListPushBack_9:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_90"
      value: "TensorListPushBack_90:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_91"
      value: "TensorListPushBack_91:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_92"
      value: "TensorListPushBack_92:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_93"
      value: "TensorListPushBack_93:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_94"
      value: "TensorListPushBack_94:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_95"
      value: "TensorListPushBack_95:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_96"
      value: "TensorListPushBack_96:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_97"
      value: "TensorListPushBack_97:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_98"
      value: "TensorListPushBack_98:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_99"
      value: "TensorListPushBack_99:output_handle:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 17
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 18
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 19
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 20
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 21
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 22
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 23
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 24
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 25
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 26
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 27
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 28
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 29
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 30
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 31
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 32
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 33
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 34
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 35
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 36
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 37
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 38
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 39
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 40
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 41
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 42
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 43
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 44
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 45
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 46
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 47
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 48
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 49
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 50
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 51
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 52
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 53
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 54
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 55
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 56
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 57
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 58
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 59
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 60
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 61
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 62
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 63
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 64
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 65
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 66
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 67
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 68
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 69
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 70
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 71
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 72
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 73
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 74
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 75
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 76
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 77
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 78
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 79
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 80
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 81
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 82
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 83
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 84
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 85
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 86
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 87
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 88
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 89
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 90
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 91
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 92
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 93
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 94
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 95
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 96
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 97
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 98
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 99
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 100
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 101
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 102
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 103
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 104
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 105
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 106
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 107
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 108
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 109
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 110
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 111
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 112
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 113
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 114
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 115
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 116
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 117
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 118
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 119
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 120
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 121
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 122
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 123
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 124
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 125
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 126
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 127
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 128
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 129
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 130
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 131
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 132
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 133
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 134
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 135
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 136
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 137
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 138
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 139
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 140
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 141
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 142
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 143
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 144
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 145
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 146
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 147
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 148
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 149
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 150
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 151
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 152
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 153
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 154
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 155
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 156
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 157
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 158
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 159
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 160
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 161
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 162
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 163
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 164
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 165
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 166
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 167
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 168
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 169
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 170
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 171
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 172
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 173
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 174
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 175
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 176
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 177
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 178
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 179
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 180
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 181
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 182
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 183
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 184
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 185
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 186
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference_Dataset_from_generator_generator_next_fn_39"
      input_arg {
        name: "args_0"
        type: DT_INT64
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_1"
        type: DT_FLOAT
      }
      is_stateful: true
      control_output: "PyFunc"
    }
    node_def {
      name: "PyFunc"
      op: "PyFunc"
      input: "args_0"
      attr {
        key: "Tin"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "Tout"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
              dim {
                size: 13
              }
            }
            shape {
              dim {
                size: 4
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "token"
        value {
          s: "pyfunc_1"
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "PyFunc:output:0"
      input: "^NoOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
              dim {
                size: 13
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "PyFunc:output:1"
      input: "^NoOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node_def {
      name: "NoOp"
      op: "NoOp"
      input: "^PyFunc"
      attr {
        key: "_acd_function_control_output"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            unknown_rank: true
          }
        }
      }
    }
    attr {
      key: "_tf_data_function"
      value {
        b: true
      }
    }
    control_ret {
      key: "PyFunc"
      value: "PyFunc"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "lstm_model_RNN_net_while_body_2295"
      input_arg {
        name: "lstm_model_rnn_net_while_loop_counter"
        type: DT_INT32
      }
      input_arg {
        name: "lstm_model_rnn_net_while_maximum_iterations_0"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_2"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_3"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_4"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_5"
        type: DT_FLOAT
      }
      input_arg {
        name: "lstm_model_rnn_net_strided_slice_1_0"
        type: DT_INT32
      }
      input_arg {
        name: "tensorarrayv2read_tensorlistgetitem_lstm_model_rnn_net_tensorarrayunstack_tensorlistfromtensor_0"
        type: DT_VARIANT
      }
      input_arg {
        name: "stacked_rnn_cells_lstm_layer_0_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_kernel_0"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 13
            }
            dim {
              size: 128
            }
          }
        }
      }
      input_arg {
        name: "stacked_rnn_cells_lstm_layer_0_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_bias_0"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      input_arg {
        name: "stacked_rnn_cells_lstm_layer_0_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_recurrent_kernel_0"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 32
            }
            dim {
              size: 128
            }
          }
        }
      }
      input_arg {
        name: "stacked_rnn_cells_lstm_layer_1_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_kernel_0"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 32
            }
            dim {
              size: 128
            }
          }
        }
      }
      input_arg {
        name: "stacked_rnn_cells_lstm_layer_1_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_bias_0"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      input_arg {
        name: "stacked_rnn_cells_lstm_layer_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_recurrent_kernel_0"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 32
            }
            dim {
              size: 128
            }
          }
        }
      }
      input_arg {
        name: "tensorlistpushback_lstm_model_rnn_net_while_emptytensorlist"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_1_lstm_model_rnn_net_while_emptytensorlist_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_2_lstm_model_rnn_net_while_emptytensorlist_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_3_lstm_model_rnn_net_while_emptytensorlist_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_4_lstm_model_rnn_net_while_emptytensorlist_4"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_5_lstm_model_rnn_net_while_emptytensorlist_5"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_6_lstm_model_rnn_net_while_emptytensorlist_6"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_7_lstm_model_rnn_net_while_emptytensorlist_7"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_8_lstm_model_rnn_net_while_emptytensorlist_8"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_9_lstm_model_rnn_net_while_emptytensorlist_9"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_10_lstm_model_rnn_net_while_emptytensorlist_10"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_11_lstm_model_rnn_net_while_emptytensorlist_11"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_12_lstm_model_rnn_net_while_emptytensorlist_12"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_13_lstm_model_rnn_net_while_emptytensorlist_13"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_14_lstm_model_rnn_net_while_emptytensorlist_14"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_15_lstm_model_rnn_net_while_emptytensorlist_15"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_16_lstm_model_rnn_net_while_emptytensorlist_16"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_17_lstm_model_rnn_net_while_emptytensorlist_17"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_18_lstm_model_rnn_net_while_emptytensorlist_18"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_19_lstm_model_rnn_net_while_emptytensorlist_19"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_20_lstm_model_rnn_net_while_emptytensorlist_20"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_21_lstm_model_rnn_net_while_emptytensorlist_21"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_22_lstm_model_rnn_net_while_emptytensorlist_22"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_23_lstm_model_rnn_net_while_emptytensorlist_23"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_24_lstm_model_rnn_net_while_emptytensorlist_24"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_25_lstm_model_rnn_net_while_emptytensorlist_25"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_26_lstm_model_rnn_net_while_emptytensorlist_26"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_27_lstm_model_rnn_net_while_emptytensorlist_27"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_28_lstm_model_rnn_net_while_emptytensorlist_28"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_29_lstm_model_rnn_net_while_emptytensorlist_29"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_30_lstm_model_rnn_net_while_emptytensorlist_30"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_31_lstm_model_rnn_net_while_emptytensorlist_31"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_32_lstm_model_rnn_net_while_emptytensorlist_32"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_33_lstm_model_rnn_net_while_emptytensorlist_33"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_34_lstm_model_rnn_net_while_emptytensorlist_34"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_35_lstm_model_rnn_net_while_emptytensorlist_35"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_36_lstm_model_rnn_net_while_emptytensorlist_36"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_37_lstm_model_rnn_net_while_emptytensorlist_37"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_38_lstm_model_rnn_net_while_emptytensorlist_38"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_39_lstm_model_rnn_net_while_emptytensorlist_39"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_40_lstm_model_rnn_net_while_emptytensorlist_40"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_41_lstm_model_rnn_net_while_emptytensorlist_41"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_42_lstm_model_rnn_net_while_emptytensorlist_42"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_43_lstm_model_rnn_net_while_emptytensorlist_43"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_44_lstm_model_rnn_net_while_emptytensorlist_44"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_45_lstm_model_rnn_net_while_emptytensorlist_45"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_46_lstm_model_rnn_net_while_emptytensorlist_46"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_47_lstm_model_rnn_net_while_emptytensorlist_47"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_48_lstm_model_rnn_net_while_emptytensorlist_48"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_49_lstm_model_rnn_net_while_emptytensorlist_49"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_50_lstm_model_rnn_net_while_emptytensorlist_50"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_51_lstm_model_rnn_net_while_emptytensorlist_51"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_52_lstm_model_rnn_net_while_emptytensorlist_52"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_53_lstm_model_rnn_net_while_emptytensorlist_53"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_54_lstm_model_rnn_net_while_emptytensorlist_54"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_55_lstm_model_rnn_net_while_emptytensorlist_55"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_56_lstm_model_rnn_net_while_emptytensorlist_56"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_57_lstm_model_rnn_net_while_emptytensorlist_57"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_58_lstm_model_rnn_net_while_emptytensorlist_58"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_59_lstm_model_rnn_net_while_emptytensorlist_59"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_60_lstm_model_rnn_net_while_emptytensorlist_60"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_61_lstm_model_rnn_net_while_emptytensorlist_61"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_62_lstm_model_rnn_net_while_emptytensorlist_62"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_63_lstm_model_rnn_net_while_emptytensorlist_63"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_64_lstm_model_rnn_net_while_emptytensorlist_64"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_65_lstm_model_rnn_net_while_emptytensorlist_65"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_66_lstm_model_rnn_net_while_emptytensorlist_66"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_67_lstm_model_rnn_net_while_emptytensorlist_67"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_68_lstm_model_rnn_net_while_emptytensorlist_68"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_69_lstm_model_rnn_net_while_emptytensorlist_69"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_70_lstm_model_rnn_net_while_emptytensorlist_70"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_71_lstm_model_rnn_net_while_emptytensorlist_71"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_72_lstm_model_rnn_net_while_emptytensorlist_72"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_73_lstm_model_rnn_net_while_emptytensorlist_73"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_74_lstm_model_rnn_net_while_emptytensorlist_74"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_75_lstm_model_rnn_net_while_emptytensorlist_75"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_76_lstm_model_rnn_net_while_emptytensorlist_76"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_77_lstm_model_rnn_net_while_emptytensorlist_77"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_78_lstm_model_rnn_net_while_emptytensorlist_78"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_79_lstm_model_rnn_net_while_emptytensorlist_79"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_80_lstm_model_rnn_net_while_emptytensorlist_80"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_81_lstm_model_rnn_net_while_emptytensorlist_81"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_82_lstm_model_rnn_net_while_emptytensorlist_82"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_83_lstm_model_rnn_net_while_emptytensorlist_83"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_84_lstm_model_rnn_net_while_emptytensorlist_84"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_85_lstm_model_rnn_net_while_emptytensorlist_85"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_86_lstm_model_rnn_net_while_emptytensorlist_86"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_87_lstm_model_rnn_net_while_emptytensorlist_87"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_88_lstm_model_rnn_net_while_emptytensorlist_88"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_89_lstm_model_rnn_net_while_emptytensorlist_89"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_90_lstm_model_rnn_net_while_emptytensorlist_90"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_91_lstm_model_rnn_net_while_emptytensorlist_91"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_92_lstm_model_rnn_net_while_emptytensorlist_92"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_93_lstm_model_rnn_net_while_emptytensorlist_93"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_94_lstm_model_rnn_net_while_emptytensorlist_94"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_95_lstm_model_rnn_net_while_emptytensorlist_95"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_96_lstm_model_rnn_net_while_emptytensorlist_96"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_97_lstm_model_rnn_net_while_emptytensorlist_97"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_98_lstm_model_rnn_net_while_emptytensorlist_98"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_99_lstm_model_rnn_net_while_emptytensorlist_99"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_100_lstm_model_rnn_net_while_emptytensorlist_100"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_101_lstm_model_rnn_net_while_emptytensorlist_101"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_102_lstm_model_rnn_net_while_emptytensorlist_102"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_103_lstm_model_rnn_net_while_emptytensorlist_103"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_104_lstm_model_rnn_net_while_emptytensorlist_104"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_105_lstm_model_rnn_net_while_emptytensorlist_105"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_106_lstm_model_rnn_net_while_emptytensorlist_106"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_107_lstm_model_rnn_net_while_emptytensorlist_107"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_108_lstm_model_rnn_net_while_emptytensorlist_108"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_109_lstm_model_rnn_net_while_emptytensorlist_109"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_110_lstm_model_rnn_net_while_emptytensorlist_110"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_111_lstm_model_rnn_net_while_emptytensorlist_111"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_112_lstm_model_rnn_net_while_emptytensorlist_112"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_113_lstm_model_rnn_net_while_emptytensorlist_113"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_114_lstm_model_rnn_net_while_emptytensorlist_114"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_115_lstm_model_rnn_net_while_emptytensorlist_115"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_116_lstm_model_rnn_net_while_emptytensorlist_116"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_117_lstm_model_rnn_net_while_emptytensorlist_117"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_118_lstm_model_rnn_net_while_emptytensorlist_118"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_119_lstm_model_rnn_net_while_emptytensorlist_119"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_120_lstm_model_rnn_net_while_emptytensorlist_120"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_121_lstm_model_rnn_net_while_emptytensorlist_121"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_122_lstm_model_rnn_net_while_emptytensorlist_122"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_123_lstm_model_rnn_net_while_emptytensorlist_123"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_124_lstm_model_rnn_net_while_emptytensorlist_124"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_125_lstm_model_rnn_net_while_emptytensorlist_125"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_126_lstm_model_rnn_net_while_emptytensorlist_126"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_127_lstm_model_rnn_net_while_emptytensorlist_127"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_128_lstm_model_rnn_net_while_emptytensorlist_128"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_129_lstm_model_rnn_net_while_emptytensorlist_129"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_130_lstm_model_rnn_net_while_emptytensorlist_130"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_131_lstm_model_rnn_net_while_emptytensorlist_131"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_132_lstm_model_rnn_net_while_emptytensorlist_132"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_133_lstm_model_rnn_net_while_emptytensorlist_133"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_134_lstm_model_rnn_net_while_emptytensorlist_134"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_135_lstm_model_rnn_net_while_emptytensorlist_135"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_136_lstm_model_rnn_net_while_emptytensorlist_136"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_137_lstm_model_rnn_net_while_emptytensorlist_137"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_138_lstm_model_rnn_net_while_emptytensorlist_138"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_139_lstm_model_rnn_net_while_emptytensorlist_139"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_140_lstm_model_rnn_net_while_emptytensorlist_140"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_141_lstm_model_rnn_net_while_emptytensorlist_141"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_142_lstm_model_rnn_net_while_emptytensorlist_142"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_143_lstm_model_rnn_net_while_emptytensorlist_143"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_144_lstm_model_rnn_net_while_emptytensorlist_144"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_145_lstm_model_rnn_net_while_emptytensorlist_145"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_146_lstm_model_rnn_net_while_emptytensorlist_146"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_147_lstm_model_rnn_net_while_emptytensorlist_147"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_148_lstm_model_rnn_net_while_emptytensorlist_148"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_149_lstm_model_rnn_net_while_emptytensorlist_149"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_150_lstm_model_rnn_net_while_emptytensorlist_150"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_151_lstm_model_rnn_net_while_emptytensorlist_151"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_152_lstm_model_rnn_net_while_emptytensorlist_152"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_153_lstm_model_rnn_net_while_emptytensorlist_153"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_154_lstm_model_rnn_net_while_emptytensorlist_154"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_155_lstm_model_rnn_net_while_emptytensorlist_155"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_156_lstm_model_rnn_net_while_emptytensorlist_156"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_157_lstm_model_rnn_net_while_emptytensorlist_157"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_158_lstm_model_rnn_net_while_emptytensorlist_158"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_159_lstm_model_rnn_net_while_emptytensorlist_159"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_160_lstm_model_rnn_net_while_emptytensorlist_160"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_161_lstm_model_rnn_net_while_emptytensorlist_161"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_162_lstm_model_rnn_net_while_emptytensorlist_162"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_163_lstm_model_rnn_net_while_emptytensorlist_163"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_164_lstm_model_rnn_net_while_emptytensorlist_164"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_165_lstm_model_rnn_net_while_emptytensorlist_165"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_166_lstm_model_rnn_net_while_emptytensorlist_166"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_167_lstm_model_rnn_net_while_emptytensorlist_167"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_168_lstm_model_rnn_net_while_emptytensorlist_168"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_169_lstm_model_rnn_net_while_emptytensorlist_169"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_170_lstm_model_rnn_net_while_emptytensorlist_170"
        type: DT_VARIANT
      }
      output_arg {
        name: "add_1"
        type: DT_INT32
      }
      output_arg {
        name: "lstm_model_rnn_net_while_maximum_iterations"
        type: DT_INT32
      }
      output_arg {
        name: "add"
        type: DT_INT32
      }
      output_arg {
        name: "tensorarrayv2write_tensorlistsetitem"
        type: DT_VARIANT
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_0_mul_5"
        type: DT_FLOAT
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_0_add_5"
        type: DT_FLOAT
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_1_mul_5"
        type: DT_FLOAT
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_1_add_5"
        type: DT_FLOAT
      }
      output_arg {
        name: "lstm_model_rnn_net_strided_slice_1"
        type: DT_INT32
      }
      output_arg {
        name: "tensorarrayv2read_tensorlistgetitem_lstm_model_rnn_net_tensorarrayunstack_tensorlistfromtensor"
        type: DT_VARIANT
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_0_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_kernel"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 13
            }
            dim {
              size: 128
            }
          }
        }
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_0_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_bias"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_0_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_recurrent_kernel"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 32
            }
            dim {
              size: 128
            }
          }
        }
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_1_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_kernel"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 32
            }
            dim {
              size: 128
            }
          }
        }
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_1_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_bias"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      output_arg {
        name: "stacked_rnn_cells_lstm_layer_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_recurrent_kernel"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_FLOAT
          shape {
            dim {
              size: 32
            }
            dim {
              size: 128
            }
          }
        }
      }
      output_arg {
        name: "tensorlistpushback"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_6"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_7"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_8"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_9"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_10"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_11"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_12"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_13"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_14"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_15"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_16"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_17"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_18"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_19"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_20"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_21"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_22"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_23"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_24"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_25"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_26"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_27"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_28"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_29"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_30"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_31"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_32"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_33"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_34"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_35"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_36"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_37"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_38"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_39"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_40"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_41"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_42"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_43"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_44"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_45"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_46"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_47"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_48"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_49"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_50"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_51"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_52"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_53"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_54"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_55"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_56"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_57"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_58"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_59"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_60"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_61"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_62"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_63"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_64"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_65"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_66"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_67"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_68"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_69"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_70"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_71"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_72"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_73"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_74"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_75"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_76"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_77"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_78"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_79"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_80"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_81"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_82"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_83"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_84"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_85"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_86"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_87"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_88"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_89"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_90"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_91"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_92"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_93"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_94"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_95"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_96"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_97"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_98"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_99"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_100"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_101"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_102"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_103"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_104"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_105"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_106"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_107"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_108"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_109"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_110"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_111"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_112"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_113"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_114"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_115"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_116"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_117"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_118"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_119"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_120"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_121"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_122"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_123"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_124"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_125"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_126"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_127"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_128"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_129"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_130"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_131"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_132"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_133"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_134"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_135"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_136"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_137"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_138"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_139"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_140"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_141"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_142"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_143"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_144"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_145"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_146"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_147"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_148"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_149"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_150"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_151"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_152"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_153"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_154"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_155"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_156"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_157"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_158"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_159"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_160"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_161"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_162"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_163"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_164"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_165"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_166"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_167"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_168"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_169"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_170"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "TensorArrayV2Read/TensorListGetItem/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\377\377\377\377\r\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "TensorArrayV2Read/TensorListGetItem"
      op: "TensorListGetItem"
      input: "tensorarrayv2read_tensorlistgetitem_lstm_model_rnn_net_tensorarrayunstack_tensorlistfromtensor_0"
      input: "placeholder"
      input: "TensorArrayV2Read/TensorListGetItem/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 13
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/split/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/split/ReadVariableOp"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_0_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 13
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/split"
      op: "Split"
      input: "stacked_rnn_cells/LSTM_Layer_0/split/split_dim:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 13
              }
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 13
              }
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 13
              }
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 13
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 4
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/MatMul"
      op: "MatMul"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/MatMul_1"
      op: "MatMul"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split:output:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/MatMul_2"
      op: "MatMul"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split:output:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/MatMul_3"
      op: "MatMul"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split:output:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/split_1/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/split_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_0_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_bias_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/split_1"
      op: "Split"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1/split_dim:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 4
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd"
      op: "BiasAdd"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul:product:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd_1"
      op: "BiasAdd"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_1:product:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1:output:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd_2"
      op: "BiasAdd"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_2:product:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1:output:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd_3"
      op: "BiasAdd"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_3:product:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1:output:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_0_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_recurrent_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000 \000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice"
      op: "StridedSlice"
      input: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp:value:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 3
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/MatMul_4"
      op: "MatMul"
      input: "placeholder_2"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/add"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_4:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Mul"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_0/add:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Add_1"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_0/Mul:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum"
      op: "Minimum"
      input: "stacked_rnn_cells/LSTM_Layer_0/Add_1:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value"
      op: "Maximum"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_0_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_recurrent_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000 \000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000@\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1"
      op: "StridedSlice"
      input: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_1:value:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/MatMul_5"
      op: "MatMul"
      input: "placeholder_2"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/add_2"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_5:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Mul_1"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_0/add_2:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Add_3"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_0/Mul_1:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum"
      op: "Minimum"
      input: "stacked_rnn_cells/LSTM_Layer_0/Add_3:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1"
      op: "Maximum"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/mul_2"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1:z:0"
      input: "placeholder_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_2"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_0_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_recurrent_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000@\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000`\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2"
      op: "StridedSlice"
      input: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_2:value:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/MatMul_6"
      op: "MatMul"
      input: "placeholder_2"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/add_4"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd_2:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_6:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Tanh"
      op: "Tanh"
      input: "stacked_rnn_cells/LSTM_Layer_0/add_4:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/mul_3"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/Tanh:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/add_5"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_0/mul_2:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/mul_3:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_3"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_0_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_recurrent_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000`\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3"
      op: "StridedSlice"
      input: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_3:value:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 3
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/MatMul_7"
      op: "MatMul"
      input: "placeholder_2"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/add_6"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd_3:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_7:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Const_4"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Const_5"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Mul_4"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_0/add_6:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_4:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Add_7"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_0/Mul_4:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_5:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum"
      op: "Minimum"
      input: "stacked_rnn_cells/LSTM_Layer_0/Add_7:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2"
      op: "Maximum"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/Tanh_1"
      op: "Tanh"
      input: "stacked_rnn_cells/LSTM_Layer_0/add_5:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_0/mul_5"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_0/Tanh_1:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/split/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/split/ReadVariableOp"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_1_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/split"
      op: "Split"
      input: "stacked_rnn_cells/LSTM_Layer_1/split/split_dim:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 4
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/MatMul"
      op: "MatMul"
      input: "stacked_rnn_cells/LSTM_Layer_0/mul_5:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/MatMul_1"
      op: "MatMul"
      input: "stacked_rnn_cells/LSTM_Layer_0/mul_5:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split:output:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/MatMul_2"
      op: "MatMul"
      input: "stacked_rnn_cells/LSTM_Layer_0/mul_5:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split:output:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/MatMul_3"
      op: "MatMul"
      input: "stacked_rnn_cells/LSTM_Layer_0/mul_5:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split:output:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/split_1/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/split_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_1_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_bias_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/split_1"
      op: "Split"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1/split_dim:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 4
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd"
      op: "BiasAdd"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul:product:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd_1"
      op: "BiasAdd"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_1:product:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1:output:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd_2"
      op: "BiasAdd"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_2:product:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1:output:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd_3"
      op: "BiasAdd"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_3:product:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1:output:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_recurrent_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000 \000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice"
      op: "StridedSlice"
      input: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp:value:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 3
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/MatMul_4"
      op: "MatMul"
      input: "placeholder_4"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/add"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_4:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Mul"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_1/add:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Add_1"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_1/Mul:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum"
      op: "Minimum"
      input: "stacked_rnn_cells/LSTM_Layer_1/Add_1:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value"
      op: "Maximum"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_recurrent_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000 \000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000@\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1"
      op: "StridedSlice"
      input: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_1:value:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/MatMul_5"
      op: "MatMul"
      input: "placeholder_4"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/add_2"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_5:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Mul_1"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_1/add_2:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Add_3"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_1/Mul_1:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum"
      op: "Minimum"
      input: "stacked_rnn_cells/LSTM_Layer_1/Add_3:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1"
      op: "Maximum"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/mul_2"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1:z:0"
      input: "placeholder_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_2"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_recurrent_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000@\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000`\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2"
      op: "StridedSlice"
      input: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_2:value:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/MatMul_6"
      op: "MatMul"
      input: "placeholder_4"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/add_4"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd_2:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_6:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Tanh"
      op: "Tanh"
      input: "stacked_rnn_cells/LSTM_Layer_1/add_4:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/mul_3"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/Tanh:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/add_5"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_1/mul_2:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/mul_3:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_3"
      op: "ReadVariableOp"
      input: "stacked_rnn_cells_lstm_layer_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_recurrent_kernel_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000`\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3"
      op: "StridedSlice"
      input: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_3:value:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack_1:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 3
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/MatMul_7"
      op: "MatMul"
      input: "placeholder_4"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/add_6"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd_3:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_7:product:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Const_4"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Const_5"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Mul_4"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_1/add_6:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_4:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Add_7"
      op: "AddV2"
      input: "stacked_rnn_cells/LSTM_Layer_1/Mul_4:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_5:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum"
      op: "Minimum"
      input: "stacked_rnn_cells/LSTM_Layer_1/Add_7:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2"
      op: "Maximum"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/Tanh_1"
      op: "Tanh"
      input: "stacked_rnn_cells/LSTM_Layer_1/add_5:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "stacked_rnn_cells/LSTM_Layer_1/mul_5"
      op: "Mul"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2:z:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/Tanh_1:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "TensorArrayV2Write/TensorListSetItem/index"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "TensorArrayV2Write/TensorListSetItem"
      op: "TensorListSetItem"
      input: "placeholder_1"
      input: "TensorArrayV2Write/TensorListSetItem/index:output:0"
      input: "stacked_rnn_cells/LSTM_Layer_1/mul_5:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "add/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add_0"
      op: "AddV2"
      input: "placeholder"
      input: "add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "add_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add_1_0"
      op: "AddV2"
      input: "lstm_model_rnn_net_while_loop_counter"
      input: "add_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "TensorListPushBack"
      op: "TensorListPushBack"
      input: "tensorlistpushback_lstm_model_rnn_net_while_emptytensorlist"
      input: "lstm_model_rnn_net_while_maximum_iterations_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_1"
      op: "TensorListPushBack"
      input: "tensorlistpushback_1_lstm_model_rnn_net_while_emptytensorlist_1"
      input: "placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_2"
      op: "TensorListPushBack"
      input: "tensorlistpushback_2_lstm_model_rnn_net_while_emptytensorlist_2"
      input: "placeholder_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_VARIANT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
        }
      }
    }
    node_def {
      name: "TensorListPushBack_3"
      op: "TensorListPushBack"
      input: "tensorlistpushback_3_lstm_model_rnn_net_while_emptytensorlist_3"
      input: "placeholder_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_4"
      op: "TensorListPushBack"
      input: "tensorlistpushback_4_lstm_model_rnn_net_while_emptytensorlist_4"
      input: "placeholder_3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_5"
      op: "TensorListPushBack"
      input: "tensorlistpushback_5_lstm_model_rnn_net_while_emptytensorlist_5"
      input: "placeholder_4"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_6"
      op: "TensorListPushBack"
      input: "tensorlistpushback_6_lstm_model_rnn_net_while_emptytensorlist_6"
      input: "placeholder_5"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_7"
      op: "TensorListPushBack"
      input: "tensorlistpushback_7_lstm_model_rnn_net_while_emptytensorlist_7"
      input: "TensorArrayV2Read/TensorListGetItem/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_8"
      op: "TensorListPushBack"
      input: "tensorlistpushback_8_lstm_model_rnn_net_while_emptytensorlist_8"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_9"
      op: "TensorListPushBack"
      input: "tensorlistpushback_9_lstm_model_rnn_net_while_emptytensorlist_9"
      input: "stacked_rnn_cells/LSTM_Layer_0/split/split_dim:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_10"
      op: "TensorListPushBack"
      input: "tensorlistpushback_10_lstm_model_rnn_net_while_emptytensorlist_10"
      input: "stacked_rnn_cells/LSTM_Layer_0/split/ReadVariableOp:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_11"
      op: "TensorListPushBack"
      input: "tensorlistpushback_11_lstm_model_rnn_net_while_emptytensorlist_11"
      input: "stacked_rnn_cells/LSTM_Layer_0/split:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_12"
      op: "TensorListPushBack"
      input: "tensorlistpushback_12_lstm_model_rnn_net_while_emptytensorlist_12"
      input: "stacked_rnn_cells/LSTM_Layer_0/split:output:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_13"
      op: "TensorListPushBack"
      input: "tensorlistpushback_13_lstm_model_rnn_net_while_emptytensorlist_13"
      input: "stacked_rnn_cells/LSTM_Layer_0/split:output:2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_14"
      op: "TensorListPushBack"
      input: "tensorlistpushback_14_lstm_model_rnn_net_while_emptytensorlist_14"
      input: "stacked_rnn_cells/LSTM_Layer_0/split:output:3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_15"
      op: "TensorListPushBack"
      input: "tensorlistpushback_15_lstm_model_rnn_net_while_emptytensorlist_15"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_16"
      op: "TensorListPushBack"
      input: "tensorlistpushback_16_lstm_model_rnn_net_while_emptytensorlist_16"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_1:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_17"
      op: "TensorListPushBack"
      input: "tensorlistpushback_17_lstm_model_rnn_net_while_emptytensorlist_17"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_2:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_18"
      op: "TensorListPushBack"
      input: "tensorlistpushback_18_lstm_model_rnn_net_while_emptytensorlist_18"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_3:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_19"
      op: "TensorListPushBack"
      input: "tensorlistpushback_19_lstm_model_rnn_net_while_emptytensorlist_19"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1/split_dim:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_20"
      op: "TensorListPushBack"
      input: "tensorlistpushback_20_lstm_model_rnn_net_while_emptytensorlist_20"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1/ReadVariableOp:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_21"
      op: "TensorListPushBack"
      input: "tensorlistpushback_21_lstm_model_rnn_net_while_emptytensorlist_21"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_22"
      op: "TensorListPushBack"
      input: "tensorlistpushback_22_lstm_model_rnn_net_while_emptytensorlist_22"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1:output:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_23"
      op: "TensorListPushBack"
      input: "tensorlistpushback_23_lstm_model_rnn_net_while_emptytensorlist_23"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1:output:2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_24"
      op: "TensorListPushBack"
      input: "tensorlistpushback_24_lstm_model_rnn_net_while_emptytensorlist_24"
      input: "stacked_rnn_cells/LSTM_Layer_0/split_1:output:3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_25"
      op: "TensorListPushBack"
      input: "tensorlistpushback_25_lstm_model_rnn_net_while_emptytensorlist_25"
      input: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_26"
      op: "TensorListPushBack"
      input: "tensorlistpushback_26_lstm_model_rnn_net_while_emptytensorlist_26"
      input: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_27"
      op: "TensorListPushBack"
      input: "tensorlistpushback_27_lstm_model_rnn_net_while_emptytensorlist_27"
      input: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_28"
      op: "TensorListPushBack"
      input: "tensorlistpushback_28_lstm_model_rnn_net_while_emptytensorlist_28"
      input: "stacked_rnn_cells/LSTM_Layer_0/BiasAdd_3:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_29"
      op: "TensorListPushBack"
      input: "tensorlistpushback_29_lstm_model_rnn_net_while_emptytensorlist_29"
      input: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_30"
      op: "TensorListPushBack"
      input: "tensorlistpushback_30_lstm_model_rnn_net_while_emptytensorlist_30"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_31"
      op: "TensorListPushBack"
      input: "tensorlistpushback_31_lstm_model_rnn_net_while_emptytensorlist_31"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_32"
      op: "TensorListPushBack"
      input: "tensorlistpushback_32_lstm_model_rnn_net_while_emptytensorlist_32"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice/stack_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_33"
      op: "TensorListPushBack"
      input: "tensorlistpushback_33_lstm_model_rnn_net_while_emptytensorlist_33"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_34"
      op: "TensorListPushBack"
      input: "tensorlistpushback_34_lstm_model_rnn_net_while_emptytensorlist_34"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_4:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_35"
      op: "TensorListPushBack"
      input: "tensorlistpushback_35_lstm_model_rnn_net_while_emptytensorlist_35"
      input: "stacked_rnn_cells/LSTM_Layer_0/add:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_36"
      op: "TensorListPushBack"
      input: "tensorlistpushback_36_lstm_model_rnn_net_while_emptytensorlist_36"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_37"
      op: "TensorListPushBack"
      input: "tensorlistpushback_37_lstm_model_rnn_net_while_emptytensorlist_37"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_38"
      op: "TensorListPushBack"
      input: "tensorlistpushback_38_lstm_model_rnn_net_while_emptytensorlist_38"
      input: "stacked_rnn_cells/LSTM_Layer_0/Mul:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_39"
      op: "TensorListPushBack"
      input: "tensorlistpushback_39_lstm_model_rnn_net_while_emptytensorlist_39"
      input: "stacked_rnn_cells/LSTM_Layer_0/Add_1:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_40"
      op: "TensorListPushBack"
      input: "tensorlistpushback_40_lstm_model_rnn_net_while_emptytensorlist_40"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_41"
      op: "TensorListPushBack"
      input: "tensorlistpushback_41_lstm_model_rnn_net_while_emptytensorlist_41"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_42"
      op: "TensorListPushBack"
      input: "tensorlistpushback_42_lstm_model_rnn_net_while_emptytensorlist_42"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_43"
      op: "TensorListPushBack"
      input: "tensorlistpushback_43_lstm_model_rnn_net_while_emptytensorlist_43"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_44"
      op: "TensorListPushBack"
      input: "tensorlistpushback_44_lstm_model_rnn_net_while_emptytensorlist_44"
      input: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_1:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_45"
      op: "TensorListPushBack"
      input: "tensorlistpushback_45_lstm_model_rnn_net_while_emptytensorlist_45"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_46"
      op: "TensorListPushBack"
      input: "tensorlistpushback_46_lstm_model_rnn_net_while_emptytensorlist_46"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_47"
      op: "TensorListPushBack"
      input: "tensorlistpushback_47_lstm_model_rnn_net_while_emptytensorlist_47"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1/stack_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_48"
      op: "TensorListPushBack"
      input: "tensorlistpushback_48_lstm_model_rnn_net_while_emptytensorlist_48"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_49"
      op: "TensorListPushBack"
      input: "tensorlistpushback_49_lstm_model_rnn_net_while_emptytensorlist_49"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_5:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_50"
      op: "TensorListPushBack"
      input: "tensorlistpushback_50_lstm_model_rnn_net_while_emptytensorlist_50"
      input: "stacked_rnn_cells/LSTM_Layer_0/add_2:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_51"
      op: "TensorListPushBack"
      input: "tensorlistpushback_51_lstm_model_rnn_net_while_emptytensorlist_51"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_52"
      op: "TensorListPushBack"
      input: "tensorlistpushback_52_lstm_model_rnn_net_while_emptytensorlist_52"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_3:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_53"
      op: "TensorListPushBack"
      input: "tensorlistpushback_53_lstm_model_rnn_net_while_emptytensorlist_53"
      input: "stacked_rnn_cells/LSTM_Layer_0/Mul_1:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_54"
      op: "TensorListPushBack"
      input: "tensorlistpushback_54_lstm_model_rnn_net_while_emptytensorlist_54"
      input: "stacked_rnn_cells/LSTM_Layer_0/Add_3:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_55"
      op: "TensorListPushBack"
      input: "tensorlistpushback_55_lstm_model_rnn_net_while_emptytensorlist_55"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_56"
      op: "TensorListPushBack"
      input: "tensorlistpushback_56_lstm_model_rnn_net_while_emptytensorlist_56"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_57"
      op: "TensorListPushBack"
      input: "tensorlistpushback_57_lstm_model_rnn_net_while_emptytensorlist_57"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_58"
      op: "TensorListPushBack"
      input: "tensorlistpushback_58_lstm_model_rnn_net_while_emptytensorlist_58"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_59"
      op: "TensorListPushBack"
      input: "tensorlistpushback_59_lstm_model_rnn_net_while_emptytensorlist_59"
      input: "stacked_rnn_cells/LSTM_Layer_0/mul_2:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_60"
      op: "TensorListPushBack"
      input: "tensorlistpushback_60_lstm_model_rnn_net_while_emptytensorlist_60"
      input: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_2:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_61"
      op: "TensorListPushBack"
      input: "tensorlistpushback_61_lstm_model_rnn_net_while_emptytensorlist_61"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_62"
      op: "TensorListPushBack"
      input: "tensorlistpushback_62_lstm_model_rnn_net_while_emptytensorlist_62"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_63"
      op: "TensorListPushBack"
      input: "tensorlistpushback_63_lstm_model_rnn_net_while_emptytensorlist_63"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2/stack_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_64"
      op: "TensorListPushBack"
      input: "tensorlistpushback_64_lstm_model_rnn_net_while_emptytensorlist_64"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_65"
      op: "TensorListPushBack"
      input: "tensorlistpushback_65_lstm_model_rnn_net_while_emptytensorlist_65"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_6:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_66"
      op: "TensorListPushBack"
      input: "tensorlistpushback_66_lstm_model_rnn_net_while_emptytensorlist_66"
      input: "stacked_rnn_cells/LSTM_Layer_0/add_4:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_67"
      op: "TensorListPushBack"
      input: "tensorlistpushback_67_lstm_model_rnn_net_while_emptytensorlist_67"
      input: "stacked_rnn_cells/LSTM_Layer_0/Tanh:y:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_68"
      op: "TensorListPushBack"
      input: "tensorlistpushback_68_lstm_model_rnn_net_while_emptytensorlist_68"
      input: "stacked_rnn_cells/LSTM_Layer_0/mul_3:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_69"
      op: "TensorListPushBack"
      input: "tensorlistpushback_69_lstm_model_rnn_net_while_emptytensorlist_69"
      input: "stacked_rnn_cells/LSTM_Layer_0/add_5:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_70"
      op: "TensorListPushBack"
      input: "tensorlistpushback_70_lstm_model_rnn_net_while_emptytensorlist_70"
      input: "stacked_rnn_cells/LSTM_Layer_0/ReadVariableOp_3:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_71"
      op: "TensorListPushBack"
      input: "tensorlistpushback_71_lstm_model_rnn_net_while_emptytensorlist_71"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_72"
      op: "TensorListPushBack"
      input: "tensorlistpushback_72_lstm_model_rnn_net_while_emptytensorlist_72"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_73"
      op: "TensorListPushBack"
      input: "tensorlistpushback_73_lstm_model_rnn_net_while_emptytensorlist_73"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3/stack_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_74"
      op: "TensorListPushBack"
      input: "tensorlistpushback_74_lstm_model_rnn_net_while_emptytensorlist_74"
      input: "stacked_rnn_cells/LSTM_Layer_0/strided_slice_3:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_75"
      op: "TensorListPushBack"
      input: "tensorlistpushback_75_lstm_model_rnn_net_while_emptytensorlist_75"
      input: "stacked_rnn_cells/LSTM_Layer_0/MatMul_7:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_76"
      op: "TensorListPushBack"
      input: "tensorlistpushback_76_lstm_model_rnn_net_while_emptytensorlist_76"
      input: "stacked_rnn_cells/LSTM_Layer_0/add_6:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_77"
      op: "TensorListPushBack"
      input: "tensorlistpushback_77_lstm_model_rnn_net_while_emptytensorlist_77"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_4:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_78"
      op: "TensorListPushBack"
      input: "tensorlistpushback_78_lstm_model_rnn_net_while_emptytensorlist_78"
      input: "stacked_rnn_cells/LSTM_Layer_0/Const_5:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_79"
      op: "TensorListPushBack"
      input: "tensorlistpushback_79_lstm_model_rnn_net_while_emptytensorlist_79"
      input: "stacked_rnn_cells/LSTM_Layer_0/Mul_4:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_80"
      op: "TensorListPushBack"
      input: "tensorlistpushback_80_lstm_model_rnn_net_while_emptytensorlist_80"
      input: "stacked_rnn_cells/LSTM_Layer_0/Add_7:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_81"
      op: "TensorListPushBack"
      input: "tensorlistpushback_81_lstm_model_rnn_net_while_emptytensorlist_81"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_82"
      op: "TensorListPushBack"
      input: "tensorlistpushback_82_lstm_model_rnn_net_while_emptytensorlist_82"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_83"
      op: "TensorListPushBack"
      input: "tensorlistpushback_83_lstm_model_rnn_net_while_emptytensorlist_83"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_84"
      op: "TensorListPushBack"
      input: "tensorlistpushback_84_lstm_model_rnn_net_while_emptytensorlist_84"
      input: "stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_85"
      op: "TensorListPushBack"
      input: "tensorlistpushback_85_lstm_model_rnn_net_while_emptytensorlist_85"
      input: "stacked_rnn_cells/LSTM_Layer_0/Tanh_1:y:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_86"
      op: "TensorListPushBack"
      input: "tensorlistpushback_86_lstm_model_rnn_net_while_emptytensorlist_86"
      input: "stacked_rnn_cells/LSTM_Layer_0/mul_5:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_87"
      op: "TensorListPushBack"
      input: "tensorlistpushback_87_lstm_model_rnn_net_while_emptytensorlist_87"
      input: "stacked_rnn_cells/LSTM_Layer_1/split/split_dim:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_88"
      op: "TensorListPushBack"
      input: "tensorlistpushback_88_lstm_model_rnn_net_while_emptytensorlist_88"
      input: "stacked_rnn_cells/LSTM_Layer_1/split/ReadVariableOp:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_89"
      op: "TensorListPushBack"
      input: "tensorlistpushback_89_lstm_model_rnn_net_while_emptytensorlist_89"
      input: "stacked_rnn_cells/LSTM_Layer_1/split:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_90"
      op: "TensorListPushBack"
      input: "tensorlistpushback_90_lstm_model_rnn_net_while_emptytensorlist_90"
      input: "stacked_rnn_cells/LSTM_Layer_1/split:output:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_91"
      op: "TensorListPushBack"
      input: "tensorlistpushback_91_lstm_model_rnn_net_while_emptytensorlist_91"
      input: "stacked_rnn_cells/LSTM_Layer_1/split:output:2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_92"
      op: "TensorListPushBack"
      input: "tensorlistpushback_92_lstm_model_rnn_net_while_emptytensorlist_92"
      input: "stacked_rnn_cells/LSTM_Layer_1/split:output:3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_93"
      op: "TensorListPushBack"
      input: "tensorlistpushback_93_lstm_model_rnn_net_while_emptytensorlist_93"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_94"
      op: "TensorListPushBack"
      input: "tensorlistpushback_94_lstm_model_rnn_net_while_emptytensorlist_94"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_1:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_95"
      op: "TensorListPushBack"
      input: "tensorlistpushback_95_lstm_model_rnn_net_while_emptytensorlist_95"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_2:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_96"
      op: "TensorListPushBack"
      input: "tensorlistpushback_96_lstm_model_rnn_net_while_emptytensorlist_96"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_3:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_97"
      op: "TensorListPushBack"
      input: "tensorlistpushback_97_lstm_model_rnn_net_while_emptytensorlist_97"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1/split_dim:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_98"
      op: "TensorListPushBack"
      input: "tensorlistpushback_98_lstm_model_rnn_net_while_emptytensorlist_98"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1/ReadVariableOp:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_99"
      op: "TensorListPushBack"
      input: "tensorlistpushback_99_lstm_model_rnn_net_while_emptytensorlist_99"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_100"
      op: "TensorListPushBack"
      input: "tensorlistpushback_100_lstm_model_rnn_net_while_emptytensorlist_100"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1:output:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_101"
      op: "TensorListPushBack"
      input: "tensorlistpushback_101_lstm_model_rnn_net_while_emptytensorlist_101"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1:output:2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_102"
      op: "TensorListPushBack"
      input: "tensorlistpushback_102_lstm_model_rnn_net_while_emptytensorlist_102"
      input: "stacked_rnn_cells/LSTM_Layer_1/split_1:output:3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_103"
      op: "TensorListPushBack"
      input: "tensorlistpushback_103_lstm_model_rnn_net_while_emptytensorlist_103"
      input: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_104"
      op: "TensorListPushBack"
      input: "tensorlistpushback_104_lstm_model_rnn_net_while_emptytensorlist_104"
      input: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_105"
      op: "TensorListPushBack"
      input: "tensorlistpushback_105_lstm_model_rnn_net_while_emptytensorlist_105"
      input: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_106"
      op: "TensorListPushBack"
      input: "tensorlistpushback_106_lstm_model_rnn_net_while_emptytensorlist_106"
      input: "stacked_rnn_cells/LSTM_Layer_1/BiasAdd_3:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_107"
      op: "TensorListPushBack"
      input: "tensorlistpushback_107_lstm_model_rnn_net_while_emptytensorlist_107"
      input: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_108"
      op: "TensorListPushBack"
      input: "tensorlistpushback_108_lstm_model_rnn_net_while_emptytensorlist_108"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_109"
      op: "TensorListPushBack"
      input: "tensorlistpushback_109_lstm_model_rnn_net_while_emptytensorlist_109"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_110"
      op: "TensorListPushBack"
      input: "tensorlistpushback_110_lstm_model_rnn_net_while_emptytensorlist_110"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice/stack_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_111"
      op: "TensorListPushBack"
      input: "tensorlistpushback_111_lstm_model_rnn_net_while_emptytensorlist_111"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_112"
      op: "TensorListPushBack"
      input: "tensorlistpushback_112_lstm_model_rnn_net_while_emptytensorlist_112"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_4:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_113"
      op: "TensorListPushBack"
      input: "tensorlistpushback_113_lstm_model_rnn_net_while_emptytensorlist_113"
      input: "stacked_rnn_cells/LSTM_Layer_1/add:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_114"
      op: "TensorListPushBack"
      input: "tensorlistpushback_114_lstm_model_rnn_net_while_emptytensorlist_114"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_115"
      op: "TensorListPushBack"
      input: "tensorlistpushback_115_lstm_model_rnn_net_while_emptytensorlist_115"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_116"
      op: "TensorListPushBack"
      input: "tensorlistpushback_116_lstm_model_rnn_net_while_emptytensorlist_116"
      input: "stacked_rnn_cells/LSTM_Layer_1/Mul:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_117"
      op: "TensorListPushBack"
      input: "tensorlistpushback_117_lstm_model_rnn_net_while_emptytensorlist_117"
      input: "stacked_rnn_cells/LSTM_Layer_1/Add_1:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_118"
      op: "TensorListPushBack"
      input: "tensorlistpushback_118_lstm_model_rnn_net_while_emptytensorlist_118"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_119"
      op: "TensorListPushBack"
      input: "tensorlistpushback_119_lstm_model_rnn_net_while_emptytensorlist_119"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_120"
      op: "TensorListPushBack"
      input: "tensorlistpushback_120_lstm_model_rnn_net_while_emptytensorlist_120"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_121"
      op: "TensorListPushBack"
      input: "tensorlistpushback_121_lstm_model_rnn_net_while_emptytensorlist_121"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_122"
      op: "TensorListPushBack"
      input: "tensorlistpushback_122_lstm_model_rnn_net_while_emptytensorlist_122"
      input: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_1:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_123"
      op: "TensorListPushBack"
      input: "tensorlistpushback_123_lstm_model_rnn_net_while_emptytensorlist_123"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_124"
      op: "TensorListPushBack"
      input: "tensorlistpushback_124_lstm_model_rnn_net_while_emptytensorlist_124"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_125"
      op: "TensorListPushBack"
      input: "tensorlistpushback_125_lstm_model_rnn_net_while_emptytensorlist_125"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1/stack_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_126"
      op: "TensorListPushBack"
      input: "tensorlistpushback_126_lstm_model_rnn_net_while_emptytensorlist_126"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_127"
      op: "TensorListPushBack"
      input: "tensorlistpushback_127_lstm_model_rnn_net_while_emptytensorlist_127"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_5:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_128"
      op: "TensorListPushBack"
      input: "tensorlistpushback_128_lstm_model_rnn_net_while_emptytensorlist_128"
      input: "stacked_rnn_cells/LSTM_Layer_1/add_2:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_129"
      op: "TensorListPushBack"
      input: "tensorlistpushback_129_lstm_model_rnn_net_while_emptytensorlist_129"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_130"
      op: "TensorListPushBack"
      input: "tensorlistpushback_130_lstm_model_rnn_net_while_emptytensorlist_130"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_3:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_131"
      op: "TensorListPushBack"
      input: "tensorlistpushback_131_lstm_model_rnn_net_while_emptytensorlist_131"
      input: "stacked_rnn_cells/LSTM_Layer_1/Mul_1:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_132"
      op: "TensorListPushBack"
      input: "tensorlistpushback_132_lstm_model_rnn_net_while_emptytensorlist_132"
      input: "stacked_rnn_cells/LSTM_Layer_1/Add_3:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_133"
      op: "TensorListPushBack"
      input: "tensorlistpushback_133_lstm_model_rnn_net_while_emptytensorlist_133"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_134"
      op: "TensorListPushBack"
      input: "tensorlistpushback_134_lstm_model_rnn_net_while_emptytensorlist_134"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_135"
      op: "TensorListPushBack"
      input: "tensorlistpushback_135_lstm_model_rnn_net_while_emptytensorlist_135"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_136"
      op: "TensorListPushBack"
      input: "tensorlistpushback_136_lstm_model_rnn_net_while_emptytensorlist_136"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_137"
      op: "TensorListPushBack"
      input: "tensorlistpushback_137_lstm_model_rnn_net_while_emptytensorlist_137"
      input: "stacked_rnn_cells/LSTM_Layer_1/mul_2:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_138"
      op: "TensorListPushBack"
      input: "tensorlistpushback_138_lstm_model_rnn_net_while_emptytensorlist_138"
      input: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_2:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_139"
      op: "TensorListPushBack"
      input: "tensorlistpushback_139_lstm_model_rnn_net_while_emptytensorlist_139"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_140"
      op: "TensorListPushBack"
      input: "tensorlistpushback_140_lstm_model_rnn_net_while_emptytensorlist_140"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_141"
      op: "TensorListPushBack"
      input: "tensorlistpushback_141_lstm_model_rnn_net_while_emptytensorlist_141"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2/stack_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_142"
      op: "TensorListPushBack"
      input: "tensorlistpushback_142_lstm_model_rnn_net_while_emptytensorlist_142"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_143"
      op: "TensorListPushBack"
      input: "tensorlistpushback_143_lstm_model_rnn_net_while_emptytensorlist_143"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_6:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_144"
      op: "TensorListPushBack"
      input: "tensorlistpushback_144_lstm_model_rnn_net_while_emptytensorlist_144"
      input: "stacked_rnn_cells/LSTM_Layer_1/add_4:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_145"
      op: "TensorListPushBack"
      input: "tensorlistpushback_145_lstm_model_rnn_net_while_emptytensorlist_145"
      input: "stacked_rnn_cells/LSTM_Layer_1/Tanh:y:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_146"
      op: "TensorListPushBack"
      input: "tensorlistpushback_146_lstm_model_rnn_net_while_emptytensorlist_146"
      input: "stacked_rnn_cells/LSTM_Layer_1/mul_3:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_147"
      op: "TensorListPushBack"
      input: "tensorlistpushback_147_lstm_model_rnn_net_while_emptytensorlist_147"
      input: "stacked_rnn_cells/LSTM_Layer_1/add_5:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_148"
      op: "TensorListPushBack"
      input: "tensorlistpushback_148_lstm_model_rnn_net_while_emptytensorlist_148"
      input: "stacked_rnn_cells/LSTM_Layer_1/ReadVariableOp_3:value:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_149"
      op: "TensorListPushBack"
      input: "tensorlistpushback_149_lstm_model_rnn_net_while_emptytensorlist_149"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_150"
      op: "TensorListPushBack"
      input: "tensorlistpushback_150_lstm_model_rnn_net_while_emptytensorlist_150"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack_1:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_151"
      op: "TensorListPushBack"
      input: "tensorlistpushback_151_lstm_model_rnn_net_while_emptytensorlist_151"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3/stack_2:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_152"
      op: "TensorListPushBack"
      input: "tensorlistpushback_152_lstm_model_rnn_net_while_emptytensorlist_152"
      input: "stacked_rnn_cells/LSTM_Layer_1/strided_slice_3:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_153"
      op: "TensorListPushBack"
      input: "tensorlistpushback_153_lstm_model_rnn_net_while_emptytensorlist_153"
      input: "stacked_rnn_cells/LSTM_Layer_1/MatMul_7:product:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_154"
      op: "TensorListPushBack"
      input: "tensorlistpushback_154_lstm_model_rnn_net_while_emptytensorlist_154"
      input: "stacked_rnn_cells/LSTM_Layer_1/add_6:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_155"
      op: "TensorListPushBack"
      input: "tensorlistpushback_155_lstm_model_rnn_net_while_emptytensorlist_155"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_4:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_156"
      op: "TensorListPushBack"
      input: "tensorlistpushback_156_lstm_model_rnn_net_while_emptytensorlist_156"
      input: "stacked_rnn_cells/LSTM_Layer_1/Const_5:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_157"
      op: "TensorListPushBack"
      input: "tensorlistpushback_157_lstm_model_rnn_net_while_emptytensorlist_157"
      input: "stacked_rnn_cells/LSTM_Layer_1/Mul_4:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_158"
      op: "TensorListPushBack"
      input: "tensorlistpushback_158_lstm_model_rnn_net_while_emptytensorlist_158"
      input: "stacked_rnn_cells/LSTM_Layer_1/Add_7:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_159"
      op: "TensorListPushBack"
      input: "tensorlistpushback_159_lstm_model_rnn_net_while_emptytensorlist_159"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_160"
      op: "TensorListPushBack"
      input: "tensorlistpushback_160_lstm_model_rnn_net_while_emptytensorlist_160"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_161"
      op: "TensorListPushBack"
      input: "tensorlistpushback_161_lstm_model_rnn_net_while_emptytensorlist_161"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_162"
      op: "TensorListPushBack"
      input: "tensorlistpushback_162_lstm_model_rnn_net_while_emptytensorlist_162"
      input: "stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_163"
      op: "TensorListPushBack"
      input: "tensorlistpushback_163_lstm_model_rnn_net_while_emptytensorlist_163"
      input: "stacked_rnn_cells/LSTM_Layer_1/Tanh_1:y:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_164"
      op: "TensorListPushBack"
      input: "tensorlistpushback_164_lstm_model_rnn_net_while_emptytensorlist_164"
      input: "stacked_rnn_cells/LSTM_Layer_1/mul_5:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_165"
      op: "TensorListPushBack"
      input: "tensorlistpushback_165_lstm_model_rnn_net_while_emptytensorlist_165"
      input: "TensorArrayV2Write/TensorListSetItem/index:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_166"
      op: "TensorListPushBack"
      input: "tensorlistpushback_166_lstm_model_rnn_net_while_emptytensorlist_166"
      input: "TensorArrayV2Write/TensorListSetItem:output_handle:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_VARIANT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
        }
      }
    }
    node_def {
      name: "TensorListPushBack_167"
      op: "TensorListPushBack"
      input: "tensorlistpushback_167_lstm_model_rnn_net_while_emptytensorlist_167"
      input: "add/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_168"
      op: "TensorListPushBack"
      input: "tensorlistpushback_168_lstm_model_rnn_net_while_emptytensorlist_168"
      input: "add_0:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_169"
      op: "TensorListPushBack"
      input: "tensorlistpushback_169_lstm_model_rnn_net_while_emptytensorlist_169"
      input: "add_1/y:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_170"
      op: "TensorListPushBack"
      input: "tensorlistpushback_170_lstm_model_rnn_net_while_emptytensorlist_170"
      input: "add_1_0:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    ret {
      key: "add"
      value: "add_0:z:0"
    }
    ret {
      key: "add_1"
      value: "add_1_0:z:0"
    }
    ret {
      key: "lstm_model_rnn_net_strided_slice_1"
      value: "lstm_model_rnn_net_strided_slice_1_0"
    }
    ret {
      key: "lstm_model_rnn_net_while_maximum_iterations"
      value: "lstm_model_rnn_net_while_maximum_iterations_0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_0_add_5"
      value: "stacked_rnn_cells/LSTM_Layer_0/add_5:z:0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_0_mul_5"
      value: "stacked_rnn_cells/LSTM_Layer_0/mul_5:z:0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_0_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_recurrent_kernel"
      value: "stacked_rnn_cells_lstm_layer_0_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_recurrent_kernel_0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_0_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_bias"
      value: "stacked_rnn_cells_lstm_layer_0_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_bias_0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_0_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_kernel"
      value: "stacked_rnn_cells_lstm_layer_0_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_0_kernel_0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_1_add_5"
      value: "stacked_rnn_cells/LSTM_Layer_1/add_5:z:0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_1_mul_5"
      value: "stacked_rnn_cells/LSTM_Layer_1/mul_5:z:0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_recurrent_kernel"
      value: "stacked_rnn_cells_lstm_layer_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_recurrent_kernel_0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_1_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_bias"
      value: "stacked_rnn_cells_lstm_layer_1_split_1_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_bias_0"
    }
    ret {
      key: "stacked_rnn_cells_lstm_layer_1_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_kernel"
      value: "stacked_rnn_cells_lstm_layer_1_split_readvariableop_rnn_net_stacked_rnn_cells_lstm_layer_1_kernel_0"
    }
    ret {
      key: "tensorarrayv2read_tensorlistgetitem_lstm_model_rnn_net_tensorarrayunstack_tensorlistfromtensor"
      value: "tensorarrayv2read_tensorlistgetitem_lstm_model_rnn_net_tensorarrayunstack_tensorlistfromtensor_0"
    }
    ret {
      key: "tensorarrayv2write_tensorlistsetitem"
      value: "TensorArrayV2Write/TensorListSetItem:output_handle:0"
    }
    ret {
      key: "tensorlistpushback"
      value: "TensorListPushBack:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_1"
      value: "TensorListPushBack_1:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_10"
      value: "TensorListPushBack_10:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_100"
      value: "TensorListPushBack_100:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_101"
      value: "TensorListPushBack_101:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_102"
      value: "TensorListPushBack_102:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_103"
      value: "TensorListPushBack_103:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_104"
      value: "TensorListPushBack_104:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_105"
      value: "TensorListPushBack_105:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_106"
      value: "TensorListPushBack_106:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_107"
      value: "TensorListPushBack_107:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_108"
      value: "TensorListPushBack_108:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_109"
      value: "TensorListPushBack_109:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_11"
      value: "TensorListPushBack_11:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_110"
      value: "TensorListPushBack_110:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_111"
      value: "TensorListPushBack_111:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_112"
      value: "TensorListPushBack_112:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_113"
      value: "TensorListPushBack_113:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_114"
      value: "TensorListPushBack_114:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_115"
      value: "TensorListPushBack_115:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_116"
      value: "TensorListPushBack_116:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_117"
      value: "TensorListPushBack_117:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_118"
      value: "TensorListPushBack_118:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_119"
      value: "TensorListPushBack_119:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_12"
      value: "TensorListPushBack_12:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_120"
      value: "TensorListPushBack_120:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_121"
      value: "TensorListPushBack_121:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_122"
      value: "TensorListPushBack_122:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_123"
      value: "TensorListPushBack_123:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_124"
      value: "TensorListPushBack_124:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_125"
      value: "TensorListPushBack_125:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_126"
      value: "TensorListPushBack_126:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_127"
      value: "TensorListPushBack_127:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_128"
      value: "TensorListPushBack_128:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_129"
      value: "TensorListPushBack_129:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_13"
      value: "TensorListPushBack_13:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_130"
      value: "TensorListPushBack_130:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_131"
      value: "TensorListPushBack_131:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_132"
      value: "TensorListPushBack_132:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_133"
      value: "TensorListPushBack_133:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_134"
      value: "TensorListPushBack_134:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_135"
      value: "TensorListPushBack_135:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_136"
      value: "TensorListPushBack_136:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_137"
      value: "TensorListPushBack_137:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_138"
      value: "TensorListPushBack_138:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_139"
      value: "TensorListPushBack_139:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_14"
      value: "TensorListPushBack_14:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_140"
      value: "TensorListPushBack_140:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_141"
      value: "TensorListPushBack_141:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_142"
      value: "TensorListPushBack_142:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_143"
      value: "TensorListPushBack_143:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_144"
      value: "TensorListPushBack_144:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_145"
      value: "TensorListPushBack_145:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_146"
      value: "TensorListPushBack_146:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_147"
      value: "TensorListPushBack_147:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_148"
      value: "TensorListPushBack_148:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_149"
      value: "TensorListPushBack_149:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_15"
      value: "TensorListPushBack_15:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_150"
      value: "TensorListPushBack_150:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_151"
      value: "TensorListPushBack_151:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_152"
      value: "TensorListPushBack_152:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_153"
      value: "TensorListPushBack_153:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_154"
      value: "TensorListPushBack_154:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_155"
      value: "TensorListPushBack_155:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_156"
      value: "TensorListPushBack_156:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_157"
      value: "TensorListPushBack_157:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_158"
      value: "TensorListPushBack_158:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_159"
      value: "TensorListPushBack_159:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_16"
      value: "TensorListPushBack_16:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_160"
      value: "TensorListPushBack_160:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_161"
      value: "TensorListPushBack_161:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_162"
      value: "TensorListPushBack_162:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_163"
      value: "TensorListPushBack_163:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_164"
      value: "TensorListPushBack_164:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_165"
      value: "TensorListPushBack_165:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_166"
      value: "TensorListPushBack_166:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_167"
      value: "TensorListPushBack_167:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_168"
      value: "TensorListPushBack_168:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_169"
      value: "TensorListPushBack_169:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_17"
      value: "TensorListPushBack_17:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_170"
      value: "TensorListPushBack_170:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_18"
      value: "TensorListPushBack_18:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_19"
      value: "TensorListPushBack_19:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_2"
      value: "TensorListPushBack_2:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_20"
      value: "TensorListPushBack_20:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_21"
      value: "TensorListPushBack_21:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_22"
      value: "TensorListPushBack_22:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_23"
      value: "TensorListPushBack_23:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_24"
      value: "TensorListPushBack_24:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_25"
      value: "TensorListPushBack_25:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_26"
      value: "TensorListPushBack_26:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_27"
      value: "TensorListPushBack_27:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_28"
      value: "TensorListPushBack_28:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_29"
      value: "TensorListPushBack_29:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_3"
      value: "TensorListPushBack_3:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_30"
      value: "TensorListPushBack_30:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_31"
      value: "TensorListPushBack_31:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_32"
      value: "TensorListPushBack_32:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_33"
      value: "TensorListPushBack_33:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_34"
      value: "TensorListPushBack_34:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_35"
      value: "TensorListPushBack_35:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_36"
      value: "TensorListPushBack_36:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_37"
      value: "TensorListPushBack_37:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_38"
      value: "TensorListPushBack_38:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_39"
      value: "TensorListPushBack_39:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_4"
      value: "TensorListPushBack_4:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_40"
      value: "TensorListPushBack_40:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_41"
      value: "TensorListPushBack_41:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_42"
      value: "TensorListPushBack_42:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_43"
      value: "TensorListPushBack_43:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_44"
      value: "TensorListPushBack_44:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_45"
      value: "TensorListPushBack_45:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_46"
      value: "TensorListPushBack_46:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_47"
      value: "TensorListPushBack_47:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_48"
      value: "TensorListPushBack_48:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_49"
      value: "TensorListPushBack_49:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_5"
      value: "TensorListPushBack_5:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_50"
      value: "TensorListPushBack_50:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_51"
      value: "TensorListPushBack_51:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_52"
      value: "TensorListPushBack_52:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_53"
      value: "TensorListPushBack_53:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_54"
      value: "TensorListPushBack_54:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_55"
      value: "TensorListPushBack_55:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_56"
      value: "TensorListPushBack_56:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_57"
      value: "TensorListPushBack_57:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_58"
      value: "TensorListPushBack_58:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_59"
      value: "TensorListPushBack_59:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_6"
      value: "TensorListPushBack_6:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_60"
      value: "TensorListPushBack_60:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_61"
      value: "TensorListPushBack_61:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_62"
      value: "TensorListPushBack_62:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_63"
      value: "TensorListPushBack_63:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_64"
      value: "TensorListPushBack_64:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_65"
      value: "TensorListPushBack_65:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_66"
      value: "TensorListPushBack_66:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_67"
      value: "TensorListPushBack_67:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_68"
      value: "TensorListPushBack_68:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_69"
      value: "TensorListPushBack_69:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_7"
      value: "TensorListPushBack_7:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_70"
      value: "TensorListPushBack_70:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_71"
      value: "TensorListPushBack_71:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_72"
      value: "TensorListPushBack_72:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_73"
      value: "TensorListPushBack_73:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_74"
      value: "TensorListPushBack_74:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_75"
      value: "TensorListPushBack_75:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_76"
      value: "TensorListPushBack_76:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_77"
      value: "TensorListPushBack_77:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_78"
      value: "TensorListPushBack_78:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_79"
      value: "TensorListPushBack_79:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_8"
      value: "TensorListPushBack_8:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_80"
      value: "TensorListPushBack_80:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_81"
      value: "TensorListPushBack_81:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_82"
      value: "TensorListPushBack_82:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_83"
      value: "TensorListPushBack_83:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_84"
      value: "TensorListPushBack_84:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_85"
      value: "TensorListPushBack_85:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_86"
      value: "TensorListPushBack_86:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_87"
      value: "TensorListPushBack_87:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_88"
      value: "TensorListPushBack_88:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_89"
      value: "TensorListPushBack_89:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_9"
      value: "TensorListPushBack_9:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_90"
      value: "TensorListPushBack_90:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_91"
      value: "TensorListPushBack_91:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_92"
      value: "TensorListPushBack_92:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_93"
      value: "TensorListPushBack_93:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_94"
      value: "TensorListPushBack_94:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_95"
      value: "TensorListPushBack_95:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_96"
      value: "TensorListPushBack_96:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_97"
      value: "TensorListPushBack_97:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_98"
      value: "TensorListPushBack_98:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_99"
      value: "TensorListPushBack_99:output_handle:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 17
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 18
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 19
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 20
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 21
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 22
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 23
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 24
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 25
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 26
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 27
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 28
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 29
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 30
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 31
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 32
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 33
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 34
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 35
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 36
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 37
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 38
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 39
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 40
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 41
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 42
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 43
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 44
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 45
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 46
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 47
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 48
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 49
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 50
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 51
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 52
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 53
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 54
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 55
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 56
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 57
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 58
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 59
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 60
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 61
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 62
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 63
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 64
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 65
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 66
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 67
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 68
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 69
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 70
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 71
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 72
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 73
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 74
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 75
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 76
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 77
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 78
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 79
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 80
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 81
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 82
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 83
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 84
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 85
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 86
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 87
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 88
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 89
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 90
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 91
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 92
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 93
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 94
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 95
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 96
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 97
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 98
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 99
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 100
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 101
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 102
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 103
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 104
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 105
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 106
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 107
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 108
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 109
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 110
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 111
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 112
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 113
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 114
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 115
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 116
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 117
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 118
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 119
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 120
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 121
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 122
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 123
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 124
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 125
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 126
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 127
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 128
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 129
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 130
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 131
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 132
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 133
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 134
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 135
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 136
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 137
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 138
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 139
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 140
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 141
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 142
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 143
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 144
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 145
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 146
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 147
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 148
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 149
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 150
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 151
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 152
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 153
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 154
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 155
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 156
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 157
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 158
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 159
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 160
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 161
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 162
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 163
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 164
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 165
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 166
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 167
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 168
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 169
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 170
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 171
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 172
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 173
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 174
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 175
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 176
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 177
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 178
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 179
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 180
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 181
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 182
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 183
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 184
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 185
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 186
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "map_while_body_4278"
      input_arg {
        name: "map_while_loop_counter"
        type: DT_INT32
      }
      input_arg {
        name: "map_while_maximum_iterations_0"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorarrayv2read_tensorlistgetitem_map_tensorarrayunstack_tensorlistfromtensor_0"
        type: DT_VARIANT
      }
      input_arg {
        name: "strided_slice_const_1_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "add_2"
        type: DT_INT32
      }
      output_arg {
        name: "map_while_maximum_iterations"
        type: DT_INT32
      }
      output_arg {
        name: "add_1"
        type: DT_INT32
      }
      output_arg {
        name: "tensorarrayv2write_tensorlistsetitem"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorarrayv2read_tensorlistgetitem_map_tensorarrayunstack_tensorlistfromtensor"
        type: DT_VARIANT
      }
      output_arg {
        name: "strided_slice_const_1"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "TensorArrayV2Read/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "TensorArrayV2Read/TensorListGetItem"
      op: "TensorListGetItem"
      input: "tensorarrayv2read_tensorlistgetitem_map_tensorarrayunstack_tensorlistfromtensor_0"
      input: "placeholder"
      input: "TensorArrayV2Read/Const:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "add/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add"
      op: "AddV2"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      input: "add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack"
      op: "Pack"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "strided_slice/stack_1"
      op: "Pack"
      input: "add:z:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice"
      op: "StridedSlice"
      input: "strided_slice_const_1_0"
      input: "strided_slice/stack:output:0"
      input: "strided_slice/stack_1:output:0"
      input: "strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "TensorArrayV2Write/TensorListSetItem"
      op: "TensorListSetItem"
      input: "placeholder_1"
      input: "placeholder"
      input: "strided_slice:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "add_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add_1_0"
      op: "AddV2"
      input: "placeholder"
      input: "add_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "add_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add_2_0"
      op: "AddV2"
      input: "map_while_loop_counter"
      input: "add_2/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    ret {
      key: "add_1"
      value: "add_1_0:z:0"
    }
    ret {
      key: "add_2"
      value: "add_2_0:z:0"
    }
    ret {
      key: "map_while_maximum_iterations"
      value: "map_while_maximum_iterations_0"
    }
    ret {
      key: "strided_slice_const_1"
      value: "strided_slice_const_1_0"
    }
    ret {
      key: "tensorarrayv2read_tensorlistgetitem_map_tensorarrayunstack_tensorlistfromtensor"
      value: "tensorarrayv2read_tensorlistgetitem_map_tensorarrayunstack_tensorlistfromtensor_0"
    }
    ret {
      key: "tensorarrayv2write_tensorlistsetitem"
      value: "TensorArrayV2Write/TensorListSetItem:output_handle:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            dim {
              size: 5
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 5
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "map_while_cond_4144"
      input_arg {
        name: "map_while_loop_counter_1"
        type: DT_INT32
      }
      input_arg {
        name: "map_while_maximum_iterations"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "map_while_cond_4144___redundant_placeholder0"
        type: DT_VARIANT
      }
      input_arg {
        name: "map_while_cond_4144___redundant_placeholder1"
        type: DT_FLOAT
      }
      output_arg {
        name: "logicaland"
        type: DT_BOOL
      }
    }
    node_def {
      name: "Less/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "Less"
      op: "Less"
      input: "placeholder"
      input: "Less/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Less_1"
      op: "Less"
      input: "map_while_loop_counter_1"
      input: "map_while_maximum_iterations"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "LogicalAnd"
      op: "LogicalAnd"
      input: "Less_1:z:0"
      input: "Less:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "logicaland"
      value: "LogicalAnd:z:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "lstm_model_RNN_net_while_cond_2294_rewritten_grad_5782"
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_2"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_4"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_5"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_6"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_7"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_8"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_9"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_10"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_11"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_12"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_13"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_14"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_15"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_16"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_17"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_18"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_19"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_20"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_21"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_22"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_23"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_24"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_25"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_26"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_27"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_28"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_29"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_30"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_31"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_32"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_33"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_34"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_35"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_36"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_37"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_38"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_39"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_40"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_41"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_42"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_43"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_44"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_45"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_46"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_47"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_48"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_49"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_50"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_51"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_52"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_53"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_54"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_55"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_56"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_57"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_58"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_59"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_60"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_61"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_62"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_63"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_64"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_65"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_66"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_67"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_68"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_69"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_70"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_71"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_72"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_73"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_74"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_75"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_76"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_77"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_78"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_79"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_80"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_81"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_82"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_83"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_84"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_85"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_86"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_87"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_88"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_89"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_90"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_91"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_92"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_93"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_94"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_BOOL
      }
    }
    node_def {
      name: "Less"
      op: "Less"
      input: "placeholder"
      input: "placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "Less:z:0"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
          }
          shape {
            dim {
              size: 13
            }
            dim {
              size: 128
            }
          }
          shape {
            dim {
              size: 128
            }
          }
          shape {
            dim {
              size: 32
            }
            dim {
              size: 128
            }
          }
          shape {
            dim {
              size: 32
            }
            dim {
              size: 128
            }
          }
          shape {
            dim {
              size: 128
            }
          }
          shape {
            dim {
              size: 32
            }
            dim {
              size: 128
            }
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 13
                }
                dim {
                  size: 128
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 32
                }
                dim {
                  size: 128
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 32
                }
                dim {
                  size: 128
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 32
                }
                dim {
                  size: 128
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 17
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 18
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 19
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 20
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 21
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 22
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 23
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 24
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 25
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 26
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 27
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 28
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 29
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 30
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 31
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 32
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 33
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 34
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 35
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 36
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 37
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 38
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 39
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 40
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 41
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 42
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 43
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 44
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 45
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 46
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 47
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 48
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 49
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 50
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 51
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 52
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 53
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 54
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 55
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 56
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 57
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 58
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 59
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 60
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 61
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 62
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 63
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 64
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 65
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 66
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 67
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 68
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 69
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 70
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 71
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 72
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 73
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 74
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 75
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 76
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 77
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 78
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 79
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 80
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 81
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 82
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 83
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 84
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 85
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 86
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 87
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 88
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 89
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 90
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 91
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 92
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 93
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 94
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "map_while_body_4115"
      input_arg {
        name: "map_while_loop_counter"
        type: DT_INT32
      }
      input_arg {
        name: "map_strided_slice_0"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "map_strided_slice_1_0"
        type: DT_INT32
      }
      input_arg {
        name: "tensorarrayv2read_tensorlistgetitem_map_tensorarrayunstack_tensorlistfromtensor_0"
        type: DT_VARIANT
      }
      input_arg {
        name: "map_while_const_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "add_1"
        type: DT_INT32
      }
      output_arg {
        name: "map_strided_slice"
        type: DT_INT32
      }
      output_arg {
        name: "add"
        type: DT_INT32
      }
      output_arg {
        name: "tensorarrayv2write_tensorlistsetitem"
        type: DT_VARIANT
      }
      output_arg {
        name: "map_strided_slice_1"
        type: DT_INT32
      }
      output_arg {
        name: "tensorarrayv2read_tensorlistgetitem_map_tensorarrayunstack_tensorlistfromtensor"
        type: DT_VARIANT
      }
      output_arg {
        name: "map_while_const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "TensorArrayV2Read/TensorListGetItem/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "TensorArrayV2Read/TensorListGetItem"
      op: "TensorListGetItem"
      input: "tensorarrayv2read_tensorlistgetitem_map_tensorarrayunstack_tensorlistfromtensor_0"
      input: "placeholder"
      input: "TensorArrayV2Read/TensorListGetItem/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "map/TensorArrayV2/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "map/TensorArrayV2/num_elements"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "map/TensorArrayV2"
      op: "TensorListReserve"
      input: "map/TensorArrayV2/element_shape:output:0"
      input: "map/TensorArrayV2/num_elements:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "shape_type"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "map/TensorArrayUnstack/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "map/TensorArrayUnstack/TensorListFromTensor"
      op: "TensorListFromTensor"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      input: "map/TensorArrayUnstack/Const:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "shape_type"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "map/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "map/TensorArrayV2_1/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "map/TensorArrayV2_1/num_elements"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "map/TensorArrayV2_1"
      op: "TensorListReserve"
      input: "map/TensorArrayV2_1/element_shape:output:0"
      input: "map/TensorArrayV2_1/num_elements:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape_type"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "map/while/maximum_iterations"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "map/while/loop_counter_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "map/while"
      op: "StatelessWhile"
      input: "map/while/loop_counter_1:output:0"
      input: "map/while/maximum_iterations:output:0"
      input: "map/Const:output:0"
      input: "map/TensorArrayV2_1:handle:0"
      input: "map/TensorArrayUnstack/TensorListFromTensor:output_handle:0"
      input: "map_while_const_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_INT32
            type: DT_INT32
            type: DT_INT32
            type: DT_VARIANT
            type: DT_VARIANT
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "_lower_using_switch_merge"
        value {
          b: true
        }
      }
      attr {
        key: "_num_original_outputs"
        value {
          i: 6
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
              dim {
                size: 5
              }
            }
          }
        }
      }
      attr {
        key: "_read_only_resource_inputs"
        value {
          list {
          }
        }
      }
      attr {
        key: "_stateful_parallelism"
        value {
          b: false
        }
      }
      attr {
        key: "body"
        value {
          func {
            name: "map_while_body_4145"
          }
        }
      }
      attr {
        key: "cond"
        value {
          func {
            name: "map_while_cond_4144"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
              dim {
                size: 5
              }
            }
          }
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 10
        }
      }
    }
    node_def {
      name: "map/TensorArrayV2Stack/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "map/TensorArrayV2Stack/TensorListStack"
      op: "TensorListStack"
      input: "map/while:output:3"
      input: "map/TensorArrayV2Stack/Const:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "num_elements"
        value {
          i: 4
        }
      }
    }
    node_def {
      name: "TensorArrayV2Write/TensorListSetItem"
      op: "TensorListSetItem"
      input: "placeholder_1"
      input: "placeholder"
      input: "map/TensorArrayV2Stack/TensorListStack:tensor:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "add/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add_0"
      op: "AddV2"
      input: "placeholder"
      input: "add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "add_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add_1_0"
      op: "AddV2"
      input: "map_while_loop_counter"
      input: "add_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    ret {
      key: "add"
      value: "add_0:z:0"
    }
    ret {
      key: "add_1"
      value: "add_1_0:z:0"
    }
    ret {
      key: "map_strided_slice"
      value: "map_strided_slice_0"
    }
    ret {
      key: "map_strided_slice_1"
      value: "map_strided_slice_1_0"
    }
    ret {
      key: "map_while_const"
      value: "map_while_const_0"
    }
    ret {
      key: "tensorarrayv2read_tensorlistgetitem_map_tensorarrayunstack_tensorlistfromtensor"
      value: "tensorarrayv2read_tensorlistgetitem_map_tensorarrayunstack_tensorlistfromtensor_0"
    }
    ret {
      key: "tensorarrayv2write_tensorlistsetitem"
      value: "TensorArrayV2Write/TensorListSetItem:output_handle:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            dim {
              size: 5
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 5
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "lstm_model_RNN_net_while_cond_2294_rewritten"
      input_arg {
        name: "lstm_model_rnn_net_while_loop_counter"
        type: DT_INT32
      }
      input_arg {
        name: "lstm_model_rnn_net_while_maximum_iterations"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_2"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_3"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_4"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_5"
        type: DT_FLOAT
      }
      input_arg {
        name: "less_lstm_model_rnn_net_strided_slice_1"
        type: DT_INT32
      }
      input_arg {
        name: "lstm_model_rnn_net_while_cond_2294___redundant_placeholder0"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_cond_2294___redundant_placeholder1"
        type: DT_RESOURCE
      }
      input_arg {
        name: "lstm_model_rnn_net_while_cond_2294___redundant_placeholder2"
        type: DT_RESOURCE
      }
      input_arg {
        name: "lstm_model_rnn_net_while_cond_2294___redundant_placeholder3"
        type: DT_RESOURCE
      }
      input_arg {
        name: "lstm_model_rnn_net_while_cond_2294___redundant_placeholder4"
        type: DT_RESOURCE
      }
      input_arg {
        name: "lstm_model_rnn_net_while_cond_2294___redundant_placeholder5"
        type: DT_RESOURCE
      }
      input_arg {
        name: "lstm_model_rnn_net_while_cond_2294___redundant_placeholder6"
        type: DT_RESOURCE
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_4"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_5"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_6"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_7"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_8"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_9"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_10"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_11"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_12"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_13"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_14"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_15"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_16"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_17"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_18"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_19"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_20"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_21"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_22"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_23"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_24"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_25"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_26"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_27"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_28"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_29"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_30"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_31"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_32"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_33"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_34"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_35"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_36"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_37"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_38"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_39"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_40"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_41"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_42"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_43"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_44"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_45"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_46"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_47"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_48"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_49"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_50"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_51"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_52"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_53"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_54"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_55"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_56"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_57"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_58"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_59"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_60"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_61"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_62"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_63"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_64"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_65"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_66"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_67"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_68"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_69"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_70"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_71"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_72"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_73"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_74"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_75"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_76"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_77"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_78"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_79"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_80"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_81"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_82"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_83"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_84"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_85"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_86"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_87"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_88"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_89"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_90"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_91"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_92"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_93"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_94"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_95"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_96"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_97"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_98"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_99"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_100"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_101"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_102"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_103"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_104"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_105"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_106"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_107"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_108"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_109"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_110"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_111"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_112"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_113"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_114"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_115"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_116"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_117"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_118"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_119"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_120"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_121"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_122"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_123"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_124"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_125"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_126"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_127"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_128"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_129"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_130"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_131"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_132"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_133"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_134"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_135"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_136"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_137"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_138"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_139"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_140"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_141"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_142"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_143"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_144"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_145"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_146"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_147"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_148"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_149"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_150"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_151"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_152"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_153"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_154"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_155"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_156"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_157"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_158"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_159"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_160"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_161"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_162"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_163"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_164"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_165"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_166"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_167"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_168"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_169"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_170"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_model_rnn_net_while_grad_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistelementshape_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_model_rnn_net_while_grad_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistlength_0_accumulator"
        type: DT_VARIANT
      }
      output_arg {
        name: "less"
        type: DT_BOOL
      }
    }
    node_def {
      name: "Less"
      op: "Less"
      input: "placeholder"
      input: "less_lstm_model_rnn_net_strided_slice_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "less"
      value: "Less:z:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 17
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 18
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 19
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 20
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 21
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 22
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 23
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 24
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 25
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 26
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 27
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 28
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 29
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 30
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 31
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 32
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 33
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 34
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 35
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 36
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 37
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 38
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 39
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 40
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 41
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 42
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 43
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 44
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 45
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 46
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 47
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 48
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 49
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 50
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 51
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 52
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 53
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 54
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 55
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 56
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 57
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 58
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 59
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 60
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 61
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 62
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 63
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 64
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 65
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 66
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 67
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 68
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 69
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 70
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 71
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 72
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 73
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 74
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 75
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 76
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 77
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 78
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 79
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 80
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 81
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 82
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 83
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 84
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 85
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 86
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 87
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 88
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 89
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 90
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 91
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 92
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 93
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 94
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 95
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 96
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 97
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 98
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 99
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 100
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 101
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 102
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 103
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 104
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 105
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 106
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 107
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 108
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 109
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 110
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 111
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 112
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 113
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 114
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 115
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 116
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 117
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 118
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 119
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 120
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 121
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 122
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 123
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 124
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 125
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 126
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 127
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 128
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 129
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 130
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 131
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 132
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 133
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 134
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 135
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 136
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 137
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 138
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 139
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 140
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 141
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 142
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 143
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 144
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 145
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 146
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 147
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 148
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 149
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 150
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 151
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 152
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 153
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 154
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 155
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 156
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 157
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 158
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 159
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 160
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 161
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 162
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 163
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 164
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 165
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 166
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 167
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 168
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 169
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 170
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 171
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 172
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 173
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 174
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 175
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 176
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 177
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 178
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 179
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 180
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 181
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 182
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 183
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 184
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 185
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 186
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 187
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 188
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "lstm_model_RNN_net_while_body_2295_grad_4864"
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_2"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_4"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_5"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_6"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_7"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_8"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_9"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_10"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_11"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_12"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_13"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_14"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_tensorarrayv2write_tensorlistsetitem_grad_zeros_like_stacked_rnn_cells_lstm_layer_1_mul_5"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_mul_5_grad_shape_stacked_rnn_cells_lstm_layer_1_clip_by_value_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_mul_5_grad_shape_1_stacked_rnn_cells_lstm_layer_1_tanh_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_clip_by_value_2_grad_shape_stacked_rnn_cells_lstm_layer_1_clip_by_value_2_minimum"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_clip_by_value_2_minimum_grad_shape_stacked_rnn_cells_lstm_layer_1_add_7"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_add_5_grad_shape_stacked_rnn_cells_lstm_layer_1_mul_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_add_5_grad_shape_1_stacked_rnn_cells_lstm_layer_1_mul_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_add_7_grad_shape_stacked_rnn_cells_lstm_layer_1_mul_4"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_mul_2_grad_shape_stacked_rnn_cells_lstm_layer_1_clip_by_value_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_mul_2_grad_shape_1_placeholder_5"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_mul_3_grad_shape_stacked_rnn_cells_lstm_layer_1_clip_by_value"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_mul_3_grad_shape_1_stacked_rnn_cells_lstm_layer_1_tanh"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_mul_4_grad_shape_stacked_rnn_cells_lstm_layer_1_add_6"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_clip_by_value_1_grad_shape_stacked_rnn_cells_lstm_layer_1_clip_by_value_1_minimum"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_clip_by_value_grad_shape_stacked_rnn_cells_lstm_layer_1_clip_by_value_minimum"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_add_6_grad_shape_stacked_rnn_cells_lstm_layer_1_biasadd_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_add_6_grad_shape_1_stacked_rnn_cells_lstm_layer_1_matmul_7"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_clip_by_value_1_minimum_grad_shape_stacked_rnn_cells_lstm_layer_1_add_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_clip_by_value_minimum_grad_shape_stacked_rnn_cells_lstm_layer_1_add_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_add_4_grad_shape_stacked_rnn_cells_lstm_layer_1_biasadd_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_add_4_grad_shape_1_stacked_rnn_cells_lstm_layer_1_matmul_6"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_7_grad_matmul_stacked_rnn_cells_lstm_layer_1_strided_slice_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_7_grad_matmul_1_placeholder_4"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_add_3_grad_shape_stacked_rnn_cells_lstm_layer_1_mul_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_add_1_grad_shape_stacked_rnn_cells_lstm_layer_1_mul"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_6_grad_matmul_stacked_rnn_cells_lstm_layer_1_strided_slice_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_3_grad_matmul_stacked_rnn_cells_lstm_layer_1_split"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_3_grad_matmul_1_stacked_rnn_cells_lstm_layer_0_mul_5"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_mul_1_grad_shape_stacked_rnn_cells_lstm_layer_1_add_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_mul_grad_shape_stacked_rnn_cells_lstm_layer_1_add"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_2_grad_matmul_stacked_rnn_cells_lstm_layer_1_split"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_add_2_grad_shape_stacked_rnn_cells_lstm_layer_1_biasadd_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_add_2_grad_shape_1_stacked_rnn_cells_lstm_layer_1_matmul_5"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_add_grad_shape_stacked_rnn_cells_lstm_layer_1_biasadd"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_add_grad_shape_1_stacked_rnn_cells_lstm_layer_1_matmul_4"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_5_grad_matmul_stacked_rnn_cells_lstm_layer_1_strided_slice_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_4_grad_matmul_stacked_rnn_cells_lstm_layer_1_strided_slice"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_1_grad_matmul_stacked_rnn_cells_lstm_layer_1_split"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_grad_matmul_stacked_rnn_cells_lstm_layer_1_split"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_mul_5_grad_shape_stacked_rnn_cells_lstm_layer_0_clip_by_value_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_mul_5_grad_shape_1_stacked_rnn_cells_lstm_layer_0_tanh_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_clip_by_value_2_grad_shape_stacked_rnn_cells_lstm_layer_0_clip_by_value_2_minimum"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_clip_by_value_2_minimum_grad_shape_stacked_rnn_cells_lstm_layer_0_add_7"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_add_5_grad_shape_stacked_rnn_cells_lstm_layer_0_mul_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_add_5_grad_shape_1_stacked_rnn_cells_lstm_layer_0_mul_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_add_7_grad_shape_stacked_rnn_cells_lstm_layer_0_mul_4"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_mul_2_grad_shape_stacked_rnn_cells_lstm_layer_0_clip_by_value_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_mul_2_grad_shape_1_placeholder_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_mul_3_grad_shape_stacked_rnn_cells_lstm_layer_0_clip_by_value"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_mul_3_grad_shape_1_stacked_rnn_cells_lstm_layer_0_tanh"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_mul_4_grad_shape_stacked_rnn_cells_lstm_layer_0_add_6"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_clip_by_value_1_grad_shape_stacked_rnn_cells_lstm_layer_0_clip_by_value_1_minimum"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_clip_by_value_grad_shape_stacked_rnn_cells_lstm_layer_0_clip_by_value_minimum"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_add_6_grad_shape_stacked_rnn_cells_lstm_layer_0_biasadd_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_add_6_grad_shape_1_stacked_rnn_cells_lstm_layer_0_matmul_7"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_clip_by_value_1_minimum_grad_shape_stacked_rnn_cells_lstm_layer_0_add_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_clip_by_value_minimum_grad_shape_stacked_rnn_cells_lstm_layer_0_add_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_add_4_grad_shape_stacked_rnn_cells_lstm_layer_0_biasadd_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_add_4_grad_shape_1_stacked_rnn_cells_lstm_layer_0_matmul_6"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_7_grad_matmul_stacked_rnn_cells_lstm_layer_0_strided_slice_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_7_grad_matmul_1_placeholder_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_add_3_grad_shape_stacked_rnn_cells_lstm_layer_0_mul_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_add_1_grad_shape_stacked_rnn_cells_lstm_layer_0_mul"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_6_grad_matmul_stacked_rnn_cells_lstm_layer_0_strided_slice_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_3_grad_matmul_stacked_rnn_cells_lstm_layer_0_split"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_3_grad_matmul_1_tensorarrayv2read_tensorlistgetitem"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_mul_1_grad_shape_stacked_rnn_cells_lstm_layer_0_add_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_mul_grad_shape_stacked_rnn_cells_lstm_layer_0_add"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_2_grad_matmul_stacked_rnn_cells_lstm_layer_0_split"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_add_2_grad_shape_stacked_rnn_cells_lstm_layer_0_biasadd_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_add_2_grad_shape_1_stacked_rnn_cells_lstm_layer_0_matmul_5"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_add_grad_shape_stacked_rnn_cells_lstm_layer_0_biasadd"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_add_grad_shape_1_stacked_rnn_cells_lstm_layer_0_matmul_4"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_5_grad_matmul_stacked_rnn_cells_lstm_layer_0_strided_slice_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_4_grad_matmul_stacked_rnn_cells_lstm_layer_0_strided_slice"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_1_grad_matmul_stacked_rnn_cells_lstm_layer_0_split"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_grad_matmul_stacked_rnn_cells_lstm_layer_0_split"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistreserve_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistelementshape"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistreserve_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistlength"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistsetitem_placeholder"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_INT32
      }
      output_arg {
        name: "identity_1"
        type: DT_INT32
      }
      output_arg {
        name: "identity_2"
        type: DT_INT32
      }
      output_arg {
        name: "identity_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_5"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_6"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_7"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_8"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity_9"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_10"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_11"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_12"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_13"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_14"
        type: DT_FLOAT
      }
      output_arg {
        name: "gradients_tensorarrayv2write_tensorlistsetitem_grad_zeros_like_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_mul_5_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_mul_5_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_clip_by_value_2_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_clip_by_value_2_minimum_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_add_5_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_add_5_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_add_7_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_mul_2_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_mul_2_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_mul_3_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_mul_3_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_mul_4_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_clip_by_value_1_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_clip_by_value_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_add_6_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_add_6_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_clip_by_value_1_minimum_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_clip_by_value_minimum_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_add_4_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_add_4_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_7_grad_matmul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_7_grad_matmul_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_add_3_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_add_1_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_6_grad_matmul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_3_grad_matmul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_3_grad_matmul_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_mul_1_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_mul_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_2_grad_matmul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_add_2_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_add_2_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_add_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_add_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_5_grad_matmul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_4_grad_matmul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_1_grad_matmul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_grad_matmul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_mul_5_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_mul_5_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_clip_by_value_2_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_clip_by_value_2_minimum_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_add_5_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_add_5_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_add_7_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_mul_2_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_mul_2_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_mul_3_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_mul_3_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_mul_4_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_clip_by_value_1_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_clip_by_value_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_add_6_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_add_6_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_clip_by_value_1_minimum_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_clip_by_value_minimum_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_add_4_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_add_4_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_7_grad_matmul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_7_grad_matmul_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_add_3_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_add_1_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_6_grad_matmul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_3_grad_matmul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_3_grad_matmul_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_mul_1_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_mul_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_2_grad_matmul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_add_2_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_add_2_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_add_grad_shape_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_add_grad_shape_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_5_grad_matmul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_4_grad_matmul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_1_grad_matmul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_grad_matmul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistreserve_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistreserve_tensorlistpopback_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistsetitem_tensorlistpopback"
        type: DT_VARIANT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "placeholder_3"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "placeholder_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "placeholder_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "placeholder_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "placeholder_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "placeholder_8"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "placeholder_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 13
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/grad_ys_7"
      op: "Identity"
      input: "placeholder_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/grad_ys_8"
      op: "Identity"
      input: "placeholder_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/grad_ys_9"
      op: "Identity"
      input: "placeholder_12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/grad_ys_10"
      op: "Identity"
      input: "placeholder_13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/grad_ys_11"
      op: "Identity"
      input: "placeholder_14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Write/TensorListSetItem_grad/zeros_like/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Write/TensorListSetItem_grad/zeros_like/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_tensorarrayv2write_tensorlistsetitem_grad_zeros_like_stacked_rnn_cells_lstm_layer_1_mul_5"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/zeros_like/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Write/TensorListSetItem_grad/zeros_like"
      op: "ZerosLike"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/zeros_like/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem"
      op: "TensorListSetItem"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem/Const:output:0"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/zeros_like:y:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Write/TensorListSetItem_grad/Shape"
      op: "Shape"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/zeros_like/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListGetItem"
      op: "TensorListGetItem"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem/Const:output:0"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/Shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/grad_ys_3:output:0"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListGetItem:item:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_mul_5_grad_shape_stacked_rnn_cells_lstm_layer_1_clip_by_value_2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_mul_5_grad_shape_1_stacked_rnn_cells_lstm_layer_1_tanh_1"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Mul"
      op: "Mul"
      input: "gradients/AddN:sum:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Mul:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Mul_1"
      op: "Mul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/AddN:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Mul_1:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_clip_by_value_2_grad_shape_stacked_rnn_cells_lstm_layer_1_clip_by_value_2_minimum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/zeros_like"
      op: "ZerosLike"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/GreaterEqual/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/GreaterEqual"
      op: "GreaterEqual"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/GreaterEqual/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/SelectV2"
      op: "SelectV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/GreaterEqual:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/zeros_like:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/SelectV2:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/SelectV2_1"
      op: "SelectV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/GreaterEqual:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/zeros_like:y:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/SelectV2_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Tanh_1_grad/TanhGrad"
      op: "TanhGrad"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Shape_1/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_clip_by_value_2_minimum_grad_shape_stacked_rnn_cells_lstm_layer_1_add_7"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/zeros_like"
      op: "ZerosLike"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/LessEqual/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/LessEqual"
      op: "LessEqual"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/LessEqual/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/SelectV2"
      op: "SelectV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/LessEqual:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/zeros_like:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/SelectV2:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/SelectV2_1"
      op: "SelectV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/LessEqual:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/zeros_like:y:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/SelectV2_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/grad_ys_4:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Tanh_1_grad/TanhGrad:z:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_4"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_add_5_grad_shape_stacked_rnn_cells_lstm_layer_1_mul_2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_add_5_grad_shape_1_stacked_rnn_cells_lstm_layer_1_mul_3"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/Sum"
      op: "Sum"
      input: "gradients/AddN_1:sum:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/Sum_1"
      op: "Sum"
      input: "gradients/AddN_1:sum:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_7_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_7_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_add_7_grad_shape_stacked_rnn_cells_lstm_layer_1_mul_4"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_7_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_7_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_7_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_7_grad/Shape_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_7_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_7_grad/Shape_1/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_7_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_7_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_7_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_7_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_7_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_7_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_7_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_7_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_7_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_7_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_7_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_7_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_7_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_mul_2_grad_shape_stacked_rnn_cells_lstm_layer_1_clip_by_value_1"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_mul_2_grad_shape_1_placeholder_5"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Mul"
      op: "Mul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Mul:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Mul_1"
      op: "Mul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Mul_1:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_mul_3_grad_shape_stacked_rnn_cells_lstm_layer_1_clip_by_value"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_mul_3_grad_shape_1_stacked_rnn_cells_lstm_layer_1_tanh"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Mul"
      op: "Mul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/Reshape_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Mul:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Mul_1"
      op: "Mul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Mul_1:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_mul_4_grad_shape_stacked_rnn_cells_lstm_layer_1_add_6"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/Shape_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/Shape_1/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/Mul"
      op: "Mul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_7_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/Shape_1/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/Mul:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/Mul_1"
      op: "Mul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_7_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/Mul_1:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_clip_by_value_1_grad_shape_stacked_rnn_cells_lstm_layer_1_clip_by_value_1_minimum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/zeros_like"
      op: "ZerosLike"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/GreaterEqual/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/GreaterEqual"
      op: "GreaterEqual"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/GreaterEqual/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/SelectV2"
      op: "SelectV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/GreaterEqual:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/zeros_like:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/SelectV2:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/SelectV2_1"
      op: "SelectV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/GreaterEqual:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/zeros_like:y:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/SelectV2_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_clip_by_value_grad_shape_stacked_rnn_cells_lstm_layer_1_clip_by_value_minimum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/zeros_like"
      op: "ZerosLike"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/GreaterEqual/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/GreaterEqual"
      op: "GreaterEqual"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/GreaterEqual/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/SelectV2"
      op: "SelectV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/GreaterEqual:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/zeros_like:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/SelectV2:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/SelectV2_1"
      op: "SelectV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/GreaterEqual:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/zeros_like:y:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/SelectV2_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Tanh_grad/TanhGrad"
      op: "TanhGrad"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Shape_1/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_add_6_grad_shape_stacked_rnn_cells_lstm_layer_1_biasadd_3"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_add_6_grad_shape_1_stacked_rnn_cells_lstm_layer_1_matmul_7"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_clip_by_value_1_minimum_grad_shape_stacked_rnn_cells_lstm_layer_1_add_3"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/zeros_like"
      op: "ZerosLike"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/LessEqual/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/LessEqual"
      op: "LessEqual"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/LessEqual/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/SelectV2"
      op: "SelectV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/LessEqual:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/zeros_like:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/SelectV2:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/SelectV2_1"
      op: "SelectV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/LessEqual:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/zeros_like:y:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/SelectV2_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_clip_by_value_minimum_grad_shape_stacked_rnn_cells_lstm_layer_1_add_1"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/zeros_like"
      op: "ZerosLike"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/LessEqual/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/LessEqual"
      op: "LessEqual"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/LessEqual/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/SelectV2"
      op: "SelectV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/LessEqual:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/zeros_like:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/SelectV2:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/SelectV2_1"
      op: "SelectV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/LessEqual:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/zeros_like:y:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/SelectV2_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_add_4_grad_shape_stacked_rnn_cells_lstm_layer_1_biasadd_2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_add_4_grad_shape_1_stacked_rnn_cells_lstm_layer_1_matmul_6"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Tanh_grad/TanhGrad:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Tanh_grad/TanhGrad:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/BiasAdd_3_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_7_grad/MatMul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_7_grad/MatMul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_7_grad_matmul_stacked_rnn_cells_lstm_layer_1_strided_slice_3"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_7_grad/MatMul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_7_grad/MatMul"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/Reshape_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_7_grad/MatMul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_7_grad/MatMul_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_7_grad/MatMul_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_7_grad_matmul_1_placeholder_4"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_7_grad/MatMul_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_7_grad/MatMul_1"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_7_grad/MatMul_1/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_3_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_3_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_add_3_grad_shape_stacked_rnn_cells_lstm_layer_1_mul_1"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_3_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_3_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_3_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_3_grad/Shape_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_3_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_3_grad/Shape_1/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_3_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_3_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_3_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_3_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_3_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_3_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_3_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_3_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_3_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_1_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_1_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_add_1_grad_shape_stacked_rnn_cells_lstm_layer_1_mul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_1_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_1_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_1_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_1_grad/Shape_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_1_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_1_grad/Shape_1/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_1_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_1_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_1_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_1_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_1_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_1_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_1_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_1_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_1_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_1_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_1_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/BiasAdd_2_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_6_grad/MatMul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_6_grad/MatMul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_6_grad_matmul_stacked_rnn_cells_lstm_layer_1_strided_slice_2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_6_grad/MatMul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_6_grad/MatMul"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/Reshape_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_6_grad/MatMul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_6_grad/MatMul_1"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_7_grad/MatMul_1/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_3_grad/MatMul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_3_grad/MatMul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_3_grad_matmul_stacked_rnn_cells_lstm_layer_1_split"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_3_grad/MatMul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_3_grad/MatMul"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_3_grad/MatMul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_3_grad/MatMul_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_3_grad/MatMul_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_3_grad_matmul_1_stacked_rnn_cells_lstm_layer_0_mul_5"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_3_grad/MatMul_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_3_grad/MatMul_1"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_3_grad/MatMul_1/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_3_grad/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\200\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_3_grad/StridedSliceGrad/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\200\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_3_grad/StridedSliceGrad/begin"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000`\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_3_grad/StridedSliceGrad/end"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_3_grad/StridedSliceGrad/strides"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_3_grad/StridedSliceGrad"
      op: "StridedSliceGrad"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_3_grad/StridedSliceGrad/shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_3_grad/StridedSliceGrad/begin:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_3_grad/StridedSliceGrad/end:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_3_grad/StridedSliceGrad/strides:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_7_grad/MatMul_1:product:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 3
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_mul_1_grad_shape_stacked_rnn_cells_lstm_layer_1_add_2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/Shape_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/Shape_1/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/Mul"
      op: "Mul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_3_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/Shape_1/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/Mul:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/Mul_1"
      op: "Mul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_3_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/Mul_1:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_mul_grad_shape_stacked_rnn_cells_lstm_layer_1_add"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/Shape_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/Shape_1/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/Mul"
      op: "Mul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_1_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/Shape_1/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/Mul:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/Mul_1"
      op: "Mul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_1_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/Mul_1:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_2_grad/MatMul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_2_grad/MatMul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_2_grad_matmul_stacked_rnn_cells_lstm_layer_1_split"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_2_grad/MatMul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_2_grad/MatMul"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_2_grad/MatMul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_2_grad/MatMul_1"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_3_grad/MatMul_1/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_2_grad/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\200\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_2_grad/StridedSliceGrad/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\200\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_2_grad/StridedSliceGrad/begin"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000@\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_2_grad/StridedSliceGrad/end"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000`\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_2_grad/StridedSliceGrad/strides"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_2_grad/StridedSliceGrad"
      op: "StridedSliceGrad"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_2_grad/StridedSliceGrad/shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_2_grad/StridedSliceGrad/begin:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_2_grad/StridedSliceGrad/end:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_2_grad/StridedSliceGrad/strides:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_6_grad/MatMul_1:product:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_add_2_grad_shape_stacked_rnn_cells_lstm_layer_1_biasadd_1"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_add_2_grad_shape_1_stacked_rnn_cells_lstm_layer_1_matmul_5"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_add_grad_shape_stacked_rnn_cells_lstm_layer_1_biasadd"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_add_grad_shape_1_stacked_rnn_cells_lstm_layer_1_matmul_4"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/BiasAdd_1_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_5_grad/MatMul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_5_grad/MatMul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_5_grad_matmul_stacked_rnn_cells_lstm_layer_1_strided_slice_1"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_5_grad/MatMul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_5_grad/MatMul"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/Reshape_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_5_grad/MatMul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_5_grad/MatMul_1"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_7_grad/MatMul_1/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_4_grad/MatMul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_4_grad/MatMul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_4_grad_matmul_stacked_rnn_cells_lstm_layer_1_strided_slice"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_4_grad/MatMul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_4_grad/MatMul"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/Reshape_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_4_grad/MatMul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_4_grad/MatMul_1"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_7_grad/MatMul_1/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_1_grad/MatMul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_1_grad/MatMul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_1_grad_matmul_stacked_rnn_cells_lstm_layer_1_split"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_1_grad/MatMul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_1_grad/MatMul"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_1_grad/MatMul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_1_grad/MatMul_1"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_3_grad/MatMul_1/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_1_grad/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\200\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_1_grad/StridedSliceGrad/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\200\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_1_grad/StridedSliceGrad/begin"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000 \000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_1_grad/StridedSliceGrad/end"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000@\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_1_grad/StridedSliceGrad/strides"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_1_grad/StridedSliceGrad"
      op: "StridedSliceGrad"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_1_grad/StridedSliceGrad/shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_1_grad/StridedSliceGrad/begin:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_1_grad/StridedSliceGrad/end:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_1_grad/StridedSliceGrad/strides:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_5_grad/MatMul_1:product:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_grad/MatMul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_grad/MatMul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_grad_matmul_stacked_rnn_cells_lstm_layer_1_split"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_grad/MatMul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_grad/MatMul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_3_grad/MatMul_1/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/split_1_grad/concat/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/split_1_grad/concat"
      op: "ConcatV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/BiasAdd_grad/BiasAddGrad:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/BiasAdd_1_grad/BiasAddGrad:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/BiasAdd_2_grad/BiasAddGrad:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/BiasAdd_3_grad/BiasAddGrad:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/split_1_grad/concat/Const:output:0"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/AddN_2"
      op: "AddN"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_7_grad/MatMul:product:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_6_grad/MatMul:product:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_5_grad/MatMul:product:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_4_grad/MatMul:product:0"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_7_grad/MatMul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_grad/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\200\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_grad/StridedSliceGrad/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\200\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_grad/StridedSliceGrad/begin"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_grad/StridedSliceGrad/end"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000 \000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_grad/StridedSliceGrad/strides"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_grad/StridedSliceGrad"
      op: "StridedSliceGrad"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_grad/StridedSliceGrad/shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_grad/StridedSliceGrad/begin:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_grad/StridedSliceGrad/end:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_grad/StridedSliceGrad/strides:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_4_grad/MatMul_1:product:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 3
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "gradients/AddN_3"
      op: "AddN"
      input: "gradients/grad_ys_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_3_grad/MatMul:product:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_2_grad/MatMul:product:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_1_grad/MatMul:product:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_grad/MatMul:product:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_mul_5_grad_shape_stacked_rnn_cells_lstm_layer_0_clip_by_value_2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_mul_5_grad_shape_1_stacked_rnn_cells_lstm_layer_0_tanh_1"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Mul"
      op: "Mul"
      input: "gradients/AddN_3:sum:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Mul:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Mul_1"
      op: "Mul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/AddN_3:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Mul_1:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/split_grad/concat/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_1/split_grad/concat"
      op: "ConcatV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_grad/MatMul_1:product:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_1_grad/MatMul_1:product:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_2_grad/MatMul_1:product:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_3_grad/MatMul_1:product:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/split_grad/concat/Const:output:0"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_clip_by_value_2_grad_shape_stacked_rnn_cells_lstm_layer_0_clip_by_value_2_minimum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/zeros_like"
      op: "ZerosLike"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/GreaterEqual/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/GreaterEqual"
      op: "GreaterEqual"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/GreaterEqual/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/SelectV2"
      op: "SelectV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/GreaterEqual:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/zeros_like:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/SelectV2:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/SelectV2_1"
      op: "SelectV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/GreaterEqual:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/zeros_like:y:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/SelectV2_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Tanh_1_grad/TanhGrad"
      op: "TanhGrad"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Shape_1/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/AddN_4"
      op: "AddN"
      input: "gradients/grad_ys_10:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/split_1_grad/concat:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_10"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/AddN_5"
      op: "AddN"
      input: "gradients/grad_ys_11:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_3_grad/StridedSliceGrad:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_2_grad/StridedSliceGrad:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_1_grad/StridedSliceGrad:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/strided_slice_grad/StridedSliceGrad:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_11"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_clip_by_value_2_minimum_grad_shape_stacked_rnn_cells_lstm_layer_0_add_7"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/zeros_like"
      op: "ZerosLike"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/LessEqual/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/LessEqual"
      op: "LessEqual"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/LessEqual/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/SelectV2"
      op: "SelectV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/LessEqual:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/zeros_like:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/SelectV2:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/SelectV2_1"
      op: "SelectV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/LessEqual:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/zeros_like:y:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/SelectV2_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/AddN_6"
      op: "AddN"
      input: "gradients/grad_ys_2:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Tanh_1_grad/TanhGrad:z:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_add_5_grad_shape_stacked_rnn_cells_lstm_layer_0_mul_2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_add_5_grad_shape_1_stacked_rnn_cells_lstm_layer_0_mul_3"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/Sum"
      op: "Sum"
      input: "gradients/AddN_6:sum:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/Sum_1"
      op: "Sum"
      input: "gradients/AddN_6:sum:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/AddN_7"
      op: "AddN"
      input: "gradients/grad_ys_9:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/split_grad/concat:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_9"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_7_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_7_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_add_7_grad_shape_stacked_rnn_cells_lstm_layer_0_mul_4"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_7_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_7_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_7_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_7_grad/Shape_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_7_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_7_grad/Shape_1/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_7_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_7_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_7_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_7_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_7_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_7_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_7_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_7_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_7_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_7_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_7_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_7_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_7_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_mul_2_grad_shape_stacked_rnn_cells_lstm_layer_0_clip_by_value_1"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_mul_2_grad_shape_1_placeholder_3"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Mul"
      op: "Mul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Mul:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Mul_1"
      op: "Mul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Mul_1:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_mul_3_grad_shape_stacked_rnn_cells_lstm_layer_0_clip_by_value"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_mul_3_grad_shape_1_stacked_rnn_cells_lstm_layer_0_tanh"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Mul"
      op: "Mul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/Reshape_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Mul:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Mul_1"
      op: "Mul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Mul_1:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_mul_4_grad_shape_stacked_rnn_cells_lstm_layer_0_add_6"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/Shape_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/Shape_1/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/Mul"
      op: "Mul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_7_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/Shape_1/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/Mul:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/Mul_1"
      op: "Mul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_7_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/Mul_1:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_clip_by_value_1_grad_shape_stacked_rnn_cells_lstm_layer_0_clip_by_value_1_minimum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/zeros_like"
      op: "ZerosLike"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/GreaterEqual/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/GreaterEqual"
      op: "GreaterEqual"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/GreaterEqual/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/SelectV2"
      op: "SelectV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/GreaterEqual:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/zeros_like:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/SelectV2:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/SelectV2_1"
      op: "SelectV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/GreaterEqual:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/zeros_like:y:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/SelectV2_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_clip_by_value_grad_shape_stacked_rnn_cells_lstm_layer_0_clip_by_value_minimum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/zeros_like"
      op: "ZerosLike"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/GreaterEqual/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/GreaterEqual"
      op: "GreaterEqual"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/GreaterEqual/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/SelectV2"
      op: "SelectV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/GreaterEqual:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/zeros_like:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/SelectV2:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/SelectV2_1"
      op: "SelectV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/GreaterEqual:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/zeros_like:y:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/SelectV2_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Tanh_grad/TanhGrad"
      op: "TanhGrad"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Shape_1/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_add_6_grad_shape_stacked_rnn_cells_lstm_layer_0_biasadd_3"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_add_6_grad_shape_1_stacked_rnn_cells_lstm_layer_0_matmul_7"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_clip_by_value_1_minimum_grad_shape_stacked_rnn_cells_lstm_layer_0_add_3"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/zeros_like"
      op: "ZerosLike"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/LessEqual/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/LessEqual"
      op: "LessEqual"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/LessEqual/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/SelectV2"
      op: "SelectV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/LessEqual:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/zeros_like:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/SelectV2:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/SelectV2_1"
      op: "SelectV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/LessEqual:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/zeros_like:y:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/SelectV2_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_clip_by_value_minimum_grad_shape_stacked_rnn_cells_lstm_layer_0_add_1"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/zeros_like"
      op: "ZerosLike"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/LessEqual/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/LessEqual"
      op: "LessEqual"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/LessEqual/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/SelectV2"
      op: "SelectV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/LessEqual:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/zeros_like:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/SelectV2:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/SelectV2_1"
      op: "SelectV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/LessEqual:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/zeros_like:y:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/SelectV2_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_add_4_grad_shape_stacked_rnn_cells_lstm_layer_0_biasadd_2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_add_4_grad_shape_1_stacked_rnn_cells_lstm_layer_0_matmul_6"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Tanh_grad/TanhGrad:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Tanh_grad/TanhGrad:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/BiasAdd_3_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_7_grad/MatMul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_7_grad/MatMul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_7_grad_matmul_stacked_rnn_cells_lstm_layer_0_strided_slice_3"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_7_grad/MatMul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_7_grad/MatMul"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/Reshape_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_7_grad/MatMul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_7_grad/MatMul_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_7_grad/MatMul_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_7_grad_matmul_1_placeholder_2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_7_grad/MatMul_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_7_grad/MatMul_1"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_7_grad/MatMul_1/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_3_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_3_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_add_3_grad_shape_stacked_rnn_cells_lstm_layer_0_mul_1"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_3_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_3_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_3_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_3_grad/Shape_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_3_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_3_grad/Shape_1/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_3_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_3_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_3_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_3_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_3_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_3_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_3_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_3_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_3_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_1_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_1_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_add_1_grad_shape_stacked_rnn_cells_lstm_layer_0_mul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_1_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_1_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_1_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_1_grad/Shape_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_1_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_1_grad/Shape_1/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_1_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_1_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_1_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_1_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_1_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_1_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_1_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_1_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_1_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_1_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_1_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/BiasAdd_2_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_6_grad/MatMul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_6_grad/MatMul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_6_grad_matmul_stacked_rnn_cells_lstm_layer_0_strided_slice_2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_6_grad/MatMul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_6_grad/MatMul"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/Reshape_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_6_grad/MatMul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_6_grad/MatMul_1"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_7_grad/MatMul_1/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_3_grad/MatMul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_3_grad/MatMul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_3_grad_matmul_stacked_rnn_cells_lstm_layer_0_split"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_3_grad/MatMul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: 13
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_3_grad/MatMul"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_3_grad/MatMul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 13
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_3_grad/MatMul_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_3_grad/MatMul_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_3_grad_matmul_1_tensorarrayv2read_tensorlistgetitem"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_3_grad/MatMul_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 13
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_3_grad/MatMul_1"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_3_grad/MatMul_1/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 13
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_3_grad/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\200\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_3_grad/StridedSliceGrad/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\200\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_3_grad/StridedSliceGrad/begin"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000`\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_3_grad/StridedSliceGrad/end"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_3_grad/StridedSliceGrad/strides"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_3_grad/StridedSliceGrad"
      op: "StridedSliceGrad"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_3_grad/StridedSliceGrad/shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_3_grad/StridedSliceGrad/begin:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_3_grad/StridedSliceGrad/end:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_3_grad/StridedSliceGrad/strides:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_7_grad/MatMul_1:product:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 3
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_mul_1_grad_shape_stacked_rnn_cells_lstm_layer_0_add_2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/Shape_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/Shape_1/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/Mul"
      op: "Mul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_3_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/Shape_1/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/Mul:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/Mul_1"
      op: "Mul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_3_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/Mul_1:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_mul_grad_shape_stacked_rnn_cells_lstm_layer_0_add"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/Shape_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/Shape_1/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/Mul"
      op: "Mul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_1_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/Shape_1/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/Mul:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/Mul_1"
      op: "Mul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/Shape/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_1_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/Mul_1:z:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_2_grad/MatMul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_2_grad/MatMul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_2_grad_matmul_stacked_rnn_cells_lstm_layer_0_split"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_2_grad/MatMul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: 13
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_2_grad/MatMul"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_2_grad/MatMul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 13
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_2_grad/MatMul_1"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_3_grad/MatMul_1/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 13
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_2_grad/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\200\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_2_grad/StridedSliceGrad/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\200\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_2_grad/StridedSliceGrad/begin"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000@\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_2_grad/StridedSliceGrad/end"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000`\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_2_grad/StridedSliceGrad/strides"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_2_grad/StridedSliceGrad"
      op: "StridedSliceGrad"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_2_grad/StridedSliceGrad/shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_2_grad/StridedSliceGrad/begin:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_2_grad/StridedSliceGrad/end:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_2_grad/StridedSliceGrad/strides:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_6_grad/MatMul_1:product:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_add_2_grad_shape_stacked_rnn_cells_lstm_layer_0_biasadd_1"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_add_2_grad_shape_1_stacked_rnn_cells_lstm_layer_0_matmul_5"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/Shape/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/Shape/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_add_grad_shape_stacked_rnn_cells_lstm_layer_0_biasadd"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/Shape/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/Shape"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/Shape/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/Shape_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/Shape_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_add_grad_shape_1_stacked_rnn_cells_lstm_layer_0_matmul_4"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/Shape_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/Shape_1"
      op: "Shape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/Shape_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/Shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/Sum"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/Sum:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/Sum_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/Shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/BiasAdd_1_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_5_grad/MatMul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_5_grad/MatMul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_5_grad_matmul_stacked_rnn_cells_lstm_layer_0_strided_slice_1"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_5_grad/MatMul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_5_grad/MatMul"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/Reshape_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_5_grad/MatMul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_5_grad/MatMul_1"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_7_grad/MatMul_1/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_4_grad/MatMul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_4_grad/MatMul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_4_grad_matmul_stacked_rnn_cells_lstm_layer_0_strided_slice"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_4_grad/MatMul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_4_grad/MatMul"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/Reshape_1:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_4_grad/MatMul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_4_grad/MatMul_1"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_7_grad/MatMul_1/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_1_grad/MatMul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_1_grad/MatMul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_1_grad_matmul_stacked_rnn_cells_lstm_layer_0_split"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_1_grad/MatMul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: 13
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_1_grad/MatMul"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_1_grad/MatMul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 13
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_1_grad/MatMul_1"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_3_grad/MatMul_1/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 13
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_1_grad/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\200\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_1_grad/StridedSliceGrad/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\200\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_1_grad/StridedSliceGrad/begin"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000 \000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_1_grad/StridedSliceGrad/end"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000@\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_1_grad/StridedSliceGrad/strides"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_1_grad/StridedSliceGrad"
      op: "StridedSliceGrad"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_1_grad/StridedSliceGrad/shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_1_grad/StridedSliceGrad/begin:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_1_grad/StridedSliceGrad/end:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_1_grad/StridedSliceGrad/strides:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_5_grad/MatMul_1:product:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_grad/MatMul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_grad/MatMul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_grad_matmul_stacked_rnn_cells_lstm_layer_0_split"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_grad/MatMul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: 13
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/Reshape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_grad/MatMul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 13
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_3_grad/MatMul_1/TensorListPopBack:tensor:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/Reshape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 13
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/split_1_grad/concat/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/split_1_grad/concat"
      op: "ConcatV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/BiasAdd_grad/BiasAddGrad:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/BiasAdd_1_grad/BiasAddGrad:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/BiasAdd_2_grad/BiasAddGrad:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/BiasAdd_3_grad/BiasAddGrad:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/split_1_grad/concat/Const:output:0"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/AddN_8"
      op: "AddN"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_7_grad/MatMul:product:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_6_grad/MatMul:product:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_5_grad/MatMul:product:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_4_grad/MatMul:product:0"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_7_grad/MatMul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_grad/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\200\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_grad/StridedSliceGrad/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\200\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_grad/StridedSliceGrad/begin"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_grad/StridedSliceGrad/end"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000 \000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_grad/StridedSliceGrad/strides"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_grad/StridedSliceGrad"
      op: "StridedSliceGrad"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_grad/StridedSliceGrad/shape:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_grad/StridedSliceGrad/begin:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_grad/StridedSliceGrad/end:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_grad/StridedSliceGrad/strides:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_4_grad/MatMul_1:product:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 3
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "gradients/AddN_9"
      op: "AddN"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_3_grad/MatMul:product:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_2_grad/MatMul:product:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_1_grad/MatMul:product:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_grad/MatMul:product:0"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_3_grad/MatMul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 13
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistreserve_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistelementshape"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack_1/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack_1"
      op: "TensorListPopBack"
      input: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistreserve_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistlength"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack_1/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve"
      op: "TensorListReserve"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack:tensor:0"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack_1:tensor:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape_type"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListSetItem/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListSetItem/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistsetitem_placeholder"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListSetItem/TensorListPopBack/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListSetItem"
      op: "TensorListSetItem"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve:handle:0"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListSetItem/TensorListPopBack:tensor:0"
      input: "gradients/AddN_9:sum:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/split_grad/concat/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "gradients/stacked_rnn_cells/LSTM_Layer_0/split_grad/concat"
      op: "ConcatV2"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_grad/MatMul_1:product:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_1_grad/MatMul_1:product:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_2_grad/MatMul_1:product:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_3_grad/MatMul_1:product:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/split_grad/concat/Const:output:0"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 13
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/AddN_10"
      op: "AddN"
      input: "gradients/grad_ys_5:output:0"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListSetItem:output_handle:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/AddN_11"
      op: "AddN"
      input: "gradients/grad_ys_7:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/split_1_grad/concat:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_7"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/AddN_12"
      op: "AddN"
      input: "gradients/grad_ys_8:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_3_grad/StridedSliceGrad:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_2_grad/StridedSliceGrad:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_1_grad/StridedSliceGrad:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/strided_slice_grad/StridedSliceGrad:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_8"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/AddN_13"
      op: "AddN"
      input: "gradients/grad_ys_6:output:0"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/split_grad/concat:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_6"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 13
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "add/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add"
      op: "AddV2"
      input: "placeholder"
      input: "add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "add:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "placeholder_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem:output_handle:0"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/AddN_8:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_5"
      op: "Identity"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_6"
      op: "Identity"
      input: "gradients/AddN_2:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_7"
      op: "Identity"
      input: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_8"
      op: "Identity"
      input: "gradients/AddN_10:sum:0"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_9"
      op: "Identity"
      input: "gradients/AddN_13:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 13
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_10"
      op: "Identity"
      input: "gradients/AddN_11:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_11"
      op: "Identity"
      input: "gradients/AddN_12:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_12"
      op: "Identity"
      input: "gradients/AddN_7:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_13"
      op: "Identity"
      input: "gradients/AddN_4:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_14"
      op: "Identity"
      input: "gradients/AddN_5:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_add_1_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_1_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_add_2_grad_shape_1_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_add_2_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_2_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_add_3_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_3_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_add_4_grad_shape_1_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_add_4_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_4_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_add_5_grad_shape_1_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_add_5_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_5_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_add_6_grad_shape_1_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_add_6_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_6_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_add_7_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/Add_7_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_add_grad_shape_1_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_add_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/add_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_clip_by_value_1_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_clip_by_value_1_minimum_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_1/Minimum_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_clip_by_value_2_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_clip_by_value_2_minimum_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_2/Minimum_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_clip_by_value_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_clip_by_value_minimum_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/clip_by_value/Minimum_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_1_grad_matmul_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_1_grad/MatMul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_2_grad_matmul_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_2_grad/MatMul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_3_grad_matmul_1_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_3_grad/MatMul_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_3_grad_matmul_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_3_grad/MatMul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_4_grad_matmul_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_4_grad/MatMul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_5_grad_matmul_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_5_grad/MatMul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_6_grad_matmul_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_6_grad/MatMul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_7_grad_matmul_1_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_7_grad/MatMul_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_7_grad_matmul_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_7_grad/MatMul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_matmul_grad_matmul_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/MatMul_grad/MatMul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_mul_1_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_1_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_mul_2_grad_shape_1_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_mul_2_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_2_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_mul_3_grad_shape_1_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_mul_3_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_3_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_mul_4_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_4_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_mul_5_grad_shape_1_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_mul_5_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/mul_5_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_0_mul_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_0/Mul_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_add_1_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_1_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_add_2_grad_shape_1_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_add_2_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_2_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_add_3_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_3_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_add_4_grad_shape_1_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_add_4_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_4_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_add_5_grad_shape_1_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_add_5_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_5_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_add_6_grad_shape_1_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_add_6_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_6_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_add_7_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/Add_7_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_add_grad_shape_1_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_add_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/add_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_clip_by_value_1_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_clip_by_value_1_minimum_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_1/Minimum_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_clip_by_value_2_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_clip_by_value_2_minimum_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_2/Minimum_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_clip_by_value_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_clip_by_value_minimum_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/clip_by_value/Minimum_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_1_grad_matmul_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_1_grad/MatMul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_2_grad_matmul_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_2_grad/MatMul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_3_grad_matmul_1_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_3_grad/MatMul_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_3_grad_matmul_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_3_grad/MatMul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_4_grad_matmul_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_4_grad/MatMul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_5_grad_matmul_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_5_grad/MatMul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_6_grad_matmul_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_6_grad/MatMul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_7_grad_matmul_1_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_7_grad/MatMul_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_7_grad_matmul_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_7_grad/MatMul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_matmul_grad_matmul_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/MatMul_grad/MatMul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_mul_1_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_1_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_mul_2_grad_shape_1_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_mul_2_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_2_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_mul_3_grad_shape_1_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_mul_3_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_3_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_mul_4_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_4_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_mul_5_grad_shape_1_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Shape_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_mul_5_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/mul_5_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_stacked_rnn_cells_lstm_layer_1_mul_grad_shape_tensorlistpopback"
      value: "gradients/stacked_rnn_cells/LSTM_Layer_1/Mul_grad/Shape/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistreserve_tensorlistpopback"
      value: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistreserve_tensorlistpopback_1"
      value: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack_1:output_handle:0"
    }
    ret {
      key: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistsetitem_tensorlistpopback"
      value: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListSetItem/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_tensorarrayv2write_tensorlistsetitem_grad_zeros_like_tensorlistpopback"
      value: "gradients/TensorArrayV2Write/TensorListSetItem_grad/zeros_like/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_10"
      value: "Identity_10:output:0"
    }
    ret {
      key: "identity_11"
      value: "Identity_11:output:0"
    }
    ret {
      key: "identity_12"
      value: "Identity_12:output:0"
    }
    ret {
      key: "identity_13"
      value: "Identity_13:output:0"
    }
    ret {
      key: "identity_14"
      value: "Identity_14:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    ret {
      key: "identity_5"
      value: "Identity_5:output:0"
    }
    ret {
      key: "identity_6"
      value: "Identity_6:output:0"
    }
    ret {
      key: "identity_7"
      value: "Identity_7:output:0"
    }
    ret {
      key: "identity_8"
      value: "Identity_8:output:0"
    }
    ret {
      key: "identity_9"
      value: "Identity_9:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
          }
          shape {
            dim {
              size: 13
            }
            dim {
              size: 128
            }
          }
          shape {
            dim {
              size: 128
            }
          }
          shape {
            dim {
              size: 32
            }
            dim {
              size: 128
            }
          }
          shape {
            dim {
              size: 32
            }
            dim {
              size: 128
            }
          }
          shape {
            dim {
              size: 128
            }
          }
          shape {
            dim {
              size: 32
            }
            dim {
              size: 128
            }
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 13
                }
                dim {
                  size: 128
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 32
                }
                dim {
                  size: 128
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 32
                }
                dim {
                  size: 128
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 128
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 32
                }
                dim {
                  size: 128
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 17
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 18
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 19
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 20
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 21
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 22
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 23
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 24
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 25
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 26
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 27
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 28
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 29
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 30
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 31
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 32
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 33
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 34
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 35
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 36
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 37
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 38
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 39
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 40
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 41
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 42
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 43
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 44
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 45
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 46
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 47
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 48
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 49
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 50
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 51
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 52
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 53
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 54
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 55
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 56
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 57
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 58
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 59
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 60
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 61
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 62
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 63
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 64
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 65
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 66
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 67
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 68
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 69
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 70
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 71
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 72
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 73
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 74
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 75
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 76
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 77
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 78
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 79
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 80
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 81
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 82
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 83
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 84
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 85
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 86
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 87
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 88
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 89
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 90
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 91
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 92
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 93
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 94
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "map_1_while_cond_4247"
      input_arg {
        name: "map_1_while_loop_counter"
        type: DT_INT32
      }
      input_arg {
        name: "map_1_strided_slice"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "less_map_1_strided_slice"
        type: DT_INT32
      }
      input_arg {
        name: "map_1_while_cond_4247___redundant_placeholder0"
        type: DT_VARIANT
      }
      input_arg {
        name: "map_1_while_cond_4247___redundant_placeholder1"
        type: DT_FLOAT
      }
      output_arg {
        name: "logicaland"
        type: DT_BOOL
      }
    }
    node_def {
      name: "Less"
      op: "Less"
      input: "placeholder"
      input: "less_map_1_strided_slice"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Less_1"
      op: "Less"
      input: "map_1_while_loop_counter"
      input: "map_1_strided_slice"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "LogicalAnd"
      op: "LogicalAnd"
      input: "Less_1:z:0"
      input: "Less:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "logicaland"
      value: "LogicalAnd:z:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "map_while_cond_4277"
      input_arg {
        name: "map_while_loop_counter"
        type: DT_INT32
      }
      input_arg {
        name: "map_while_maximum_iterations"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "map_while_cond_4277___redundant_placeholder0"
        type: DT_VARIANT
      }
      input_arg {
        name: "map_while_cond_4277___redundant_placeholder1"
        type: DT_FLOAT
      }
      output_arg {
        name: "logicaland"
        type: DT_BOOL
      }
    }
    node_def {
      name: "Less/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "Less"
      op: "Less"
      input: "placeholder"
      input: "Less/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Less_1"
      op: "Less"
      input: "map_while_loop_counter"
      input: "map_while_maximum_iterations"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "LogicalAnd"
      op: "LogicalAnd"
      input: "Less_1:z:0"
      input: "Less:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "logicaland"
      value: "LogicalAnd:z:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference_Dataset_flat_map_flat_map_fn_49"
      input_arg {
        name: "args_0"
        type: DT_INT32
      }
      input_arg {
        name: "generatordataset_args_0"
        type: DT_STRING
      }
      input_arg {
        name: "generatordataset_args_1"
        type: DT_STRING
      }
      output_arg {
        name: "identity"
        type: DT_VARIANT
      }
      is_stateful: true
      control_output: "GeneratorDataset"
    }
    node_def {
      name: "GeneratorDataset"
      op: "GeneratorDataset"
      input: "args_0"
      input: "generatordataset_args_0"
      input: "generatordataset_args_1"
      attr {
        key: "Tfinalize_func_args"
        value {
          list {
          }
        }
      }
      attr {
        key: "Tinit_func_args"
        value {
          list {
            type: DT_INT32
            type: DT_STRING
            type: DT_STRING
          }
        }
      }
      attr {
        key: "Tnext_func_args"
        value {
          list {
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "finalize_func"
        value {
          func {
            name: "__inference_Dataset_from_generator_finalize_fn_44"
            attr {
              key: "_tf_data_function"
              value {
                b: true
              }
            }
          }
        }
      }
      attr {
        key: "init_func"
        value {
          func {
            name: "__inference_Dataset_from_generator_get_iterator_id_fn_32"
            attr {
              key: "_tf_data_function"
              value {
                b: true
              }
            }
          }
        }
      }
      attr {
        key: "metadata"
        value {
          s: ""
        }
      }
      attr {
        key: "next_func"
        value {
          func {
            name: "__inference_Dataset_from_generator_generator_next_fn_39"
            attr {
              key: "_tf_data_function"
              value {
                b: true
              }
            }
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
              dim {
                size: 13
              }
            }
            shape {
              dim {
                size: 4
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_DATASET
          args {
            type_id: TFT_PRODUCT
            args {
              type_id: TFT_TENSOR
              args {
                type_id: TFT_FLOAT
              }
            }
            args {
              type_id: TFT_TENSOR
              args {
                type_id: TFT_FLOAT
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "GeneratorDataset:handle:0"
      input: "^NoOp"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "NoOp"
      op: "NoOp"
      input: "^GeneratorDataset"
      attr {
        key: "_acd_function_control_output"
        value {
          b: true
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
            dim {
              size: 2
            }
          }
          shape {
          }
        }
      }
    }
    attr {
      key: "_tf_data_function"
      value {
        b: true
      }
    }
    control_ret {
      key: "GeneratorDataset"
      value: "GeneratorDataset"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 2
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "RNN_net_while_cond_335"
      input_arg {
        name: "rnn_net_while_loop_counter"
        type: DT_INT32
      }
      input_arg {
        name: "rnn_net_while_maximum_iterations"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_2"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_3"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_4"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_5"
        type: DT_FLOAT
      }
      input_arg {
        name: "less_rnn_net_strided_slice_1"
        type: DT_INT32
      }
      input_arg {
        name: "rnn_net_while_cond_335___redundant_placeholder0"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_cond_335___redundant_placeholder1"
        type: DT_RESOURCE
      }
      input_arg {
        name: "rnn_net_while_cond_335___redundant_placeholder2"
        type: DT_RESOURCE
      }
      input_arg {
        name: "rnn_net_while_cond_335___redundant_placeholder3"
        type: DT_RESOURCE
      }
      input_arg {
        name: "rnn_net_while_cond_335___redundant_placeholder4"
        type: DT_RESOURCE
      }
      input_arg {
        name: "rnn_net_while_cond_335___redundant_placeholder5"
        type: DT_RESOURCE
      }
      input_arg {
        name: "rnn_net_while_cond_335___redundant_placeholder6"
        type: DT_RESOURCE
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_4"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_5"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_6"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_7"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_8"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_9"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_10"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_11"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_12"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_13"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_14"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_15"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_16"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_17"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_18"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_19"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_20"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_21"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_22"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_23"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_24"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_25"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_26"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_27"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_28"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_29"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_30"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_31"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_32"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_33"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_34"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_35"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_36"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_37"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_38"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_39"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_40"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_41"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_42"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_43"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_44"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_45"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_46"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_47"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_48"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_49"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_50"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_51"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_52"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_53"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_54"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_55"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_56"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_57"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_58"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_59"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_60"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_61"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_62"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_63"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_64"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_65"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_66"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_67"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_68"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_69"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_70"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_71"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_72"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_73"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_74"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_75"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_76"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_77"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_78"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_79"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_80"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_81"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_82"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_83"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_84"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_85"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_86"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_87"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_88"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_89"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_90"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_91"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_92"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_93"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_94"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_95"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_96"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_97"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_98"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_99"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_100"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_101"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_102"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_103"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_104"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_105"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_106"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_107"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_108"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_109"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_110"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_111"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_112"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_113"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_114"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_115"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_116"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_117"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_118"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_119"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_120"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_121"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_122"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_123"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_124"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_125"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_126"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_127"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_128"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_129"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_130"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_131"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_132"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_133"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_134"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_135"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_136"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_137"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_138"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_139"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_140"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_141"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_142"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_143"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_144"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_145"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_146"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_147"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_148"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_149"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_150"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_151"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_152"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_153"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_154"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_155"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_156"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_157"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_158"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_159"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_160"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_161"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_162"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_163"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_164"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_165"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_166"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_167"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_168"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_169"
        type: DT_VARIANT
      }
      input_arg {
        name: "rnn_net_while_emptytensorlist_170"
        type: DT_VARIANT
      }
      output_arg {
        name: "less"
        type: DT_BOOL
      }
    }
    node_def {
      name: "Less"
      op: "Less"
      input: "placeholder"
      input: "less_rnn_net_strided_slice_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "less"
      value: "Less:z:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 17
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 18
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 19
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 20
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 21
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 22
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 23
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 24
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 25
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 26
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 27
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 28
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 29
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 30
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 31
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 32
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 33
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 34
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 35
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 36
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 37
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 38
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 39
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 40
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 41
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 42
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 43
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 44
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 45
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 46
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 47
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 48
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 49
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 50
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 51
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 52
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 53
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 54
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 55
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 56
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 57
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 58
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 59
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 60
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 61
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 62
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 63
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 64
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 65
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 66
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 67
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 68
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 69
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 70
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 71
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 72
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 73
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 74
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 75
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 76
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 77
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 78
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 79
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 80
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 81
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 82
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 83
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 84
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 85
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 86
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 87
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 88
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 89
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 90
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 91
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 92
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 93
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 94
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 95
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 96
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 97
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 98
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 99
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 100
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 101
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 102
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 103
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 104
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 105
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 106
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 107
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 108
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 109
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 110
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 111
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 112
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 113
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 114
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 115
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 116
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 117
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 118
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 119
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 120
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 121
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 122
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 123
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 124
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 125
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 126
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 127
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 128
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 129
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 130
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 131
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 132
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 133
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 134
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 135
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 136
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 137
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 138
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 139
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 140
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 141
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 142
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 143
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 144
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 145
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 146
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 147
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 148
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 149
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 150
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 151
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 152
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 153
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 154
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 155
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 156
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 157
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 158
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 159
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 160
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 161
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 162
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 163
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 164
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 165
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 166
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 167
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 168
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 169
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 170
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 171
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 172
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 173
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 174
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 175
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 176
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 177
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 178
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 179
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 180
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 181
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 182
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 183
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 184
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 185
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 186
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "global_step_cond_true_6"
      input_arg {
        name: "read_readvariableop_global_step"
        type: DT_RESOURCE
        handle_data {
          dtype: DT_INT64
          shape {
          }
        }
      }
      input_arg {
        name: "placeholder"
        type: DT_INT64
      }
      output_arg {
        name: "identity"
        type: DT_INT64
      }
      is_stateful: true
    }
    node_def {
      name: "Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "read_readvariableop_global_step"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "Read/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "map_while_cond_4114"
      input_arg {
        name: "map_while_loop_counter"
        type: DT_INT32
      }
      input_arg {
        name: "map_strided_slice"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "less_map_strided_slice"
        type: DT_INT32
      }
      input_arg {
        name: "map_while_cond_4114___redundant_placeholder0"
        type: DT_VARIANT
      }
      input_arg {
        name: "map_while_cond_4114___redundant_placeholder1"
        type: DT_FLOAT
      }
      output_arg {
        name: "logicaland"
        type: DT_BOOL
      }
    }
    node_def {
      name: "Less"
      op: "Less"
      input: "placeholder"
      input: "less_map_strided_slice"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Less_1"
      op: "Less"
      input: "map_while_loop_counter"
      input: "map_strided_slice"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "LogicalAnd"
      op: "LogicalAnd"
      input: "Less_1:z:0"
      input: "Less:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "logicaland"
      value: "LogicalAnd:z:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "lstm_model_RNN_net_while_cond_2294"
      input_arg {
        name: "lstm_model_rnn_net_while_loop_counter"
        type: DT_INT32
      }
      input_arg {
        name: "lstm_model_rnn_net_while_maximum_iterations"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_2"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_3"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_4"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_5"
        type: DT_FLOAT
      }
      input_arg {
        name: "less_lstm_model_rnn_net_strided_slice_1"
        type: DT_INT32
      }
      input_arg {
        name: "lstm_model_rnn_net_while_cond_2294___redundant_placeholder0"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_cond_2294___redundant_placeholder1"
        type: DT_RESOURCE
      }
      input_arg {
        name: "lstm_model_rnn_net_while_cond_2294___redundant_placeholder2"
        type: DT_RESOURCE
      }
      input_arg {
        name: "lstm_model_rnn_net_while_cond_2294___redundant_placeholder3"
        type: DT_RESOURCE
      }
      input_arg {
        name: "lstm_model_rnn_net_while_cond_2294___redundant_placeholder4"
        type: DT_RESOURCE
      }
      input_arg {
        name: "lstm_model_rnn_net_while_cond_2294___redundant_placeholder5"
        type: DT_RESOURCE
      }
      input_arg {
        name: "lstm_model_rnn_net_while_cond_2294___redundant_placeholder6"
        type: DT_RESOURCE
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_4"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_5"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_6"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_7"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_8"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_9"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_10"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_11"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_12"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_13"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_14"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_15"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_16"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_17"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_18"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_19"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_20"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_21"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_22"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_23"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_24"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_25"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_26"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_27"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_28"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_29"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_30"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_31"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_32"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_33"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_34"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_35"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_36"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_37"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_38"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_39"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_40"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_41"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_42"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_43"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_44"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_45"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_46"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_47"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_48"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_49"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_50"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_51"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_52"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_53"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_54"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_55"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_56"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_57"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_58"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_59"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_60"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_61"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_62"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_63"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_64"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_65"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_66"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_67"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_68"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_69"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_70"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_71"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_72"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_73"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_74"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_75"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_76"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_77"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_78"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_79"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_80"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_81"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_82"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_83"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_84"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_85"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_86"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_87"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_88"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_89"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_90"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_91"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_92"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_93"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_94"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_95"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_96"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_97"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_98"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_99"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_100"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_101"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_102"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_103"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_104"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_105"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_106"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_107"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_108"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_109"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_110"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_111"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_112"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_113"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_114"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_115"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_116"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_117"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_118"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_119"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_120"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_121"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_122"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_123"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_124"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_125"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_126"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_127"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_128"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_129"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_130"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_131"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_132"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_133"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_134"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_135"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_136"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_137"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_138"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_139"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_140"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_141"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_142"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_143"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_144"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_145"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_146"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_147"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_148"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_149"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_150"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_151"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_152"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_153"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_154"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_155"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_156"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_157"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_158"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_159"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_160"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_161"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_162"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_163"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_164"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_165"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_166"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_167"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_168"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_169"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_model_rnn_net_while_emptytensorlist_170"
        type: DT_VARIANT
      }
      output_arg {
        name: "less"
        type: DT_BOOL
      }
    }
    node_def {
      name: "Less"
      op: "Less"
      input: "placeholder"
      input: "less_lstm_model_rnn_net_strided_slice_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "less"
      value: "Less:z:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
            dim {
              size: -1
            }
            dim {
              size: 32
            }
          }
          shape {
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
            unknown_rank: true
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: -1
                }
                dim {
                  size: 32
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 17
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 18
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 19
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 20
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 21
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 22
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 23
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 24
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 25
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 26
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 27
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 28
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 29
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 30
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 31
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 32
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 33
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 34
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 35
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 36
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 37
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 38
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 39
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 40
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 41
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 42
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 43
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 44
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 45
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 46
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 47
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 48
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 49
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 50
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 51
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 52
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 53
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 54
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 55
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 56
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 57
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 58
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 59
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 60
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 61
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 62
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 63
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 64
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 65
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 66
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 67
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 68
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 69
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 70
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 71
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 72
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 73
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 74
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 75
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 76
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 77
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 78
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 79
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 80
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 81
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 82
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 83
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 84
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 85
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 86
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 87
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 88
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 89
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 90
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 91
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 92
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 93
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 94
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 95
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 96
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 97
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 98
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 99
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 100
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 101
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 102
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 103
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 104
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 105
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 106
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 107
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 108
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 109
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 110
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 111
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 112
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 113
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 114
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 115
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 116
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 117
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 118
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 119
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 120
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 121
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 122
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 123
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 124
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 125
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 126
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 127
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 128
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 129
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 130
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 131
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 132
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 133
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 134
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 135
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 136
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 137
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 138
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 139
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 140
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 141
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 142
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 143
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 144
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 145
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 146
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 147
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 148
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 149
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 150
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 151
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 152
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 153
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 154
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 155
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 156
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 157
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 158
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 159
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 160
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 161
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 162
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 163
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 164
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 165
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 166
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 167
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 168
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 169
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 170
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 171
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 172
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 173
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 174
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 175
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 176
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 177
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 178
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 179
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 180
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 181
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 182
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 183
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 184
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 185
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 186
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "map_while_body_4145"
      input_arg {
        name: "map_while_loop_counter_1"
        type: DT_INT32
      }
      input_arg {
        name: "map_while_maximum_iterations_0"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorarrayv2read_tensorlistgetitem_map_tensorarrayunstack_tensorlistfromtensor_0"
        type: DT_VARIANT
      }
      input_arg {
        name: "strided_slice_const_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "add_2"
        type: DT_INT32
      }
      output_arg {
        name: "map_while_maximum_iterations"
        type: DT_INT32
      }
      output_arg {
        name: "add_1"
        type: DT_INT32
      }
      output_arg {
        name: "tensorarrayv2write_tensorlistsetitem"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorarrayv2read_tensorlistgetitem_map_tensorarrayunstack_tensorlistfromtensor"
        type: DT_VARIANT
      }
      output_arg {
        name: "strided_slice_const"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "TensorArrayV2Read/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "TensorArrayV2Read/TensorListGetItem"
      op: "TensorListGetItem"
      input: "tensorarrayv2read_tensorlistgetitem_map_tensorarrayunstack_tensorlistfromtensor_0"
      input: "placeholder"
      input: "TensorArrayV2Read/Const:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "add/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add"
      op: "AddV2"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      input: "add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack"
      op: "Pack"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "strided_slice/stack_1"
      op: "Pack"
      input: "add:z:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice"
      op: "StridedSlice"
      input: "strided_slice_const_0"
      input: "strided_slice/stack:output:0"
      input: "strided_slice/stack_1:output:0"
      input: "strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "TensorArrayV2Write/TensorListSetItem"
      op: "TensorListSetItem"
      input: "placeholder_1"
      input: "placeholder"
      input: "strided_slice:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "add_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add_1_0"
      op: "AddV2"
      input: "placeholder"
      input: "add_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "add_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add_2_0"
      op: "AddV2"
      input: "map_while_loop_counter_1"
      input: "add_2/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    ret {
      key: "add_1"
      value: "add_1_0:z:0"
    }
    ret {
      key: "add_2"
      value: "add_2_0:z:0"
    }
    ret {
      key: "map_while_maximum_iterations"
      value: "map_while_maximum_iterations_0"
    }
    ret {
      key: "strided_slice_const"
      value: "strided_slice_const_0"
    }
    ret {
      key: "tensorarrayv2read_tensorlistgetitem_map_tensorarrayunstack_tensorlistfromtensor"
      value: "tensorarrayv2read_tensorlistgetitem_map_tensorarrayunstack_tensorlistfromtensor_0"
    }
    ret {
      key: "tensorarrayv2write_tensorlistsetitem"
      value: "TensorArrayV2Write/TensorListSetItem:output_handle:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            dim {
              size: 5
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 5
                }
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "map_1_while_body_4248"
      input_arg {
        name: "map_1_while_loop_counter"
        type: DT_INT32
      }
      input_arg {
        name: "map_1_strided_slice_0"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "map_1_strided_slice_1_0"
        type: DT_INT32
      }
      input_arg {
        name: "tensorarrayv2read_tensorlistgetitem_map_1_tensorarrayunstack_tensorlistfromtensor_0"
        type: DT_VARIANT
      }
      input_arg {
        name: "map_while_const_1_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "add_1"
        type: DT_INT32
      }
      output_arg {
        name: "map_1_strided_slice"
        type: DT_INT32
      }
      output_arg {
        name: "add"
        type: DT_INT32
      }
      output_arg {
        name: "tensorarrayv2write_tensorlistsetitem"
        type: DT_VARIANT
      }
      output_arg {
        name: "map_1_strided_slice_1"
        type: DT_INT32
      }
      output_arg {
        name: "tensorarrayv2read_tensorlistgetitem_map_1_tensorarrayunstack_tensorlistfromtensor"
        type: DT_VARIANT
      }
      output_arg {
        name: "map_while_const_1"
        type: DT_FLOAT
      }
    }
    node_def {
      name: "TensorArrayV2Read/TensorListGetItem/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "TensorArrayV2Read/TensorListGetItem"
      op: "TensorListGetItem"
      input: "tensorarrayv2read_tensorlistgetitem_map_1_tensorarrayunstack_tensorlistfromtensor_0"
      input: "placeholder"
      input: "TensorArrayV2Read/TensorListGetItem/element_shape:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "map/TensorArrayV2/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "map/TensorArrayV2/num_elements"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "map/TensorArrayV2"
      op: "TensorListReserve"
      input: "map/TensorArrayV2/element_shape:output:0"
      input: "map/TensorArrayV2/num_elements:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "shape_type"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "map/TensorArrayUnstack/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "map/TensorArrayUnstack/TensorListFromTensor"
      op: "TensorListFromTensor"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      input: "map/TensorArrayUnstack/Const:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "shape_type"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "map/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "map/TensorArrayV2_1/element_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "map/TensorArrayV2_1/num_elements"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "map/TensorArrayV2_1"
      op: "TensorListReserve"
      input: "map/TensorArrayV2_1/element_shape:output:0"
      input: "map/TensorArrayV2_1/num_elements:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape_type"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "map/while/maximum_iterations"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "map/while/loop_counter"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "map/while"
      op: "StatelessWhile"
      input: "map/while/loop_counter:output:0"
      input: "map/while/maximum_iterations:output:0"
      input: "map/Const:output:0"
      input: "map/TensorArrayV2_1:handle:0"
      input: "map/TensorArrayUnstack/TensorListFromTensor:output_handle:0"
      input: "map_while_const_1_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_INT32
            type: DT_INT32
            type: DT_INT32
            type: DT_VARIANT
            type: DT_VARIANT
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "_lower_using_switch_merge"
        value {
          b: true
        }
      }
      attr {
        key: "_num_original_outputs"
        value {
          i: 6
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
              dim {
                size: 5
              }
            }
          }
        }
      }
      attr {
        key: "_read_only_resource_inputs"
        value {
          list {
          }
        }
      }
      attr {
        key: "_stateful_parallelism"
        value {
          b: false
        }
      }
      attr {
        key: "body"
        value {
          func {
            name: "map_while_body_4278"
          }
        }
      }
      attr {
        key: "cond"
        value {
          func {
            name: "map_while_cond_4277"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
              dim {
                size: 5
              }
            }
          }
        }
      }
      attr {
        key: "parallel_iterations"
        value {
          i: 10
        }
      }
    }
    node_def {
      name: "map/TensorArrayV2Stack/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "map/TensorArrayV2Stack/TensorListStack"
      op: "TensorListStack"
      input: "map/while:output:3"
      input: "map/TensorArrayV2Stack/Const:output:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "num_elements"
        value {
          i: 4
        }
      }
    }
    node_def {
      name: "TensorArrayV2Write/TensorListSetItem"
      op: "TensorListSetItem"
      input: "placeholder_1"
      input: "placeholder"
      input: "map/TensorArrayV2Stack/TensorListStack:tensor:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "add/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add_0"
      op: "AddV2"
      input: "placeholder"
      input: "add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "add_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add_1_0"
      op: "AddV2"
      input: "map_1_while_loop_counter"
      input: "add_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    ret {
      key: "add"
      value: "add_0:z:0"
    }
    ret {
      key: "add_1"
      value: "add_1_0:z:0"
    }
    ret {
      key: "map_1_strided_slice"
      value: "map_1_strided_slice_0"
    }
    ret {
      key: "map_1_strided_slice_1"
      value: "map_1_strided_slice_1_0"
    }
    ret {
      key: "map_while_const_1"
      value: "map_while_const_1_0"
    }
    ret {
      key: "tensorarrayv2read_tensorlistgetitem_map_1_tensorarrayunstack_tensorlistfromtensor"
      value: "tensorarrayv2read_tensorlistgetitem_map_1_tensorarrayunstack_tensorlistfromtensor_0"
    }
    ret {
      key: "tensorarrayv2write_tensorlistsetitem"
      value: "TensorArrayV2Write/TensorListSetItem:output_handle:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
          }
          shape {
            dim {
              size: 5
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 5
                }
              }
            }
          }
        }
      }
    }
  }
}
versions {
  producer: 1087
  min_consumer: 12
}
